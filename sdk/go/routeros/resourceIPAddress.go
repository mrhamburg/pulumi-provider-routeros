// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourceIPAddress(ctx, "address", &routeros.ResourceIPAddressArgs{
//				Address:   pulumi.String("10.0.0.1"),
//				Interface: pulumi.String("bridge"),
//				Network:   pulumi.String("10.0.0.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #The ID can be found via API or the terminal #The command for the terminal is -> :put [/ip/address get [print show-ids]]
//
// ```sh
//
//	$ pulumi import routeros:index/resourceIPAddress:ResourceIPAddress address "*0"
//
// ```
type ResourceIPAddress struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// Name of the actual interface the logical one is bound to.
	ActualInterface pulumi.StringOutput `pulumi:"actualInterface"`
	// IP address.
	Address  pulumi.StringOutput    `pulumi:"address"`
	Comment  pulumi.StringPtrOutput `pulumi:"comment"`
	Disabled pulumi.BoolPtrOutput   `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolOutput `pulumi:"dynamic"`
	// Name of the interface.
	Interface pulumi.StringOutput `pulumi:"interface"`
	Invalid   pulumi.BoolOutput   `pulumi:"invalid"`
	// IP address for the network. For point-to-point links it should be the address of the remote end. Starting from v5RC6 this parameter is configurable only for addresses with /32 netmask (point to point links)
	Network pulumi.StringOutput `pulumi:"network"`
}

// NewResourceIPAddress registers a new resource with the given unique name, arguments, and options.
func NewResourceIPAddress(ctx *pulumi.Context,
	name string, args *ResourceIPAddressArgs, opts ...pulumi.ResourceOption) (*ResourceIPAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	var resource ResourceIPAddress
	err := ctx.RegisterResource("routeros:index/resourceIPAddress:ResourceIPAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceIPAddress gets an existing ResourceIPAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceIPAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceIPAddressState, opts ...pulumi.ResourceOption) (*ResourceIPAddress, error) {
	var resource ResourceIPAddress
	err := ctx.ReadResource("routeros:index/resourceIPAddress:ResourceIPAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceIPAddress resources.
type resourceIPAddressState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Name of the actual interface the logical one is bound to.
	ActualInterface *string `pulumi:"actualInterface"`
	// IP address.
	Address  *string `pulumi:"address"`
	Comment  *string `pulumi:"comment"`
	Disabled *bool   `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic *bool `pulumi:"dynamic"`
	// Name of the interface.
	Interface *string `pulumi:"interface"`
	Invalid   *bool   `pulumi:"invalid"`
	// IP address for the network. For point-to-point links it should be the address of the remote end. Starting from v5RC6 this parameter is configurable only for addresses with /32 netmask (point to point links)
	Network *string `pulumi:"network"`
}

type ResourceIPAddressState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Name of the actual interface the logical one is bound to.
	ActualInterface pulumi.StringPtrInput
	// IP address.
	Address  pulumi.StringPtrInput
	Comment  pulumi.StringPtrInput
	Disabled pulumi.BoolPtrInput
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolPtrInput
	// Name of the interface.
	Interface pulumi.StringPtrInput
	Invalid   pulumi.BoolPtrInput
	// IP address for the network. For point-to-point links it should be the address of the remote end. Starting from v5RC6 this parameter is configurable only for addresses with /32 netmask (point to point links)
	Network pulumi.StringPtrInput
}

func (ResourceIPAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceIPAddressState)(nil)).Elem()
}

type resourceIPAddressArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// IP address.
	Address  string  `pulumi:"address"`
	Comment  *string `pulumi:"comment"`
	Disabled *bool   `pulumi:"disabled"`
	// Name of the interface.
	Interface string `pulumi:"interface"`
	// IP address for the network. For point-to-point links it should be the address of the remote end. Starting from v5RC6 this parameter is configurable only for addresses with /32 netmask (point to point links)
	Network *string `pulumi:"network"`
}

// The set of arguments for constructing a ResourceIPAddress resource.
type ResourceIPAddressArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// IP address.
	Address  pulumi.StringInput
	Comment  pulumi.StringPtrInput
	Disabled pulumi.BoolPtrInput
	// Name of the interface.
	Interface pulumi.StringInput
	// IP address for the network. For point-to-point links it should be the address of the remote end. Starting from v5RC6 this parameter is configurable only for addresses with /32 netmask (point to point links)
	Network pulumi.StringPtrInput
}

func (ResourceIPAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceIPAddressArgs)(nil)).Elem()
}

type ResourceIPAddressInput interface {
	pulumi.Input

	ToResourceIPAddressOutput() ResourceIPAddressOutput
	ToResourceIPAddressOutputWithContext(ctx context.Context) ResourceIPAddressOutput
}

func (*ResourceIPAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIPAddress)(nil)).Elem()
}

func (i *ResourceIPAddress) ToResourceIPAddressOutput() ResourceIPAddressOutput {
	return i.ToResourceIPAddressOutputWithContext(context.Background())
}

func (i *ResourceIPAddress) ToResourceIPAddressOutputWithContext(ctx context.Context) ResourceIPAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIPAddressOutput)
}

// ResourceIPAddressArrayInput is an input type that accepts ResourceIPAddressArray and ResourceIPAddressArrayOutput values.
// You can construct a concrete instance of `ResourceIPAddressArrayInput` via:
//
//	ResourceIPAddressArray{ ResourceIPAddressArgs{...} }
type ResourceIPAddressArrayInput interface {
	pulumi.Input

	ToResourceIPAddressArrayOutput() ResourceIPAddressArrayOutput
	ToResourceIPAddressArrayOutputWithContext(context.Context) ResourceIPAddressArrayOutput
}

type ResourceIPAddressArray []ResourceIPAddressInput

func (ResourceIPAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceIPAddress)(nil)).Elem()
}

func (i ResourceIPAddressArray) ToResourceIPAddressArrayOutput() ResourceIPAddressArrayOutput {
	return i.ToResourceIPAddressArrayOutputWithContext(context.Background())
}

func (i ResourceIPAddressArray) ToResourceIPAddressArrayOutputWithContext(ctx context.Context) ResourceIPAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIPAddressArrayOutput)
}

// ResourceIPAddressMapInput is an input type that accepts ResourceIPAddressMap and ResourceIPAddressMapOutput values.
// You can construct a concrete instance of `ResourceIPAddressMapInput` via:
//
//	ResourceIPAddressMap{ "key": ResourceIPAddressArgs{...} }
type ResourceIPAddressMapInput interface {
	pulumi.Input

	ToResourceIPAddressMapOutput() ResourceIPAddressMapOutput
	ToResourceIPAddressMapOutputWithContext(context.Context) ResourceIPAddressMapOutput
}

type ResourceIPAddressMap map[string]ResourceIPAddressInput

func (ResourceIPAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceIPAddress)(nil)).Elem()
}

func (i ResourceIPAddressMap) ToResourceIPAddressMapOutput() ResourceIPAddressMapOutput {
	return i.ToResourceIPAddressMapOutputWithContext(context.Background())
}

func (i ResourceIPAddressMap) ToResourceIPAddressMapOutputWithContext(ctx context.Context) ResourceIPAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIPAddressMapOutput)
}

type ResourceIPAddressOutput struct{ *pulumi.OutputState }

func (ResourceIPAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIPAddress)(nil)).Elem()
}

func (o ResourceIPAddressOutput) ToResourceIPAddressOutput() ResourceIPAddressOutput {
	return o
}

func (o ResourceIPAddressOutput) ToResourceIPAddressOutputWithContext(ctx context.Context) ResourceIPAddressOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceIPAddressOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceIPAddressOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// Name of the actual interface the logical one is bound to.
func (o ResourceIPAddressOutput) ActualInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.StringOutput { return v.ActualInterface }).(pulumi.StringOutput)
}

// IP address.
func (o ResourceIPAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

func (o ResourceIPAddressOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ResourceIPAddressOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
func (o ResourceIPAddressOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.BoolOutput { return v.Dynamic }).(pulumi.BoolOutput)
}

// Name of the interface.
func (o ResourceIPAddressOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o ResourceIPAddressOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.BoolOutput { return v.Invalid }).(pulumi.BoolOutput)
}

// IP address for the network. For point-to-point links it should be the address of the remote end. Starting from v5RC6 this parameter is configurable only for addresses with /32 netmask (point to point links)
func (o ResourceIPAddressOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceIPAddress) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

type ResourceIPAddressArrayOutput struct{ *pulumi.OutputState }

func (ResourceIPAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceIPAddress)(nil)).Elem()
}

func (o ResourceIPAddressArrayOutput) ToResourceIPAddressArrayOutput() ResourceIPAddressArrayOutput {
	return o
}

func (o ResourceIPAddressArrayOutput) ToResourceIPAddressArrayOutputWithContext(ctx context.Context) ResourceIPAddressArrayOutput {
	return o
}

func (o ResourceIPAddressArrayOutput) Index(i pulumi.IntInput) ResourceIPAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceIPAddress {
		return vs[0].([]*ResourceIPAddress)[vs[1].(int)]
	}).(ResourceIPAddressOutput)
}

type ResourceIPAddressMapOutput struct{ *pulumi.OutputState }

func (ResourceIPAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceIPAddress)(nil)).Elem()
}

func (o ResourceIPAddressMapOutput) ToResourceIPAddressMapOutput() ResourceIPAddressMapOutput {
	return o
}

func (o ResourceIPAddressMapOutput) ToResourceIPAddressMapOutputWithContext(ctx context.Context) ResourceIPAddressMapOutput {
	return o
}

func (o ResourceIPAddressMapOutput) MapIndex(k pulumi.StringInput) ResourceIPAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceIPAddress {
		return vs[0].(map[string]*ResourceIPAddress)[vs[1].(string)]
	}).(ResourceIPAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceIPAddressInput)(nil)).Elem(), &ResourceIPAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceIPAddressArrayInput)(nil)).Elem(), ResourceIPAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceIPAddressMapInput)(nil)).Elem(), ResourceIPAddressMap{})
	pulumi.RegisterOutputType(ResourceIPAddressOutput{})
	pulumi.RegisterOutputType(ResourceIPAddressArrayOutput{})
	pulumi.RegisterOutputType(ResourceIPAddressMapOutput{})
}
