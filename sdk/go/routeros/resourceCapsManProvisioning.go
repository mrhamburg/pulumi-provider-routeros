// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			testConfiguration, err := routeros.NewResourceCapsManConfiguration(ctx, "testConfiguration", nil)
//			if err != nil {
//				return err
//			}
//			_, err = routeros.NewResourceCapsManProvisioning(ctx, "testProvisioning", &routeros.ResourceCapsManProvisioningArgs{
//				MasterConfiguration: pulumi.String("cfg1"),
//				Action:              pulumi.String("create-disabled"),
//				NamePrefix:          pulumi.String("cap-"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				testConfiguration,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #The ID can be found via API or the terminal #The command for the terminal is ->
//
// :put [/caps-man/provisioning get [print show-ids]]
//
// ```sh
//
//	$ pulumi import routeros:index/resourceCapsManProvisioning:ResourceCapsManProvisioning test_provisioning "*B"
//
// ```
type ResourceCapsManProvisioning struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// Provisioning action.
	Action  pulumi.StringPtrOutput `pulumi:"action"`
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Regular expression to match radios by common name. Each CAP's common name identifier can be found under "/caps-man radio" as value "REMOTE-CAP-NAME"
	CommonNameRegexp pulumi.StringPtrOutput `pulumi:"commonNameRegexp"`
	Disabled         pulumi.BoolPtrOutput   `pulumi:"disabled"`
	// Match radios by supported wireless modes.
	HwSupportedModes pulumi.StringPtrOutput `pulumi:"hwSupportedModes"`
	// Regular expression to match radios by router identity.
	IdentityRegexp pulumi.StringPtrOutput `pulumi:"identityRegexp"`
	// Match CAPs with IPs within configured address range.
	IpAddressRanges pulumi.StringPtrOutput `pulumi:"ipAddressRanges"`
	// If action specifies to create interfaces, then a new master interface with its configuration set to this configuration profile will be created
	MasterConfiguration pulumi.StringOutput `pulumi:"masterConfiguration"`
	// Specify the syntax of the CAP interface name creation.
	NameFormat pulumi.StringPtrOutput `pulumi:"nameFormat"`
	// Name prefix which can be used in the name-format for creating the CAP interface names.
	NamePrefix pulumi.StringPtrOutput `pulumi:"namePrefix"`
	// MAC address of radio to be matched, empty MAC (00:00:00:00:00:00) means match all MAC addresses.
	RadioMac pulumi.StringPtrOutput `pulumi:"radioMac"`
	// If action specifies to create interfaces, then a new slave interface for each configuration profile in this list is created.
	SlaveConfigurations pulumi.StringPtrOutput `pulumi:"slaveConfigurations"`
}

// NewResourceCapsManProvisioning registers a new resource with the given unique name, arguments, and options.
func NewResourceCapsManProvisioning(ctx *pulumi.Context,
	name string, args *ResourceCapsManProvisioningArgs, opts ...pulumi.ResourceOption) (*ResourceCapsManProvisioning, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MasterConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'MasterConfiguration'")
	}
	var resource ResourceCapsManProvisioning
	err := ctx.RegisterResource("routeros:index/resourceCapsManProvisioning:ResourceCapsManProvisioning", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceCapsManProvisioning gets an existing ResourceCapsManProvisioning resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceCapsManProvisioning(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceCapsManProvisioningState, opts ...pulumi.ResourceOption) (*ResourceCapsManProvisioning, error) {
	var resource ResourceCapsManProvisioning
	err := ctx.ReadResource("routeros:index/resourceCapsManProvisioning:ResourceCapsManProvisioning", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceCapsManProvisioning resources.
type resourceCapsManProvisioningState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Provisioning action.
	Action  *string `pulumi:"action"`
	Comment *string `pulumi:"comment"`
	// Regular expression to match radios by common name. Each CAP's common name identifier can be found under "/caps-man radio" as value "REMOTE-CAP-NAME"
	CommonNameRegexp *string `pulumi:"commonNameRegexp"`
	Disabled         *bool   `pulumi:"disabled"`
	// Match radios by supported wireless modes.
	HwSupportedModes *string `pulumi:"hwSupportedModes"`
	// Regular expression to match radios by router identity.
	IdentityRegexp *string `pulumi:"identityRegexp"`
	// Match CAPs with IPs within configured address range.
	IpAddressRanges *string `pulumi:"ipAddressRanges"`
	// If action specifies to create interfaces, then a new master interface with its configuration set to this configuration profile will be created
	MasterConfiguration *string `pulumi:"masterConfiguration"`
	// Specify the syntax of the CAP interface name creation.
	NameFormat *string `pulumi:"nameFormat"`
	// Name prefix which can be used in the name-format for creating the CAP interface names.
	NamePrefix *string `pulumi:"namePrefix"`
	// MAC address of radio to be matched, empty MAC (00:00:00:00:00:00) means match all MAC addresses.
	RadioMac *string `pulumi:"radioMac"`
	// If action specifies to create interfaces, then a new slave interface for each configuration profile in this list is created.
	SlaveConfigurations *string `pulumi:"slaveConfigurations"`
}

type ResourceCapsManProvisioningState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Provisioning action.
	Action  pulumi.StringPtrInput
	Comment pulumi.StringPtrInput
	// Regular expression to match radios by common name. Each CAP's common name identifier can be found under "/caps-man radio" as value "REMOTE-CAP-NAME"
	CommonNameRegexp pulumi.StringPtrInput
	Disabled         pulumi.BoolPtrInput
	// Match radios by supported wireless modes.
	HwSupportedModes pulumi.StringPtrInput
	// Regular expression to match radios by router identity.
	IdentityRegexp pulumi.StringPtrInput
	// Match CAPs with IPs within configured address range.
	IpAddressRanges pulumi.StringPtrInput
	// If action specifies to create interfaces, then a new master interface with its configuration set to this configuration profile will be created
	MasterConfiguration pulumi.StringPtrInput
	// Specify the syntax of the CAP interface name creation.
	NameFormat pulumi.StringPtrInput
	// Name prefix which can be used in the name-format for creating the CAP interface names.
	NamePrefix pulumi.StringPtrInput
	// MAC address of radio to be matched, empty MAC (00:00:00:00:00:00) means match all MAC addresses.
	RadioMac pulumi.StringPtrInput
	// If action specifies to create interfaces, then a new slave interface for each configuration profile in this list is created.
	SlaveConfigurations pulumi.StringPtrInput
}

func (ResourceCapsManProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceCapsManProvisioningState)(nil)).Elem()
}

type resourceCapsManProvisioningArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Provisioning action.
	Action  *string `pulumi:"action"`
	Comment *string `pulumi:"comment"`
	// Regular expression to match radios by common name. Each CAP's common name identifier can be found under "/caps-man radio" as value "REMOTE-CAP-NAME"
	CommonNameRegexp *string `pulumi:"commonNameRegexp"`
	Disabled         *bool   `pulumi:"disabled"`
	// Match radios by supported wireless modes.
	HwSupportedModes *string `pulumi:"hwSupportedModes"`
	// Regular expression to match radios by router identity.
	IdentityRegexp *string `pulumi:"identityRegexp"`
	// Match CAPs with IPs within configured address range.
	IpAddressRanges *string `pulumi:"ipAddressRanges"`
	// If action specifies to create interfaces, then a new master interface with its configuration set to this configuration profile will be created
	MasterConfiguration string `pulumi:"masterConfiguration"`
	// Specify the syntax of the CAP interface name creation.
	NameFormat *string `pulumi:"nameFormat"`
	// Name prefix which can be used in the name-format for creating the CAP interface names.
	NamePrefix *string `pulumi:"namePrefix"`
	// MAC address of radio to be matched, empty MAC (00:00:00:00:00:00) means match all MAC addresses.
	RadioMac *string `pulumi:"radioMac"`
	// If action specifies to create interfaces, then a new slave interface for each configuration profile in this list is created.
	SlaveConfigurations *string `pulumi:"slaveConfigurations"`
}

// The set of arguments for constructing a ResourceCapsManProvisioning resource.
type ResourceCapsManProvisioningArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Provisioning action.
	Action  pulumi.StringPtrInput
	Comment pulumi.StringPtrInput
	// Regular expression to match radios by common name. Each CAP's common name identifier can be found under "/caps-man radio" as value "REMOTE-CAP-NAME"
	CommonNameRegexp pulumi.StringPtrInput
	Disabled         pulumi.BoolPtrInput
	// Match radios by supported wireless modes.
	HwSupportedModes pulumi.StringPtrInput
	// Regular expression to match radios by router identity.
	IdentityRegexp pulumi.StringPtrInput
	// Match CAPs with IPs within configured address range.
	IpAddressRanges pulumi.StringPtrInput
	// If action specifies to create interfaces, then a new master interface with its configuration set to this configuration profile will be created
	MasterConfiguration pulumi.StringInput
	// Specify the syntax of the CAP interface name creation.
	NameFormat pulumi.StringPtrInput
	// Name prefix which can be used in the name-format for creating the CAP interface names.
	NamePrefix pulumi.StringPtrInput
	// MAC address of radio to be matched, empty MAC (00:00:00:00:00:00) means match all MAC addresses.
	RadioMac pulumi.StringPtrInput
	// If action specifies to create interfaces, then a new slave interface for each configuration profile in this list is created.
	SlaveConfigurations pulumi.StringPtrInput
}

func (ResourceCapsManProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceCapsManProvisioningArgs)(nil)).Elem()
}

type ResourceCapsManProvisioningInput interface {
	pulumi.Input

	ToResourceCapsManProvisioningOutput() ResourceCapsManProvisioningOutput
	ToResourceCapsManProvisioningOutputWithContext(ctx context.Context) ResourceCapsManProvisioningOutput
}

func (*ResourceCapsManProvisioning) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCapsManProvisioning)(nil)).Elem()
}

func (i *ResourceCapsManProvisioning) ToResourceCapsManProvisioningOutput() ResourceCapsManProvisioningOutput {
	return i.ToResourceCapsManProvisioningOutputWithContext(context.Background())
}

func (i *ResourceCapsManProvisioning) ToResourceCapsManProvisioningOutputWithContext(ctx context.Context) ResourceCapsManProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManProvisioningOutput)
}

// ResourceCapsManProvisioningArrayInput is an input type that accepts ResourceCapsManProvisioningArray and ResourceCapsManProvisioningArrayOutput values.
// You can construct a concrete instance of `ResourceCapsManProvisioningArrayInput` via:
//
//	ResourceCapsManProvisioningArray{ ResourceCapsManProvisioningArgs{...} }
type ResourceCapsManProvisioningArrayInput interface {
	pulumi.Input

	ToResourceCapsManProvisioningArrayOutput() ResourceCapsManProvisioningArrayOutput
	ToResourceCapsManProvisioningArrayOutputWithContext(context.Context) ResourceCapsManProvisioningArrayOutput
}

type ResourceCapsManProvisioningArray []ResourceCapsManProvisioningInput

func (ResourceCapsManProvisioningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceCapsManProvisioning)(nil)).Elem()
}

func (i ResourceCapsManProvisioningArray) ToResourceCapsManProvisioningArrayOutput() ResourceCapsManProvisioningArrayOutput {
	return i.ToResourceCapsManProvisioningArrayOutputWithContext(context.Background())
}

func (i ResourceCapsManProvisioningArray) ToResourceCapsManProvisioningArrayOutputWithContext(ctx context.Context) ResourceCapsManProvisioningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManProvisioningArrayOutput)
}

// ResourceCapsManProvisioningMapInput is an input type that accepts ResourceCapsManProvisioningMap and ResourceCapsManProvisioningMapOutput values.
// You can construct a concrete instance of `ResourceCapsManProvisioningMapInput` via:
//
//	ResourceCapsManProvisioningMap{ "key": ResourceCapsManProvisioningArgs{...} }
type ResourceCapsManProvisioningMapInput interface {
	pulumi.Input

	ToResourceCapsManProvisioningMapOutput() ResourceCapsManProvisioningMapOutput
	ToResourceCapsManProvisioningMapOutputWithContext(context.Context) ResourceCapsManProvisioningMapOutput
}

type ResourceCapsManProvisioningMap map[string]ResourceCapsManProvisioningInput

func (ResourceCapsManProvisioningMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceCapsManProvisioning)(nil)).Elem()
}

func (i ResourceCapsManProvisioningMap) ToResourceCapsManProvisioningMapOutput() ResourceCapsManProvisioningMapOutput {
	return i.ToResourceCapsManProvisioningMapOutputWithContext(context.Background())
}

func (i ResourceCapsManProvisioningMap) ToResourceCapsManProvisioningMapOutputWithContext(ctx context.Context) ResourceCapsManProvisioningMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManProvisioningMapOutput)
}

type ResourceCapsManProvisioningOutput struct{ *pulumi.OutputState }

func (ResourceCapsManProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCapsManProvisioning)(nil)).Elem()
}

func (o ResourceCapsManProvisioningOutput) ToResourceCapsManProvisioningOutput() ResourceCapsManProvisioningOutput {
	return o
}

func (o ResourceCapsManProvisioningOutput) ToResourceCapsManProvisioningOutputWithContext(ctx context.Context) ResourceCapsManProvisioningOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceCapsManProvisioningOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceCapsManProvisioningOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// Provisioning action.
func (o ResourceCapsManProvisioningOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

func (o ResourceCapsManProvisioningOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Regular expression to match radios by common name. Each CAP's common name identifier can be found under "/caps-man radio" as value "REMOTE-CAP-NAME"
func (o ResourceCapsManProvisioningOutput) CommonNameRegexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.CommonNameRegexp }).(pulumi.StringPtrOutput)
}

func (o ResourceCapsManProvisioningOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Match radios by supported wireless modes.
func (o ResourceCapsManProvisioningOutput) HwSupportedModes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.HwSupportedModes }).(pulumi.StringPtrOutput)
}

// Regular expression to match radios by router identity.
func (o ResourceCapsManProvisioningOutput) IdentityRegexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.IdentityRegexp }).(pulumi.StringPtrOutput)
}

// Match CAPs with IPs within configured address range.
func (o ResourceCapsManProvisioningOutput) IpAddressRanges() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.IpAddressRanges }).(pulumi.StringPtrOutput)
}

// If action specifies to create interfaces, then a new master interface with its configuration set to this configuration profile will be created
func (o ResourceCapsManProvisioningOutput) MasterConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringOutput { return v.MasterConfiguration }).(pulumi.StringOutput)
}

// Specify the syntax of the CAP interface name creation.
func (o ResourceCapsManProvisioningOutput) NameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.NameFormat }).(pulumi.StringPtrOutput)
}

// Name prefix which can be used in the name-format for creating the CAP interface names.
func (o ResourceCapsManProvisioningOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// MAC address of radio to be matched, empty MAC (00:00:00:00:00:00) means match all MAC addresses.
func (o ResourceCapsManProvisioningOutput) RadioMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.RadioMac }).(pulumi.StringPtrOutput)
}

// If action specifies to create interfaces, then a new slave interface for each configuration profile in this list is created.
func (o ResourceCapsManProvisioningOutput) SlaveConfigurations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManProvisioning) pulumi.StringPtrOutput { return v.SlaveConfigurations }).(pulumi.StringPtrOutput)
}

type ResourceCapsManProvisioningArrayOutput struct{ *pulumi.OutputState }

func (ResourceCapsManProvisioningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceCapsManProvisioning)(nil)).Elem()
}

func (o ResourceCapsManProvisioningArrayOutput) ToResourceCapsManProvisioningArrayOutput() ResourceCapsManProvisioningArrayOutput {
	return o
}

func (o ResourceCapsManProvisioningArrayOutput) ToResourceCapsManProvisioningArrayOutputWithContext(ctx context.Context) ResourceCapsManProvisioningArrayOutput {
	return o
}

func (o ResourceCapsManProvisioningArrayOutput) Index(i pulumi.IntInput) ResourceCapsManProvisioningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceCapsManProvisioning {
		return vs[0].([]*ResourceCapsManProvisioning)[vs[1].(int)]
	}).(ResourceCapsManProvisioningOutput)
}

type ResourceCapsManProvisioningMapOutput struct{ *pulumi.OutputState }

func (ResourceCapsManProvisioningMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceCapsManProvisioning)(nil)).Elem()
}

func (o ResourceCapsManProvisioningMapOutput) ToResourceCapsManProvisioningMapOutput() ResourceCapsManProvisioningMapOutput {
	return o
}

func (o ResourceCapsManProvisioningMapOutput) ToResourceCapsManProvisioningMapOutputWithContext(ctx context.Context) ResourceCapsManProvisioningMapOutput {
	return o
}

func (o ResourceCapsManProvisioningMapOutput) MapIndex(k pulumi.StringInput) ResourceCapsManProvisioningOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceCapsManProvisioning {
		return vs[0].(map[string]*ResourceCapsManProvisioning)[vs[1].(string)]
	}).(ResourceCapsManProvisioningOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManProvisioningInput)(nil)).Elem(), &ResourceCapsManProvisioning{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManProvisioningArrayInput)(nil)).Elem(), ResourceCapsManProvisioningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManProvisioningMapInput)(nil)).Elem(), ResourceCapsManProvisioningMap{})
	pulumi.RegisterOutputType(ResourceCapsManProvisioningOutput{})
	pulumi.RegisterOutputType(ResourceCapsManProvisioningArrayOutput{})
	pulumi.RegisterOutputType(ResourceCapsManProvisioningMapOutput{})
}
