// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func DatasourceIPAddresses(ctx *pulumi.Context, args *DatasourceIPAddressesArgs, opts ...pulumi.InvokeOption) (*DatasourceIPAddressesResult, error) {
	var rv DatasourceIPAddressesResult
	err := ctx.Invoke("routeros:index/datasourceIPAddresses:DatasourceIPAddresses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking DatasourceIPAddresses.
type DatasourceIPAddressesArgs struct {
	___id_   *int    `pulumi:"___id_"`
	___path_ *string `pulumi:"___path_"`
	// Additional request filtering options.
	Filter map[string]interface{} `pulumi:"filter"`
}

// A collection of values returned by DatasourceIPAddresses.
type DatasourceIPAddressesResult struct {
	___id_    *int                           `pulumi:"___id_"`
	___path_  *string                        `pulumi:"___path_"`
	Addresses []DatasourceIPAddressesAddress `pulumi:"addresses"`
	// Additional request filtering options.
	Filter map[string]interface{} `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func DatasourceIPAddressesOutput(ctx *pulumi.Context, args DatasourceIPAddressesOutputArgs, opts ...pulumi.InvokeOption) DatasourceIPAddressesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (DatasourceIPAddressesResult, error) {
			args := v.(DatasourceIPAddressesArgs)
			r, err := DatasourceIPAddresses(ctx, &args, opts...)
			var s DatasourceIPAddressesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(DatasourceIPAddressesResultOutput)
}

// A collection of arguments for invoking DatasourceIPAddresses.
type DatasourceIPAddressesOutputArgs struct {
	___id_   pulumi.IntPtrInput    `pulumi:"___id_"`
	___path_ pulumi.StringPtrInput `pulumi:"___path_"`
	// Additional request filtering options.
	Filter pulumi.MapInput `pulumi:"filter"`
}

func (DatasourceIPAddressesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPAddressesArgs)(nil)).Elem()
}

// A collection of values returned by DatasourceIPAddresses.
type DatasourceIPAddressesResultOutput struct{ *pulumi.OutputState }

func (DatasourceIPAddressesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPAddressesResult)(nil)).Elem()
}

func (o DatasourceIPAddressesResultOutput) ToDatasourceIPAddressesResultOutput() DatasourceIPAddressesResultOutput {
	return o
}

func (o DatasourceIPAddressesResultOutput) ToDatasourceIPAddressesResultOutputWithContext(ctx context.Context) DatasourceIPAddressesResultOutput {
	return o
}

func (o DatasourceIPAddressesResultOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatasourceIPAddressesResult) *int { return v.___id_ }).(pulumi.IntPtrOutput)
}

func (o DatasourceIPAddressesResultOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceIPAddressesResult) *string { return v.___path_ }).(pulumi.StringPtrOutput)
}

func (o DatasourceIPAddressesResultOutput) Addresses() DatasourceIPAddressesAddressArrayOutput {
	return o.ApplyT(func(v DatasourceIPAddressesResult) []DatasourceIPAddressesAddress { return v.Addresses }).(DatasourceIPAddressesAddressArrayOutput)
}

// Additional request filtering options.
func (o DatasourceIPAddressesResultOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v DatasourceIPAddressesResult) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o DatasourceIPAddressesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPAddressesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DatasourceIPAddressesResultOutput{})
}
