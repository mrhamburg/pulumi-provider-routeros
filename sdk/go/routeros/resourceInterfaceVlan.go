// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourceInterfaceVlan(ctx, "interfaceVlan", &routeros.ResourceInterfaceVlanArgs{
//				Interface: pulumi.String("bridge"),
//				VlanId:    pulumi.Int(50),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import with the name of the vlan interface in case of the example use VLAN_TEST
//
// ```sh
//
//	$ pulumi import routeros:index/resourceInterfaceVlan:ResourceInterfaceVlan interface_vlan VLAN_TEST
//
// ```
type ResourceInterfaceVlan struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// ARP resolution protocol mode.
	Arp pulumi.StringPtrOutput `pulumi:"arp"`
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout pulumi.StringPtrOutput `pulumi:"arpTimeout"`
	Comment    pulumi.StringPtrOutput `pulumi:"comment"`
	Disabled   pulumi.BoolPtrOutput   `pulumi:"disabled"`
	// Name of the interface.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Layer2 Maximum transmission unit.
	L2mtu                   pulumi.IntOutput       `pulumi:"l2mtu"`
	LoopProtect             pulumi.StringPtrOutput `pulumi:"loopProtect"`
	LoopProtectDisableTime  pulumi.StringPtrOutput `pulumi:"loopProtectDisableTime"`
	LoopProtectSendInterval pulumi.StringPtrOutput `pulumi:"loopProtectSendInterval"`
	LoopProtectStatus       pulumi.StringOutput    `pulumi:"loopProtectStatus"`
	MacAddress              pulumi.StringOutput    `pulumi:"macAddress"`
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu pulumi.StringOutput `pulumi:"mtu"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          pulumi.StringOutput  `pulumi:"name"`
	Running       pulumi.BoolOutput    `pulumi:"running"`
	UseServiceTag pulumi.BoolPtrOutput `pulumi:"useServiceTag"`
	VlanId        pulumi.IntOutput     `pulumi:"vlanId"`
}

// NewResourceInterfaceVlan registers a new resource with the given unique name, arguments, and options.
func NewResourceInterfaceVlan(ctx *pulumi.Context,
	name string, args *ResourceInterfaceVlanArgs, opts ...pulumi.ResourceOption) (*ResourceInterfaceVlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.VlanId == nil {
		return nil, errors.New("invalid value for required argument 'VlanId'")
	}
	var resource ResourceInterfaceVlan
	err := ctx.RegisterResource("routeros:index/resourceInterfaceVlan:ResourceInterfaceVlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceInterfaceVlan gets an existing ResourceInterfaceVlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceInterfaceVlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceInterfaceVlanState, opts ...pulumi.ResourceOption) (*ResourceInterfaceVlan, error) {
	var resource ResourceInterfaceVlan
	err := ctx.ReadResource("routeros:index/resourceInterfaceVlan:ResourceInterfaceVlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceInterfaceVlan resources.
type resourceInterfaceVlanState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// ARP resolution protocol mode.
	Arp *string `pulumi:"arp"`
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout *string `pulumi:"arpTimeout"`
	Comment    *string `pulumi:"comment"`
	Disabled   *bool   `pulumi:"disabled"`
	// Name of the interface.
	Interface *string `pulumi:"interface"`
	// Layer2 Maximum transmission unit.
	L2mtu                   *int    `pulumi:"l2mtu"`
	LoopProtect             *string `pulumi:"loopProtect"`
	LoopProtectDisableTime  *string `pulumi:"loopProtectDisableTime"`
	LoopProtectSendInterval *string `pulumi:"loopProtectSendInterval"`
	LoopProtectStatus       *string `pulumi:"loopProtectStatus"`
	MacAddress              *string `pulumi:"macAddress"`
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu *string `pulumi:"mtu"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          *string `pulumi:"name"`
	Running       *bool   `pulumi:"running"`
	UseServiceTag *bool   `pulumi:"useServiceTag"`
	VlanId        *int    `pulumi:"vlanId"`
}

type ResourceInterfaceVlanState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// ARP resolution protocol mode.
	Arp pulumi.StringPtrInput
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout pulumi.StringPtrInput
	Comment    pulumi.StringPtrInput
	Disabled   pulumi.BoolPtrInput
	// Name of the interface.
	Interface pulumi.StringPtrInput
	// Layer2 Maximum transmission unit.
	L2mtu                   pulumi.IntPtrInput
	LoopProtect             pulumi.StringPtrInput
	LoopProtectDisableTime  pulumi.StringPtrInput
	LoopProtectSendInterval pulumi.StringPtrInput
	LoopProtectStatus       pulumi.StringPtrInput
	MacAddress              pulumi.StringPtrInput
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu pulumi.StringPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          pulumi.StringPtrInput
	Running       pulumi.BoolPtrInput
	UseServiceTag pulumi.BoolPtrInput
	VlanId        pulumi.IntPtrInput
}

func (ResourceInterfaceVlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceInterfaceVlanState)(nil)).Elem()
}

type resourceInterfaceVlanArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// ARP resolution protocol mode.
	Arp *string `pulumi:"arp"`
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout *string `pulumi:"arpTimeout"`
	Comment    *string `pulumi:"comment"`
	Disabled   *bool   `pulumi:"disabled"`
	// Name of the interface.
	Interface               string  `pulumi:"interface"`
	LoopProtect             *string `pulumi:"loopProtect"`
	LoopProtectDisableTime  *string `pulumi:"loopProtectDisableTime"`
	LoopProtectSendInterval *string `pulumi:"loopProtectSendInterval"`
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu *string `pulumi:"mtu"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          *string `pulumi:"name"`
	UseServiceTag *bool   `pulumi:"useServiceTag"`
	VlanId        int     `pulumi:"vlanId"`
}

// The set of arguments for constructing a ResourceInterfaceVlan resource.
type ResourceInterfaceVlanArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// ARP resolution protocol mode.
	Arp pulumi.StringPtrInput
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout pulumi.StringPtrInput
	Comment    pulumi.StringPtrInput
	Disabled   pulumi.BoolPtrInput
	// Name of the interface.
	Interface               pulumi.StringInput
	LoopProtect             pulumi.StringPtrInput
	LoopProtectDisableTime  pulumi.StringPtrInput
	LoopProtectSendInterval pulumi.StringPtrInput
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu pulumi.StringPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          pulumi.StringPtrInput
	UseServiceTag pulumi.BoolPtrInput
	VlanId        pulumi.IntInput
}

func (ResourceInterfaceVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceInterfaceVlanArgs)(nil)).Elem()
}

type ResourceInterfaceVlanInput interface {
	pulumi.Input

	ToResourceInterfaceVlanOutput() ResourceInterfaceVlanOutput
	ToResourceInterfaceVlanOutputWithContext(ctx context.Context) ResourceInterfaceVlanOutput
}

func (*ResourceInterfaceVlan) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceInterfaceVlan)(nil)).Elem()
}

func (i *ResourceInterfaceVlan) ToResourceInterfaceVlanOutput() ResourceInterfaceVlanOutput {
	return i.ToResourceInterfaceVlanOutputWithContext(context.Background())
}

func (i *ResourceInterfaceVlan) ToResourceInterfaceVlanOutputWithContext(ctx context.Context) ResourceInterfaceVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceInterfaceVlanOutput)
}

// ResourceInterfaceVlanArrayInput is an input type that accepts ResourceInterfaceVlanArray and ResourceInterfaceVlanArrayOutput values.
// You can construct a concrete instance of `ResourceInterfaceVlanArrayInput` via:
//
//	ResourceInterfaceVlanArray{ ResourceInterfaceVlanArgs{...} }
type ResourceInterfaceVlanArrayInput interface {
	pulumi.Input

	ToResourceInterfaceVlanArrayOutput() ResourceInterfaceVlanArrayOutput
	ToResourceInterfaceVlanArrayOutputWithContext(context.Context) ResourceInterfaceVlanArrayOutput
}

type ResourceInterfaceVlanArray []ResourceInterfaceVlanInput

func (ResourceInterfaceVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceInterfaceVlan)(nil)).Elem()
}

func (i ResourceInterfaceVlanArray) ToResourceInterfaceVlanArrayOutput() ResourceInterfaceVlanArrayOutput {
	return i.ToResourceInterfaceVlanArrayOutputWithContext(context.Background())
}

func (i ResourceInterfaceVlanArray) ToResourceInterfaceVlanArrayOutputWithContext(ctx context.Context) ResourceInterfaceVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceInterfaceVlanArrayOutput)
}

// ResourceInterfaceVlanMapInput is an input type that accepts ResourceInterfaceVlanMap and ResourceInterfaceVlanMapOutput values.
// You can construct a concrete instance of `ResourceInterfaceVlanMapInput` via:
//
//	ResourceInterfaceVlanMap{ "key": ResourceInterfaceVlanArgs{...} }
type ResourceInterfaceVlanMapInput interface {
	pulumi.Input

	ToResourceInterfaceVlanMapOutput() ResourceInterfaceVlanMapOutput
	ToResourceInterfaceVlanMapOutputWithContext(context.Context) ResourceInterfaceVlanMapOutput
}

type ResourceInterfaceVlanMap map[string]ResourceInterfaceVlanInput

func (ResourceInterfaceVlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceInterfaceVlan)(nil)).Elem()
}

func (i ResourceInterfaceVlanMap) ToResourceInterfaceVlanMapOutput() ResourceInterfaceVlanMapOutput {
	return i.ToResourceInterfaceVlanMapOutputWithContext(context.Background())
}

func (i ResourceInterfaceVlanMap) ToResourceInterfaceVlanMapOutputWithContext(ctx context.Context) ResourceInterfaceVlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceInterfaceVlanMapOutput)
}

type ResourceInterfaceVlanOutput struct{ *pulumi.OutputState }

func (ResourceInterfaceVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceInterfaceVlan)(nil)).Elem()
}

func (o ResourceInterfaceVlanOutput) ToResourceInterfaceVlanOutput() ResourceInterfaceVlanOutput {
	return o
}

func (o ResourceInterfaceVlanOutput) ToResourceInterfaceVlanOutputWithContext(ctx context.Context) ResourceInterfaceVlanOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceInterfaceVlanOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceInterfaceVlanOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// ARP resolution protocol mode.
func (o ResourceInterfaceVlanOutput) Arp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringPtrOutput { return v.Arp }).(pulumi.StringPtrOutput)
}

// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
func (o ResourceInterfaceVlanOutput) ArpTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringPtrOutput { return v.ArpTimeout }).(pulumi.StringPtrOutput)
}

func (o ResourceInterfaceVlanOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ResourceInterfaceVlanOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Name of the interface.
func (o ResourceInterfaceVlanOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Layer2 Maximum transmission unit.
func (o ResourceInterfaceVlanOutput) L2mtu() pulumi.IntOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.IntOutput { return v.L2mtu }).(pulumi.IntOutput)
}

func (o ResourceInterfaceVlanOutput) LoopProtect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringPtrOutput { return v.LoopProtect }).(pulumi.StringPtrOutput)
}

func (o ResourceInterfaceVlanOutput) LoopProtectDisableTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringPtrOutput { return v.LoopProtectDisableTime }).(pulumi.StringPtrOutput)
}

func (o ResourceInterfaceVlanOutput) LoopProtectSendInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringPtrOutput { return v.LoopProtectSendInterval }).(pulumi.StringPtrOutput)
}

func (o ResourceInterfaceVlanOutput) LoopProtectStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringOutput { return v.LoopProtectStatus }).(pulumi.StringOutput)
}

func (o ResourceInterfaceVlanOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringOutput { return v.MacAddress }).(pulumi.StringOutput)
}

// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
func (o ResourceInterfaceVlanOutput) Mtu() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringOutput { return v.Mtu }).(pulumi.StringOutput)
}

// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
// integrity for that resource!
func (o ResourceInterfaceVlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ResourceInterfaceVlanOutput) Running() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.BoolOutput { return v.Running }).(pulumi.BoolOutput)
}

func (o ResourceInterfaceVlanOutput) UseServiceTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.BoolPtrOutput { return v.UseServiceTag }).(pulumi.BoolPtrOutput)
}

func (o ResourceInterfaceVlanOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v *ResourceInterfaceVlan) pulumi.IntOutput { return v.VlanId }).(pulumi.IntOutput)
}

type ResourceInterfaceVlanArrayOutput struct{ *pulumi.OutputState }

func (ResourceInterfaceVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceInterfaceVlan)(nil)).Elem()
}

func (o ResourceInterfaceVlanArrayOutput) ToResourceInterfaceVlanArrayOutput() ResourceInterfaceVlanArrayOutput {
	return o
}

func (o ResourceInterfaceVlanArrayOutput) ToResourceInterfaceVlanArrayOutputWithContext(ctx context.Context) ResourceInterfaceVlanArrayOutput {
	return o
}

func (o ResourceInterfaceVlanArrayOutput) Index(i pulumi.IntInput) ResourceInterfaceVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceInterfaceVlan {
		return vs[0].([]*ResourceInterfaceVlan)[vs[1].(int)]
	}).(ResourceInterfaceVlanOutput)
}

type ResourceInterfaceVlanMapOutput struct{ *pulumi.OutputState }

func (ResourceInterfaceVlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceInterfaceVlan)(nil)).Elem()
}

func (o ResourceInterfaceVlanMapOutput) ToResourceInterfaceVlanMapOutput() ResourceInterfaceVlanMapOutput {
	return o
}

func (o ResourceInterfaceVlanMapOutput) ToResourceInterfaceVlanMapOutputWithContext(ctx context.Context) ResourceInterfaceVlanMapOutput {
	return o
}

func (o ResourceInterfaceVlanMapOutput) MapIndex(k pulumi.StringInput) ResourceInterfaceVlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceInterfaceVlan {
		return vs[0].(map[string]*ResourceInterfaceVlan)[vs[1].(string)]
	}).(ResourceInterfaceVlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInterfaceVlanInput)(nil)).Elem(), &ResourceInterfaceVlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInterfaceVlanArrayInput)(nil)).Elem(), ResourceInterfaceVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInterfaceVlanMapInput)(nil)).Elem(), ResourceInterfaceVlanMap{})
	pulumi.RegisterOutputType(ResourceInterfaceVlanOutput{})
	pulumi.RegisterOutputType(ResourceInterfaceVlanArrayOutput{})
	pulumi.RegisterOutputType(ResourceInterfaceVlanMapOutput{})
}
