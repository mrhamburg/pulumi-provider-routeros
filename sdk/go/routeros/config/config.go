// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

// Path to MikroTik's certificate authority file.
func GetCaCertificate(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "routeros:caCertificate")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "ROS_CA_CERTIFICATE").(string)
}

// URL of the MikroTik router, default is TLS connection to REST. * API: api[s]://host[:port] * api://router.local *
// apis://router.local:8729 * REST: https://host * https://router.local * router.local * 127.0.0.1 export
// ROS_HOSTURL=router.local or export MIKROTIK_HOST=router.local
func GetHosturl(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "routeros:hosturl")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "ROS_HOSTURL").(string)
}

// Whether to verify the SSL certificate or not.
func GetInsecure(ctx *pulumi.Context) bool {
	v, err := config.TryBool(ctx, "routeros:insecure")
	if err == nil {
		return v
	}
	return getEnvOrDefault(false, parseEnvBool, "ROS_INSECURE").(bool)
}

// Password for the MikroTik user.
func GetPassword(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "routeros:password")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "ROS_PASSWORD").(string)
}

// Username for the MikroTik WEB/Winbox. export ROS_USERNAME=admin or export MIKROTIK_USER=admin
func GetUsername(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "routeros:username")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "ROS_USERNAME").(string)
}
