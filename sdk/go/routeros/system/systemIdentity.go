// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros/System"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := System.NewSystemIdentity(ctx, "identity", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import routeros:System/systemIdentity:SystemIdentity identity .
//
// ```
type SystemIdentity struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// Device name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewSystemIdentity registers a new resource with the given unique name, arguments, and options.
func NewSystemIdentity(ctx *pulumi.Context,
	name string, args *SystemIdentityArgs, opts ...pulumi.ResourceOption) (*SystemIdentity, error) {
	if args == nil {
		args = &SystemIdentityArgs{}
	}

	var resource SystemIdentity
	err := ctx.RegisterResource("routeros:System/systemIdentity:SystemIdentity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemIdentity gets an existing SystemIdentity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemIdentityState, opts ...pulumi.ResourceOption) (*SystemIdentity, error) {
	var resource SystemIdentity
	err := ctx.ReadResource("routeros:System/systemIdentity:SystemIdentity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemIdentity resources.
type systemIdentityState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Device name.
	Name *string `pulumi:"name"`
}

type SystemIdentityState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Device name.
	Name pulumi.StringPtrInput
}

func (SystemIdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemIdentityState)(nil)).Elem()
}

type systemIdentityArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Device name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a SystemIdentity resource.
type SystemIdentityArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Device name.
	Name pulumi.StringPtrInput
}

func (SystemIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemIdentityArgs)(nil)).Elem()
}

type SystemIdentityInput interface {
	pulumi.Input

	ToSystemIdentityOutput() SystemIdentityOutput
	ToSystemIdentityOutputWithContext(ctx context.Context) SystemIdentityOutput
}

func (*SystemIdentity) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIdentity)(nil)).Elem()
}

func (i *SystemIdentity) ToSystemIdentityOutput() SystemIdentityOutput {
	return i.ToSystemIdentityOutputWithContext(context.Background())
}

func (i *SystemIdentity) ToSystemIdentityOutputWithContext(ctx context.Context) SystemIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIdentityOutput)
}

// SystemIdentityArrayInput is an input type that accepts SystemIdentityArray and SystemIdentityArrayOutput values.
// You can construct a concrete instance of `SystemIdentityArrayInput` via:
//
//	SystemIdentityArray{ SystemIdentityArgs{...} }
type SystemIdentityArrayInput interface {
	pulumi.Input

	ToSystemIdentityArrayOutput() SystemIdentityArrayOutput
	ToSystemIdentityArrayOutputWithContext(context.Context) SystemIdentityArrayOutput
}

type SystemIdentityArray []SystemIdentityInput

func (SystemIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemIdentity)(nil)).Elem()
}

func (i SystemIdentityArray) ToSystemIdentityArrayOutput() SystemIdentityArrayOutput {
	return i.ToSystemIdentityArrayOutputWithContext(context.Background())
}

func (i SystemIdentityArray) ToSystemIdentityArrayOutputWithContext(ctx context.Context) SystemIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIdentityArrayOutput)
}

// SystemIdentityMapInput is an input type that accepts SystemIdentityMap and SystemIdentityMapOutput values.
// You can construct a concrete instance of `SystemIdentityMapInput` via:
//
//	SystemIdentityMap{ "key": SystemIdentityArgs{...} }
type SystemIdentityMapInput interface {
	pulumi.Input

	ToSystemIdentityMapOutput() SystemIdentityMapOutput
	ToSystemIdentityMapOutputWithContext(context.Context) SystemIdentityMapOutput
}

type SystemIdentityMap map[string]SystemIdentityInput

func (SystemIdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemIdentity)(nil)).Elem()
}

func (i SystemIdentityMap) ToSystemIdentityMapOutput() SystemIdentityMapOutput {
	return i.ToSystemIdentityMapOutputWithContext(context.Background())
}

func (i SystemIdentityMap) ToSystemIdentityMapOutputWithContext(ctx context.Context) SystemIdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemIdentityMapOutput)
}

type SystemIdentityOutput struct{ *pulumi.OutputState }

func (SystemIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemIdentity)(nil)).Elem()
}

func (o SystemIdentityOutput) ToSystemIdentityOutput() SystemIdentityOutput {
	return o
}

func (o SystemIdentityOutput) ToSystemIdentityOutputWithContext(ctx context.Context) SystemIdentityOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o SystemIdentityOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemIdentity) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o SystemIdentityOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemIdentity) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// Device name.
func (o SystemIdentityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemIdentity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type SystemIdentityArrayOutput struct{ *pulumi.OutputState }

func (SystemIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemIdentity)(nil)).Elem()
}

func (o SystemIdentityArrayOutput) ToSystemIdentityArrayOutput() SystemIdentityArrayOutput {
	return o
}

func (o SystemIdentityArrayOutput) ToSystemIdentityArrayOutputWithContext(ctx context.Context) SystemIdentityArrayOutput {
	return o
}

func (o SystemIdentityArrayOutput) Index(i pulumi.IntInput) SystemIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemIdentity {
		return vs[0].([]*SystemIdentity)[vs[1].(int)]
	}).(SystemIdentityOutput)
}

type SystemIdentityMapOutput struct{ *pulumi.OutputState }

func (SystemIdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemIdentity)(nil)).Elem()
}

func (o SystemIdentityMapOutput) ToSystemIdentityMapOutput() SystemIdentityMapOutput {
	return o
}

func (o SystemIdentityMapOutput) ToSystemIdentityMapOutputWithContext(ctx context.Context) SystemIdentityMapOutput {
	return o
}

func (o SystemIdentityMapOutput) MapIndex(k pulumi.StringInput) SystemIdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemIdentity {
		return vs[0].(map[string]*SystemIdentity)[vs[1].(string)]
	}).(SystemIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIdentityInput)(nil)).Elem(), &SystemIdentity{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIdentityArrayInput)(nil)).Elem(), SystemIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemIdentityMapInput)(nil)).Elem(), SystemIdentityMap{})
	pulumi.RegisterOutputType(SystemIdentityOutput{})
	pulumi.RegisterOutputType(SystemIdentityArrayOutput{})
	pulumi.RegisterOutputType(SystemIdentityMapOutput{})
}
