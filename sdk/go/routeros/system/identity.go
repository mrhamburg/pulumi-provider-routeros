// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # System.Identity (Resource)
//
// ***
//
// #### This is an alias for backwards compatibility between plugin versions.
// Please see documentation for System.SystemIdentity
type Identity struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// Device name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewIdentity registers a new resource with the given unique name, arguments, and options.
func NewIdentity(ctx *pulumi.Context,
	name string, args *IdentityArgs, opts ...pulumi.ResourceOption) (*Identity, error) {
	if args == nil {
		args = &IdentityArgs{}
	}

	var resource Identity
	err := ctx.RegisterResource("routeros:System/identity:Identity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentity gets an existing Identity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityState, opts ...pulumi.ResourceOption) (*Identity, error) {
	var resource Identity
	err := ctx.ReadResource("routeros:System/identity:Identity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Identity resources.
type identityState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Device name.
	Name *string `pulumi:"name"`
}

type IdentityState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Device name.
	Name pulumi.StringPtrInput
}

func (IdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityState)(nil)).Elem()
}

type identityArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Device name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Identity resource.
type IdentityArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Device name.
	Name pulumi.StringPtrInput
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityArgs)(nil)).Elem()
}

type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(ctx context.Context) IdentityOutput
}

func (*Identity) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *Identity) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i *Identity) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

// IdentityArrayInput is an input type that accepts IdentityArray and IdentityArrayOutput values.
// You can construct a concrete instance of `IdentityArrayInput` via:
//
//	IdentityArray{ IdentityArgs{...} }
type IdentityArrayInput interface {
	pulumi.Input

	ToIdentityArrayOutput() IdentityArrayOutput
	ToIdentityArrayOutputWithContext(context.Context) IdentityArrayOutput
}

type IdentityArray []IdentityInput

func (IdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Identity)(nil)).Elem()
}

func (i IdentityArray) ToIdentityArrayOutput() IdentityArrayOutput {
	return i.ToIdentityArrayOutputWithContext(context.Background())
}

func (i IdentityArray) ToIdentityArrayOutputWithContext(ctx context.Context) IdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityArrayOutput)
}

// IdentityMapInput is an input type that accepts IdentityMap and IdentityMapOutput values.
// You can construct a concrete instance of `IdentityMapInput` via:
//
//	IdentityMap{ "key": IdentityArgs{...} }
type IdentityMapInput interface {
	pulumi.Input

	ToIdentityMapOutput() IdentityMapOutput
	ToIdentityMapOutputWithContext(context.Context) IdentityMapOutput
}

type IdentityMap map[string]IdentityInput

func (IdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Identity)(nil)).Elem()
}

func (i IdentityMap) ToIdentityMapOutput() IdentityMapOutput {
	return i.ToIdentityMapOutputWithContext(context.Background())
}

func (i IdentityMap) ToIdentityMapOutputWithContext(ctx context.Context) IdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityMapOutput)
}

type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o IdentityOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Identity) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o IdentityOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// Device name.
func (o IdentityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Identity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type IdentityArrayOutput struct{ *pulumi.OutputState }

func (IdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Identity)(nil)).Elem()
}

func (o IdentityArrayOutput) ToIdentityArrayOutput() IdentityArrayOutput {
	return o
}

func (o IdentityArrayOutput) ToIdentityArrayOutputWithContext(ctx context.Context) IdentityArrayOutput {
	return o
}

func (o IdentityArrayOutput) Index(i pulumi.IntInput) IdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Identity {
		return vs[0].([]*Identity)[vs[1].(int)]
	}).(IdentityOutput)
}

type IdentityMapOutput struct{ *pulumi.OutputState }

func (IdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Identity)(nil)).Elem()
}

func (o IdentityMapOutput) ToIdentityMapOutput() IdentityMapOutput {
	return o
}

func (o IdentityMapOutput) ToIdentityMapOutputWithContext(ctx context.Context) IdentityMapOutput {
	return o
}

func (o IdentityMapOutput) MapIndex(k pulumi.StringInput) IdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Identity {
		return vs[0].(map[string]*Identity)[vs[1].(string)]
	}).(IdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityInput)(nil)).Elem(), &Identity{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityArrayInput)(nil)).Elem(), IdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityMapInput)(nil)).Elem(), IdentityMap{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityArrayOutput{})
	pulumi.RegisterOutputType(IdentityMapOutput{})
}
