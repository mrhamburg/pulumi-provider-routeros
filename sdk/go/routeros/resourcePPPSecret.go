// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourcePPPSecret(ctx, "test", &routeros.ResourcePPPSecretArgs{
//				Password: pulumi.String("123"),
//				Profile:  pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #The ID can be found via API or the terminal #The command for the terminal is -> :put [/ppp/secret get [print show-ids]]
//
// ```sh
//
//	$ pulumi import routeros:index/resourcePPPSecret:ResourcePPPSecret test *6
//
// ```
type ResourcePPPSecret struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// For PPTP and L2TP it is the IP address a client must connect from. For PPPoE it is the MAC address (written in CAPITAL letters) a client must  connect from. For ISDN it is the caller's number (that may or may not be  provided by the operator) the client may dial-in from.
	CallerId pulumi.StringPtrOutput `pulumi:"callerId"`
	Comment  pulumi.StringPtrOutput `pulumi:"comment"`
	Disabled pulumi.BoolPtrOutput   `pulumi:"disabled"`
	// IPv6 routes.
	Ipv6Routes           pulumi.StringArrayOutput `pulumi:"ipv6Routes"`
	LastCallerId         pulumi.StringOutput      `pulumi:"lastCallerId"`
	LastDisconnectReason pulumi.StringOutput      `pulumi:"lastDisconnectReason"`
	LastLoggedOut        pulumi.StringOutput      `pulumi:"lastLoggedOut"`
	// Maximal amount of bytes for a session that client can upload.
	LimitBytesIn pulumi.IntPtrOutput `pulumi:"limitBytesIn"`
	// Maximal amount of bytes for a session that client can download.
	LimitBytesOut pulumi.IntPtrOutput `pulumi:"limitBytesOut"`
	// IP address that will be set locally on ppp interface.
	LocalAddress pulumi.StringPtrOutput `pulumi:"localAddress"`
	// Name used for authentication.
	Name pulumi.StringOutput `pulumi:"name"`
	// Password used for authentication.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Which user profile to use.
	Profile pulumi.StringPtrOutput `pulumi:"profile"`
	// IP address that will be assigned to remote ppp interface.
	RemoteAddress pulumi.StringPtrOutput `pulumi:"remoteAddress"`
	// IPv6 prefix assigned to ppp client. Prefix is added to ND prefix list enabling stateless address auto-configuration on ppp interface.Available starting from v5.0.
	RemoteIpv6Prefix pulumi.StringPtrOutput `pulumi:"remoteIpv6Prefix"`
	// Routes  that appear on the server when the client is connected. The route  format is: dst-address gateway metric (for example, 10.1.0.0/ 24  10.0.0.1 1). Other syntax is not acceptable since it can be represented  in incorrect way. Several routes may be specified separated with commas.  This parameter will be ignored for OpenVPN.
	Routes pulumi.StringArrayOutput `pulumi:"routes"`
	// Specifies the services that particular user will be able to use.
	Service pulumi.StringPtrOutput `pulumi:"service"`
}

// NewResourcePPPSecret registers a new resource with the given unique name, arguments, and options.
func NewResourcePPPSecret(ctx *pulumi.Context,
	name string, args *ResourcePPPSecretArgs, opts ...pulumi.ResourceOption) (*ResourcePPPSecret, error) {
	if args == nil {
		args = &ResourcePPPSecretArgs{}
	}

	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	var resource ResourcePPPSecret
	err := ctx.RegisterResource("routeros:index/resourcePPPSecret:ResourcePPPSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourcePPPSecret gets an existing ResourcePPPSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourcePPPSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourcePPPSecretState, opts ...pulumi.ResourceOption) (*ResourcePPPSecret, error) {
	var resource ResourcePPPSecret
	err := ctx.ReadResource("routeros:index/resourcePPPSecret:ResourcePPPSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourcePPPSecret resources.
type resourcePPPSecretState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// For PPTP and L2TP it is the IP address a client must connect from. For PPPoE it is the MAC address (written in CAPITAL letters) a client must  connect from. For ISDN it is the caller's number (that may or may not be  provided by the operator) the client may dial-in from.
	CallerId *string `pulumi:"callerId"`
	Comment  *string `pulumi:"comment"`
	Disabled *bool   `pulumi:"disabled"`
	// IPv6 routes.
	Ipv6Routes           []string `pulumi:"ipv6Routes"`
	LastCallerId         *string  `pulumi:"lastCallerId"`
	LastDisconnectReason *string  `pulumi:"lastDisconnectReason"`
	LastLoggedOut        *string  `pulumi:"lastLoggedOut"`
	// Maximal amount of bytes for a session that client can upload.
	LimitBytesIn *int `pulumi:"limitBytesIn"`
	// Maximal amount of bytes for a session that client can download.
	LimitBytesOut *int `pulumi:"limitBytesOut"`
	// IP address that will be set locally on ppp interface.
	LocalAddress *string `pulumi:"localAddress"`
	// Name used for authentication.
	Name *string `pulumi:"name"`
	// Password used for authentication.
	Password *string `pulumi:"password"`
	// Which user profile to use.
	Profile *string `pulumi:"profile"`
	// IP address that will be assigned to remote ppp interface.
	RemoteAddress *string `pulumi:"remoteAddress"`
	// IPv6 prefix assigned to ppp client. Prefix is added to ND prefix list enabling stateless address auto-configuration on ppp interface.Available starting from v5.0.
	RemoteIpv6Prefix *string `pulumi:"remoteIpv6Prefix"`
	// Routes  that appear on the server when the client is connected. The route  format is: dst-address gateway metric (for example, 10.1.0.0/ 24  10.0.0.1 1). Other syntax is not acceptable since it can be represented  in incorrect way. Several routes may be specified separated with commas.  This parameter will be ignored for OpenVPN.
	Routes []string `pulumi:"routes"`
	// Specifies the services that particular user will be able to use.
	Service *string `pulumi:"service"`
}

type ResourcePPPSecretState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// For PPTP and L2TP it is the IP address a client must connect from. For PPPoE it is the MAC address (written in CAPITAL letters) a client must  connect from. For ISDN it is the caller's number (that may or may not be  provided by the operator) the client may dial-in from.
	CallerId pulumi.StringPtrInput
	Comment  pulumi.StringPtrInput
	Disabled pulumi.BoolPtrInput
	// IPv6 routes.
	Ipv6Routes           pulumi.StringArrayInput
	LastCallerId         pulumi.StringPtrInput
	LastDisconnectReason pulumi.StringPtrInput
	LastLoggedOut        pulumi.StringPtrInput
	// Maximal amount of bytes for a session that client can upload.
	LimitBytesIn pulumi.IntPtrInput
	// Maximal amount of bytes for a session that client can download.
	LimitBytesOut pulumi.IntPtrInput
	// IP address that will be set locally on ppp interface.
	LocalAddress pulumi.StringPtrInput
	// Name used for authentication.
	Name pulumi.StringPtrInput
	// Password used for authentication.
	Password pulumi.StringPtrInput
	// Which user profile to use.
	Profile pulumi.StringPtrInput
	// IP address that will be assigned to remote ppp interface.
	RemoteAddress pulumi.StringPtrInput
	// IPv6 prefix assigned to ppp client. Prefix is added to ND prefix list enabling stateless address auto-configuration on ppp interface.Available starting from v5.0.
	RemoteIpv6Prefix pulumi.StringPtrInput
	// Routes  that appear on the server when the client is connected. The route  format is: dst-address gateway metric (for example, 10.1.0.0/ 24  10.0.0.1 1). Other syntax is not acceptable since it can be represented  in incorrect way. Several routes may be specified separated with commas.  This parameter will be ignored for OpenVPN.
	Routes pulumi.StringArrayInput
	// Specifies the services that particular user will be able to use.
	Service pulumi.StringPtrInput
}

func (ResourcePPPSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcePPPSecretState)(nil)).Elem()
}

type resourcePPPSecretArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// For PPTP and L2TP it is the IP address a client must connect from. For PPPoE it is the MAC address (written in CAPITAL letters) a client must  connect from. For ISDN it is the caller's number (that may or may not be  provided by the operator) the client may dial-in from.
	CallerId *string `pulumi:"callerId"`
	Comment  *string `pulumi:"comment"`
	Disabled *bool   `pulumi:"disabled"`
	// IPv6 routes.
	Ipv6Routes []string `pulumi:"ipv6Routes"`
	// Maximal amount of bytes for a session that client can upload.
	LimitBytesIn *int `pulumi:"limitBytesIn"`
	// Maximal amount of bytes for a session that client can download.
	LimitBytesOut *int `pulumi:"limitBytesOut"`
	// IP address that will be set locally on ppp interface.
	LocalAddress *string `pulumi:"localAddress"`
	// Name used for authentication.
	Name *string `pulumi:"name"`
	// Password used for authentication.
	Password *string `pulumi:"password"`
	// Which user profile to use.
	Profile *string `pulumi:"profile"`
	// IP address that will be assigned to remote ppp interface.
	RemoteAddress *string `pulumi:"remoteAddress"`
	// IPv6 prefix assigned to ppp client. Prefix is added to ND prefix list enabling stateless address auto-configuration on ppp interface.Available starting from v5.0.
	RemoteIpv6Prefix *string `pulumi:"remoteIpv6Prefix"`
	// Routes  that appear on the server when the client is connected. The route  format is: dst-address gateway metric (for example, 10.1.0.0/ 24  10.0.0.1 1). Other syntax is not acceptable since it can be represented  in incorrect way. Several routes may be specified separated with commas.  This parameter will be ignored for OpenVPN.
	Routes []string `pulumi:"routes"`
	// Specifies the services that particular user will be able to use.
	Service *string `pulumi:"service"`
}

// The set of arguments for constructing a ResourcePPPSecret resource.
type ResourcePPPSecretArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// For PPTP and L2TP it is the IP address a client must connect from. For PPPoE it is the MAC address (written in CAPITAL letters) a client must  connect from. For ISDN it is the caller's number (that may or may not be  provided by the operator) the client may dial-in from.
	CallerId pulumi.StringPtrInput
	Comment  pulumi.StringPtrInput
	Disabled pulumi.BoolPtrInput
	// IPv6 routes.
	Ipv6Routes pulumi.StringArrayInput
	// Maximal amount of bytes for a session that client can upload.
	LimitBytesIn pulumi.IntPtrInput
	// Maximal amount of bytes for a session that client can download.
	LimitBytesOut pulumi.IntPtrInput
	// IP address that will be set locally on ppp interface.
	LocalAddress pulumi.StringPtrInput
	// Name used for authentication.
	Name pulumi.StringPtrInput
	// Password used for authentication.
	Password pulumi.StringPtrInput
	// Which user profile to use.
	Profile pulumi.StringPtrInput
	// IP address that will be assigned to remote ppp interface.
	RemoteAddress pulumi.StringPtrInput
	// IPv6 prefix assigned to ppp client. Prefix is added to ND prefix list enabling stateless address auto-configuration on ppp interface.Available starting from v5.0.
	RemoteIpv6Prefix pulumi.StringPtrInput
	// Routes  that appear on the server when the client is connected. The route  format is: dst-address gateway metric (for example, 10.1.0.0/ 24  10.0.0.1 1). Other syntax is not acceptable since it can be represented  in incorrect way. Several routes may be specified separated with commas.  This parameter will be ignored for OpenVPN.
	Routes pulumi.StringArrayInput
	// Specifies the services that particular user will be able to use.
	Service pulumi.StringPtrInput
}

func (ResourcePPPSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcePPPSecretArgs)(nil)).Elem()
}

type ResourcePPPSecretInput interface {
	pulumi.Input

	ToResourcePPPSecretOutput() ResourcePPPSecretOutput
	ToResourcePPPSecretOutputWithContext(ctx context.Context) ResourcePPPSecretOutput
}

func (*ResourcePPPSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePPPSecret)(nil)).Elem()
}

func (i *ResourcePPPSecret) ToResourcePPPSecretOutput() ResourcePPPSecretOutput {
	return i.ToResourcePPPSecretOutputWithContext(context.Background())
}

func (i *ResourcePPPSecret) ToResourcePPPSecretOutputWithContext(ctx context.Context) ResourcePPPSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePPPSecretOutput)
}

// ResourcePPPSecretArrayInput is an input type that accepts ResourcePPPSecretArray and ResourcePPPSecretArrayOutput values.
// You can construct a concrete instance of `ResourcePPPSecretArrayInput` via:
//
//	ResourcePPPSecretArray{ ResourcePPPSecretArgs{...} }
type ResourcePPPSecretArrayInput interface {
	pulumi.Input

	ToResourcePPPSecretArrayOutput() ResourcePPPSecretArrayOutput
	ToResourcePPPSecretArrayOutputWithContext(context.Context) ResourcePPPSecretArrayOutput
}

type ResourcePPPSecretArray []ResourcePPPSecretInput

func (ResourcePPPSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourcePPPSecret)(nil)).Elem()
}

func (i ResourcePPPSecretArray) ToResourcePPPSecretArrayOutput() ResourcePPPSecretArrayOutput {
	return i.ToResourcePPPSecretArrayOutputWithContext(context.Background())
}

func (i ResourcePPPSecretArray) ToResourcePPPSecretArrayOutputWithContext(ctx context.Context) ResourcePPPSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePPPSecretArrayOutput)
}

// ResourcePPPSecretMapInput is an input type that accepts ResourcePPPSecretMap and ResourcePPPSecretMapOutput values.
// You can construct a concrete instance of `ResourcePPPSecretMapInput` via:
//
//	ResourcePPPSecretMap{ "key": ResourcePPPSecretArgs{...} }
type ResourcePPPSecretMapInput interface {
	pulumi.Input

	ToResourcePPPSecretMapOutput() ResourcePPPSecretMapOutput
	ToResourcePPPSecretMapOutputWithContext(context.Context) ResourcePPPSecretMapOutput
}

type ResourcePPPSecretMap map[string]ResourcePPPSecretInput

func (ResourcePPPSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourcePPPSecret)(nil)).Elem()
}

func (i ResourcePPPSecretMap) ToResourcePPPSecretMapOutput() ResourcePPPSecretMapOutput {
	return i.ToResourcePPPSecretMapOutputWithContext(context.Background())
}

func (i ResourcePPPSecretMap) ToResourcePPPSecretMapOutputWithContext(ctx context.Context) ResourcePPPSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePPPSecretMapOutput)
}

type ResourcePPPSecretOutput struct{ *pulumi.OutputState }

func (ResourcePPPSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePPPSecret)(nil)).Elem()
}

func (o ResourcePPPSecretOutput) ToResourcePPPSecretOutput() ResourcePPPSecretOutput {
	return o
}

func (o ResourcePPPSecretOutput) ToResourcePPPSecretOutputWithContext(ctx context.Context) ResourcePPPSecretOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourcePPPSecretOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourcePPPSecretOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// For PPTP and L2TP it is the IP address a client must connect from. For PPPoE it is the MAC address (written in CAPITAL letters) a client must  connect from. For ISDN it is the caller's number (that may or may not be  provided by the operator) the client may dial-in from.
func (o ResourcePPPSecretOutput) CallerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringPtrOutput { return v.CallerId }).(pulumi.StringPtrOutput)
}

func (o ResourcePPPSecretOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ResourcePPPSecretOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// IPv6 routes.
func (o ResourcePPPSecretOutput) Ipv6Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringArrayOutput { return v.Ipv6Routes }).(pulumi.StringArrayOutput)
}

func (o ResourcePPPSecretOutput) LastCallerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringOutput { return v.LastCallerId }).(pulumi.StringOutput)
}

func (o ResourcePPPSecretOutput) LastDisconnectReason() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringOutput { return v.LastDisconnectReason }).(pulumi.StringOutput)
}

func (o ResourcePPPSecretOutput) LastLoggedOut() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringOutput { return v.LastLoggedOut }).(pulumi.StringOutput)
}

// Maximal amount of bytes for a session that client can upload.
func (o ResourcePPPSecretOutput) LimitBytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.IntPtrOutput { return v.LimitBytesIn }).(pulumi.IntPtrOutput)
}

// Maximal amount of bytes for a session that client can download.
func (o ResourcePPPSecretOutput) LimitBytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.IntPtrOutput { return v.LimitBytesOut }).(pulumi.IntPtrOutput)
}

// IP address that will be set locally on ppp interface.
func (o ResourcePPPSecretOutput) LocalAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringPtrOutput { return v.LocalAddress }).(pulumi.StringPtrOutput)
}

// Name used for authentication.
func (o ResourcePPPSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password used for authentication.
func (o ResourcePPPSecretOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Which user profile to use.
func (o ResourcePPPSecretOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringPtrOutput { return v.Profile }).(pulumi.StringPtrOutput)
}

// IP address that will be assigned to remote ppp interface.
func (o ResourcePPPSecretOutput) RemoteAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringPtrOutput { return v.RemoteAddress }).(pulumi.StringPtrOutput)
}

// IPv6 prefix assigned to ppp client. Prefix is added to ND prefix list enabling stateless address auto-configuration on ppp interface.Available starting from v5.0.
func (o ResourcePPPSecretOutput) RemoteIpv6Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringPtrOutput { return v.RemoteIpv6Prefix }).(pulumi.StringPtrOutput)
}

// Routes  that appear on the server when the client is connected. The route  format is: dst-address gateway metric (for example, 10.1.0.0/ 24  10.0.0.1 1). Other syntax is not acceptable since it can be represented  in incorrect way. Several routes may be specified separated with commas.  This parameter will be ignored for OpenVPN.
func (o ResourcePPPSecretOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringArrayOutput { return v.Routes }).(pulumi.StringArrayOutput)
}

// Specifies the services that particular user will be able to use.
func (o ResourcePPPSecretOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePPPSecret) pulumi.StringPtrOutput { return v.Service }).(pulumi.StringPtrOutput)
}

type ResourcePPPSecretArrayOutput struct{ *pulumi.OutputState }

func (ResourcePPPSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourcePPPSecret)(nil)).Elem()
}

func (o ResourcePPPSecretArrayOutput) ToResourcePPPSecretArrayOutput() ResourcePPPSecretArrayOutput {
	return o
}

func (o ResourcePPPSecretArrayOutput) ToResourcePPPSecretArrayOutputWithContext(ctx context.Context) ResourcePPPSecretArrayOutput {
	return o
}

func (o ResourcePPPSecretArrayOutput) Index(i pulumi.IntInput) ResourcePPPSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourcePPPSecret {
		return vs[0].([]*ResourcePPPSecret)[vs[1].(int)]
	}).(ResourcePPPSecretOutput)
}

type ResourcePPPSecretMapOutput struct{ *pulumi.OutputState }

func (ResourcePPPSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourcePPPSecret)(nil)).Elem()
}

func (o ResourcePPPSecretMapOutput) ToResourcePPPSecretMapOutput() ResourcePPPSecretMapOutput {
	return o
}

func (o ResourcePPPSecretMapOutput) ToResourcePPPSecretMapOutputWithContext(ctx context.Context) ResourcePPPSecretMapOutput {
	return o
}

func (o ResourcePPPSecretMapOutput) MapIndex(k pulumi.StringInput) ResourcePPPSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourcePPPSecret {
		return vs[0].(map[string]*ResourcePPPSecret)[vs[1].(string)]
	}).(ResourcePPPSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePPPSecretInput)(nil)).Elem(), &ResourcePPPSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePPPSecretArrayInput)(nil)).Elem(), ResourcePPPSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePPPSecretMapInput)(nil)).Elem(), ResourcePPPSecretMap{})
	pulumi.RegisterOutputType(ResourcePPPSecretOutput{})
	pulumi.RegisterOutputType(ResourcePPPSecretArrayOutput{})
	pulumi.RegisterOutputType(ResourcePPPSecretMapOutput{})
}
