// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DatasourceFirewallAddressList struct {
	Address      string `pulumi:"address"`
	Comment      string `pulumi:"comment"`
	CreationTime string `pulumi:"creationTime"`
	Disabled     bool   `pulumi:"disabled"`
	Dynamic      bool   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter map[string]interface{} `pulumi:"filter"`
	// The ID of this resource.
	Id      string `pulumi:"id"`
	List    string `pulumi:"list"`
	Timeout string `pulumi:"timeout"`
}

// DatasourceFirewallAddressListInput is an input type that accepts DatasourceFirewallAddressListArgs and DatasourceFirewallAddressListOutput values.
// You can construct a concrete instance of `DatasourceFirewallAddressListInput` via:
//
//	DatasourceFirewallAddressListArgs{...}
type DatasourceFirewallAddressListInput interface {
	pulumi.Input

	ToDatasourceFirewallAddressListOutput() DatasourceFirewallAddressListOutput
	ToDatasourceFirewallAddressListOutputWithContext(context.Context) DatasourceFirewallAddressListOutput
}

type DatasourceFirewallAddressListArgs struct {
	Address      pulumi.StringInput `pulumi:"address"`
	Comment      pulumi.StringInput `pulumi:"comment"`
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	Disabled     pulumi.BoolInput   `pulumi:"disabled"`
	Dynamic      pulumi.BoolInput   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter pulumi.MapInput `pulumi:"filter"`
	// The ID of this resource.
	Id      pulumi.StringInput `pulumi:"id"`
	List    pulumi.StringInput `pulumi:"list"`
	Timeout pulumi.StringInput `pulumi:"timeout"`
}

func (DatasourceFirewallAddressListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceFirewallAddressList)(nil)).Elem()
}

func (i DatasourceFirewallAddressListArgs) ToDatasourceFirewallAddressListOutput() DatasourceFirewallAddressListOutput {
	return i.ToDatasourceFirewallAddressListOutputWithContext(context.Background())
}

func (i DatasourceFirewallAddressListArgs) ToDatasourceFirewallAddressListOutputWithContext(ctx context.Context) DatasourceFirewallAddressListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceFirewallAddressListOutput)
}

// DatasourceFirewallAddressListArrayInput is an input type that accepts DatasourceFirewallAddressListArray and DatasourceFirewallAddressListArrayOutput values.
// You can construct a concrete instance of `DatasourceFirewallAddressListArrayInput` via:
//
//	DatasourceFirewallAddressListArray{ DatasourceFirewallAddressListArgs{...} }
type DatasourceFirewallAddressListArrayInput interface {
	pulumi.Input

	ToDatasourceFirewallAddressListArrayOutput() DatasourceFirewallAddressListArrayOutput
	ToDatasourceFirewallAddressListArrayOutputWithContext(context.Context) DatasourceFirewallAddressListArrayOutput
}

type DatasourceFirewallAddressListArray []DatasourceFirewallAddressListInput

func (DatasourceFirewallAddressListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceFirewallAddressList)(nil)).Elem()
}

func (i DatasourceFirewallAddressListArray) ToDatasourceFirewallAddressListArrayOutput() DatasourceFirewallAddressListArrayOutput {
	return i.ToDatasourceFirewallAddressListArrayOutputWithContext(context.Background())
}

func (i DatasourceFirewallAddressListArray) ToDatasourceFirewallAddressListArrayOutputWithContext(ctx context.Context) DatasourceFirewallAddressListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceFirewallAddressListArrayOutput)
}

type DatasourceFirewallAddressListOutput struct{ *pulumi.OutputState }

func (DatasourceFirewallAddressListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceFirewallAddressList)(nil)).Elem()
}

func (o DatasourceFirewallAddressListOutput) ToDatasourceFirewallAddressListOutput() DatasourceFirewallAddressListOutput {
	return o
}

func (o DatasourceFirewallAddressListOutput) ToDatasourceFirewallAddressListOutputWithContext(ctx context.Context) DatasourceFirewallAddressListOutput {
	return o
}

func (o DatasourceFirewallAddressListOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallAddressList) string { return v.Address }).(pulumi.StringOutput)
}

func (o DatasourceFirewallAddressListOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallAddressList) string { return v.Comment }).(pulumi.StringOutput)
}

func (o DatasourceFirewallAddressListOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallAddressList) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o DatasourceFirewallAddressListOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallAddressList) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallAddressListOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallAddressList) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// Additional request filtering options.
func (o DatasourceFirewallAddressListOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v DatasourceFirewallAddressList) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

// The ID of this resource.
func (o DatasourceFirewallAddressListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallAddressList) string { return v.Id }).(pulumi.StringOutput)
}

func (o DatasourceFirewallAddressListOutput) List() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallAddressList) string { return v.List }).(pulumi.StringOutput)
}

func (o DatasourceFirewallAddressListOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallAddressList) string { return v.Timeout }).(pulumi.StringOutput)
}

type DatasourceFirewallAddressListArrayOutput struct{ *pulumi.OutputState }

func (DatasourceFirewallAddressListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceFirewallAddressList)(nil)).Elem()
}

func (o DatasourceFirewallAddressListArrayOutput) ToDatasourceFirewallAddressListArrayOutput() DatasourceFirewallAddressListArrayOutput {
	return o
}

func (o DatasourceFirewallAddressListArrayOutput) ToDatasourceFirewallAddressListArrayOutputWithContext(ctx context.Context) DatasourceFirewallAddressListArrayOutput {
	return o
}

func (o DatasourceFirewallAddressListArrayOutput) Index(i pulumi.IntInput) DatasourceFirewallAddressListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasourceFirewallAddressList {
		return vs[0].([]DatasourceFirewallAddressList)[vs[1].(int)]
	}).(DatasourceFirewallAddressListOutput)
}

type DatasourceFirewallMangle struct {
	Action             string `pulumi:"action"`
	AddressList        string `pulumi:"addressList"`
	AddressListTimeout string `pulumi:"addressListTimeout"`
	Bytes              int    `pulumi:"bytes"`
	Chain              string `pulumi:"chain"`
	Comment            string `pulumi:"comment"`
	ConnectionBytes    string `pulumi:"connectionBytes"`
	ConnectionLimit    string `pulumi:"connectionLimit"`
	ConnectionMark     string `pulumi:"connectionMark"`
	ConnectionNatState string `pulumi:"connectionNatState"`
	ConnectionRate     string `pulumi:"connectionRate"`
	ConnectionState    string `pulumi:"connectionState"`
	ConnectionType     string `pulumi:"connectionType"`
	Content            string `pulumi:"content"`
	Disabled           bool   `pulumi:"disabled"`
	Dscp               int    `pulumi:"dscp"`
	DstAddress         string `pulumi:"dstAddress"`
	DstAddressList     string `pulumi:"dstAddressList"`
	DstAddressType     string `pulumi:"dstAddressType"`
	DstLimit           string `pulumi:"dstLimit"`
	DstPort            string `pulumi:"dstPort"`
	Dynamic            bool   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      map[string]interface{} `pulumi:"filter"`
	Fragment    bool                   `pulumi:"fragment"`
	Hotspot     string                 `pulumi:"hotspot"`
	IcmpOptions string                 `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      string `pulumi:"id"`
	InBridgePort            string `pulumi:"inBridgePort"`
	InBridgePortList        string `pulumi:"inBridgePortList"`
	InInterface             string `pulumi:"inInterface"`
	InInterfaceList         string `pulumi:"inInterfaceList"`
	IngressPriority         int    `pulumi:"ingressPriority"`
	Invalid                 bool   `pulumi:"invalid"`
	IpsecPolicy             string `pulumi:"ipsecPolicy"`
	Ipv4Options             string `pulumi:"ipv4Options"`
	JumpTarget              string `pulumi:"jumpTarget"`
	Layer7Protocol          string `pulumi:"layer7Protocol"`
	Limit                   string `pulumi:"limit"`
	Log                     bool   `pulumi:"log"`
	LogPrefix               string `pulumi:"logPrefix"`
	NewConnectionMark       string `pulumi:"newConnectionMark"`
	NewDscp                 int    `pulumi:"newDscp"`
	NewMss                  int    `pulumi:"newMss"`
	NewPacketMark           string `pulumi:"newPacketMark"`
	NewPriority             string `pulumi:"newPriority"`
	NewRoutingMark          string `pulumi:"newRoutingMark"`
	NewTtl                  string `pulumi:"newTtl"`
	Nth                     string `pulumi:"nth"`
	OutBridgePort           string `pulumi:"outBridgePort"`
	OutBridgePortList       string `pulumi:"outBridgePortList"`
	OutInterface            string `pulumi:"outInterface"`
	OutInterfaceList        string `pulumi:"outInterfaceList"`
	PacketMark              string `pulumi:"packetMark"`
	PacketSize              string `pulumi:"packetSize"`
	Packets                 int    `pulumi:"packets"`
	Passthrough             bool   `pulumi:"passthrough"`
	PerConnectionClassifier string `pulumi:"perConnectionClassifier"`
	Port                    string `pulumi:"port"`
	Protocol                string `pulumi:"protocol"`
	Psd                     string `pulumi:"psd"`
	Random                  int    `pulumi:"random"`
	RouteDst                string `pulumi:"routeDst"`
	RoutingMark             string `pulumi:"routingMark"`
	SrcAddress              string `pulumi:"srcAddress"`
	SrcAddressList          string `pulumi:"srcAddressList"`
	SrcAddressType          string `pulumi:"srcAddressType"`
	SrcMacAddress           string `pulumi:"srcMacAddress"`
	SrcPort                 string `pulumi:"srcPort"`
	TcpFlags                string `pulumi:"tcpFlags"`
	TcpMss                  string `pulumi:"tcpMss"`
	Time                    string `pulumi:"time"`
	TlsHost                 string `pulumi:"tlsHost"`
	Ttl                     string `pulumi:"ttl"`
}

// DatasourceFirewallMangleInput is an input type that accepts DatasourceFirewallMangleArgs and DatasourceFirewallMangleOutput values.
// You can construct a concrete instance of `DatasourceFirewallMangleInput` via:
//
//	DatasourceFirewallMangleArgs{...}
type DatasourceFirewallMangleInput interface {
	pulumi.Input

	ToDatasourceFirewallMangleOutput() DatasourceFirewallMangleOutput
	ToDatasourceFirewallMangleOutputWithContext(context.Context) DatasourceFirewallMangleOutput
}

type DatasourceFirewallMangleArgs struct {
	Action             pulumi.StringInput `pulumi:"action"`
	AddressList        pulumi.StringInput `pulumi:"addressList"`
	AddressListTimeout pulumi.StringInput `pulumi:"addressListTimeout"`
	Bytes              pulumi.IntInput    `pulumi:"bytes"`
	Chain              pulumi.StringInput `pulumi:"chain"`
	Comment            pulumi.StringInput `pulumi:"comment"`
	ConnectionBytes    pulumi.StringInput `pulumi:"connectionBytes"`
	ConnectionLimit    pulumi.StringInput `pulumi:"connectionLimit"`
	ConnectionMark     pulumi.StringInput `pulumi:"connectionMark"`
	ConnectionNatState pulumi.StringInput `pulumi:"connectionNatState"`
	ConnectionRate     pulumi.StringInput `pulumi:"connectionRate"`
	ConnectionState    pulumi.StringInput `pulumi:"connectionState"`
	ConnectionType     pulumi.StringInput `pulumi:"connectionType"`
	Content            pulumi.StringInput `pulumi:"content"`
	Disabled           pulumi.BoolInput   `pulumi:"disabled"`
	Dscp               pulumi.IntInput    `pulumi:"dscp"`
	DstAddress         pulumi.StringInput `pulumi:"dstAddress"`
	DstAddressList     pulumi.StringInput `pulumi:"dstAddressList"`
	DstAddressType     pulumi.StringInput `pulumi:"dstAddressType"`
	DstLimit           pulumi.StringInput `pulumi:"dstLimit"`
	DstPort            pulumi.StringInput `pulumi:"dstPort"`
	Dynamic            pulumi.BoolInput   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      pulumi.MapInput    `pulumi:"filter"`
	Fragment    pulumi.BoolInput   `pulumi:"fragment"`
	Hotspot     pulumi.StringInput `pulumi:"hotspot"`
	IcmpOptions pulumi.StringInput `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      pulumi.StringInput `pulumi:"id"`
	InBridgePort            pulumi.StringInput `pulumi:"inBridgePort"`
	InBridgePortList        pulumi.StringInput `pulumi:"inBridgePortList"`
	InInterface             pulumi.StringInput `pulumi:"inInterface"`
	InInterfaceList         pulumi.StringInput `pulumi:"inInterfaceList"`
	IngressPriority         pulumi.IntInput    `pulumi:"ingressPriority"`
	Invalid                 pulumi.BoolInput   `pulumi:"invalid"`
	IpsecPolicy             pulumi.StringInput `pulumi:"ipsecPolicy"`
	Ipv4Options             pulumi.StringInput `pulumi:"ipv4Options"`
	JumpTarget              pulumi.StringInput `pulumi:"jumpTarget"`
	Layer7Protocol          pulumi.StringInput `pulumi:"layer7Protocol"`
	Limit                   pulumi.StringInput `pulumi:"limit"`
	Log                     pulumi.BoolInput   `pulumi:"log"`
	LogPrefix               pulumi.StringInput `pulumi:"logPrefix"`
	NewConnectionMark       pulumi.StringInput `pulumi:"newConnectionMark"`
	NewDscp                 pulumi.IntInput    `pulumi:"newDscp"`
	NewMss                  pulumi.IntInput    `pulumi:"newMss"`
	NewPacketMark           pulumi.StringInput `pulumi:"newPacketMark"`
	NewPriority             pulumi.StringInput `pulumi:"newPriority"`
	NewRoutingMark          pulumi.StringInput `pulumi:"newRoutingMark"`
	NewTtl                  pulumi.StringInput `pulumi:"newTtl"`
	Nth                     pulumi.StringInput `pulumi:"nth"`
	OutBridgePort           pulumi.StringInput `pulumi:"outBridgePort"`
	OutBridgePortList       pulumi.StringInput `pulumi:"outBridgePortList"`
	OutInterface            pulumi.StringInput `pulumi:"outInterface"`
	OutInterfaceList        pulumi.StringInput `pulumi:"outInterfaceList"`
	PacketMark              pulumi.StringInput `pulumi:"packetMark"`
	PacketSize              pulumi.StringInput `pulumi:"packetSize"`
	Packets                 pulumi.IntInput    `pulumi:"packets"`
	Passthrough             pulumi.BoolInput   `pulumi:"passthrough"`
	PerConnectionClassifier pulumi.StringInput `pulumi:"perConnectionClassifier"`
	Port                    pulumi.StringInput `pulumi:"port"`
	Protocol                pulumi.StringInput `pulumi:"protocol"`
	Psd                     pulumi.StringInput `pulumi:"psd"`
	Random                  pulumi.IntInput    `pulumi:"random"`
	RouteDst                pulumi.StringInput `pulumi:"routeDst"`
	RoutingMark             pulumi.StringInput `pulumi:"routingMark"`
	SrcAddress              pulumi.StringInput `pulumi:"srcAddress"`
	SrcAddressList          pulumi.StringInput `pulumi:"srcAddressList"`
	SrcAddressType          pulumi.StringInput `pulumi:"srcAddressType"`
	SrcMacAddress           pulumi.StringInput `pulumi:"srcMacAddress"`
	SrcPort                 pulumi.StringInput `pulumi:"srcPort"`
	TcpFlags                pulumi.StringInput `pulumi:"tcpFlags"`
	TcpMss                  pulumi.StringInput `pulumi:"tcpMss"`
	Time                    pulumi.StringInput `pulumi:"time"`
	TlsHost                 pulumi.StringInput `pulumi:"tlsHost"`
	Ttl                     pulumi.StringInput `pulumi:"ttl"`
}

func (DatasourceFirewallMangleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceFirewallMangle)(nil)).Elem()
}

func (i DatasourceFirewallMangleArgs) ToDatasourceFirewallMangleOutput() DatasourceFirewallMangleOutput {
	return i.ToDatasourceFirewallMangleOutputWithContext(context.Background())
}

func (i DatasourceFirewallMangleArgs) ToDatasourceFirewallMangleOutputWithContext(ctx context.Context) DatasourceFirewallMangleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceFirewallMangleOutput)
}

// DatasourceFirewallMangleArrayInput is an input type that accepts DatasourceFirewallMangleArray and DatasourceFirewallMangleArrayOutput values.
// You can construct a concrete instance of `DatasourceFirewallMangleArrayInput` via:
//
//	DatasourceFirewallMangleArray{ DatasourceFirewallMangleArgs{...} }
type DatasourceFirewallMangleArrayInput interface {
	pulumi.Input

	ToDatasourceFirewallMangleArrayOutput() DatasourceFirewallMangleArrayOutput
	ToDatasourceFirewallMangleArrayOutputWithContext(context.Context) DatasourceFirewallMangleArrayOutput
}

type DatasourceFirewallMangleArray []DatasourceFirewallMangleInput

func (DatasourceFirewallMangleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceFirewallMangle)(nil)).Elem()
}

func (i DatasourceFirewallMangleArray) ToDatasourceFirewallMangleArrayOutput() DatasourceFirewallMangleArrayOutput {
	return i.ToDatasourceFirewallMangleArrayOutputWithContext(context.Background())
}

func (i DatasourceFirewallMangleArray) ToDatasourceFirewallMangleArrayOutputWithContext(ctx context.Context) DatasourceFirewallMangleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceFirewallMangleArrayOutput)
}

type DatasourceFirewallMangleOutput struct{ *pulumi.OutputState }

func (DatasourceFirewallMangleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceFirewallMangle)(nil)).Elem()
}

func (o DatasourceFirewallMangleOutput) ToDatasourceFirewallMangleOutput() DatasourceFirewallMangleOutput {
	return o
}

func (o DatasourceFirewallMangleOutput) ToDatasourceFirewallMangleOutputWithContext(ctx context.Context) DatasourceFirewallMangleOutput {
	return o
}

func (o DatasourceFirewallMangleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Action }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) AddressList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.AddressList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) AddressListTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.AddressListTimeout }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Bytes() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) int { return v.Bytes }).(pulumi.IntOutput)
}

func (o DatasourceFirewallMangleOutput) Chain() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Chain }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Comment }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) ConnectionBytes() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.ConnectionBytes }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) ConnectionLimit() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.ConnectionLimit }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) ConnectionMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.ConnectionMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) ConnectionNatState() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.ConnectionNatState }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) ConnectionRate() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.ConnectionRate }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) ConnectionState() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.ConnectionState }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.ConnectionType }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Content }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallMangleOutput) Dscp() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) int { return v.Dscp }).(pulumi.IntOutput)
}

func (o DatasourceFirewallMangleOutput) DstAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.DstAddress }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) DstAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.DstAddressList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) DstAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.DstAddressType }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) DstLimit() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.DstLimit }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) DstPort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.DstPort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// Additional request filtering options.
func (o DatasourceFirewallMangleOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

func (o DatasourceFirewallMangleOutput) Fragment() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) bool { return v.Fragment }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallMangleOutput) Hotspot() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Hotspot }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) IcmpOptions() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.IcmpOptions }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o DatasourceFirewallMangleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Id }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) InBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.InBridgePort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) InBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.InBridgePortList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) InInterface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.InInterface }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) InInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.InInterfaceList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) IngressPriority() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) int { return v.IngressPriority }).(pulumi.IntOutput)
}

func (o DatasourceFirewallMangleOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) bool { return v.Invalid }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallMangleOutput) IpsecPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.IpsecPolicy }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Ipv4Options() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Ipv4Options }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) JumpTarget() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.JumpTarget }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Layer7Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Layer7Protocol }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Limit() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Limit }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Log() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) bool { return v.Log }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallMangleOutput) LogPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.LogPrefix }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) NewConnectionMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.NewConnectionMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) NewDscp() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) int { return v.NewDscp }).(pulumi.IntOutput)
}

func (o DatasourceFirewallMangleOutput) NewMss() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) int { return v.NewMss }).(pulumi.IntOutput)
}

func (o DatasourceFirewallMangleOutput) NewPacketMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.NewPacketMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) NewPriority() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.NewPriority }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) NewRoutingMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.NewRoutingMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) NewTtl() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.NewTtl }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Nth() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Nth }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) OutBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.OutBridgePort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) OutBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.OutBridgePortList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) OutInterface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.OutInterface }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) OutInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.OutInterfaceList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) PacketMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.PacketMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) PacketSize() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.PacketSize }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Packets() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) int { return v.Packets }).(pulumi.IntOutput)
}

func (o DatasourceFirewallMangleOutput) Passthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) bool { return v.Passthrough }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallMangleOutput) PerConnectionClassifier() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.PerConnectionClassifier }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Port }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Psd() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Psd }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Random() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) int { return v.Random }).(pulumi.IntOutput)
}

func (o DatasourceFirewallMangleOutput) RouteDst() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.RouteDst }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) RoutingMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.RoutingMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) SrcAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.SrcAddress }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) SrcAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.SrcAddressList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) SrcAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.SrcAddressType }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) SrcMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.SrcMacAddress }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) SrcPort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.SrcPort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) TcpFlags() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.TcpFlags }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) TcpMss() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.TcpMss }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Time }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) TlsHost() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.TlsHost }).(pulumi.StringOutput)
}

func (o DatasourceFirewallMangleOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallMangle) string { return v.Ttl }).(pulumi.StringOutput)
}

type DatasourceFirewallMangleArrayOutput struct{ *pulumi.OutputState }

func (DatasourceFirewallMangleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceFirewallMangle)(nil)).Elem()
}

func (o DatasourceFirewallMangleArrayOutput) ToDatasourceFirewallMangleArrayOutput() DatasourceFirewallMangleArrayOutput {
	return o
}

func (o DatasourceFirewallMangleArrayOutput) ToDatasourceFirewallMangleArrayOutputWithContext(ctx context.Context) DatasourceFirewallMangleArrayOutput {
	return o
}

func (o DatasourceFirewallMangleArrayOutput) Index(i pulumi.IntInput) DatasourceFirewallMangleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasourceFirewallMangle {
		return vs[0].([]DatasourceFirewallMangle)[vs[1].(int)]
	}).(DatasourceFirewallMangleOutput)
}

type DatasourceFirewallNat struct {
	Action             string `pulumi:"action"`
	AddressList        string `pulumi:"addressList"`
	AddressListTimeout string `pulumi:"addressListTimeout"`
	Bytes              int    `pulumi:"bytes"`
	Chain              string `pulumi:"chain"`
	Comment            string `pulumi:"comment"`
	ConnectionBytes    string `pulumi:"connectionBytes"`
	ConnectionLimit    string `pulumi:"connectionLimit"`
	ConnectionMark     string `pulumi:"connectionMark"`
	ConnectionRate     string `pulumi:"connectionRate"`
	ConnectionType     string `pulumi:"connectionType"`
	Content            string `pulumi:"content"`
	Disabled           bool   `pulumi:"disabled"`
	Dscp               int    `pulumi:"dscp"`
	DstAddress         string `pulumi:"dstAddress"`
	DstAddressList     string `pulumi:"dstAddressList"`
	DstAddressType     string `pulumi:"dstAddressType"`
	DstLimit           string `pulumi:"dstLimit"`
	DstPort            string `pulumi:"dstPort"`
	Dynamic            bool   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      map[string]interface{} `pulumi:"filter"`
	Fragment    bool                   `pulumi:"fragment"`
	Hotspot     string                 `pulumi:"hotspot"`
	IcmpOptions string                 `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      string `pulumi:"id"`
	InBridgePort            string `pulumi:"inBridgePort"`
	InBridgePortList        string `pulumi:"inBridgePortList"`
	InInterface             string `pulumi:"inInterface"`
	InInterfaceList         string `pulumi:"inInterfaceList"`
	IngressPriority         int    `pulumi:"ingressPriority"`
	Invalid                 bool   `pulumi:"invalid"`
	IpsecPolicy             string `pulumi:"ipsecPolicy"`
	Ipv4Options             string `pulumi:"ipv4Options"`
	JumpTarget              string `pulumi:"jumpTarget"`
	Layer7Protocol          string `pulumi:"layer7Protocol"`
	Limit                   string `pulumi:"limit"`
	Log                     bool   `pulumi:"log"`
	LogPrefix               string `pulumi:"logPrefix"`
	Nth                     string `pulumi:"nth"`
	OutBridgePort           string `pulumi:"outBridgePort"`
	OutBridgePortList       string `pulumi:"outBridgePortList"`
	OutInterface            string `pulumi:"outInterface"`
	OutInterfaceList        string `pulumi:"outInterfaceList"`
	PacketMark              string `pulumi:"packetMark"`
	PacketSize              string `pulumi:"packetSize"`
	Packets                 int    `pulumi:"packets"`
	PerConnectionClassifier string `pulumi:"perConnectionClassifier"`
	Port                    string `pulumi:"port"`
	Priority                int    `pulumi:"priority"`
	Protocol                string `pulumi:"protocol"`
	Psd                     string `pulumi:"psd"`
	Random                  int    `pulumi:"random"`
	RoutingMark             string `pulumi:"routingMark"`
	SameNotByDst            bool   `pulumi:"sameNotByDst"`
	SrcAddress              string `pulumi:"srcAddress"`
	SrcAddressList          string `pulumi:"srcAddressList"`
	SrcAddressType          string `pulumi:"srcAddressType"`
	SrcMacAddress           string `pulumi:"srcMacAddress"`
	SrcPort                 string `pulumi:"srcPort"`
	TcpMss                  string `pulumi:"tcpMss"`
	Time                    string `pulumi:"time"`
	ToAddresses             string `pulumi:"toAddresses"`
	ToPorts                 string `pulumi:"toPorts"`
	Ttl                     string `pulumi:"ttl"`
}

// DatasourceFirewallNatInput is an input type that accepts DatasourceFirewallNatArgs and DatasourceFirewallNatOutput values.
// You can construct a concrete instance of `DatasourceFirewallNatInput` via:
//
//	DatasourceFirewallNatArgs{...}
type DatasourceFirewallNatInput interface {
	pulumi.Input

	ToDatasourceFirewallNatOutput() DatasourceFirewallNatOutput
	ToDatasourceFirewallNatOutputWithContext(context.Context) DatasourceFirewallNatOutput
}

type DatasourceFirewallNatArgs struct {
	Action             pulumi.StringInput `pulumi:"action"`
	AddressList        pulumi.StringInput `pulumi:"addressList"`
	AddressListTimeout pulumi.StringInput `pulumi:"addressListTimeout"`
	Bytes              pulumi.IntInput    `pulumi:"bytes"`
	Chain              pulumi.StringInput `pulumi:"chain"`
	Comment            pulumi.StringInput `pulumi:"comment"`
	ConnectionBytes    pulumi.StringInput `pulumi:"connectionBytes"`
	ConnectionLimit    pulumi.StringInput `pulumi:"connectionLimit"`
	ConnectionMark     pulumi.StringInput `pulumi:"connectionMark"`
	ConnectionRate     pulumi.StringInput `pulumi:"connectionRate"`
	ConnectionType     pulumi.StringInput `pulumi:"connectionType"`
	Content            pulumi.StringInput `pulumi:"content"`
	Disabled           pulumi.BoolInput   `pulumi:"disabled"`
	Dscp               pulumi.IntInput    `pulumi:"dscp"`
	DstAddress         pulumi.StringInput `pulumi:"dstAddress"`
	DstAddressList     pulumi.StringInput `pulumi:"dstAddressList"`
	DstAddressType     pulumi.StringInput `pulumi:"dstAddressType"`
	DstLimit           pulumi.StringInput `pulumi:"dstLimit"`
	DstPort            pulumi.StringInput `pulumi:"dstPort"`
	Dynamic            pulumi.BoolInput   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      pulumi.MapInput    `pulumi:"filter"`
	Fragment    pulumi.BoolInput   `pulumi:"fragment"`
	Hotspot     pulumi.StringInput `pulumi:"hotspot"`
	IcmpOptions pulumi.StringInput `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      pulumi.StringInput `pulumi:"id"`
	InBridgePort            pulumi.StringInput `pulumi:"inBridgePort"`
	InBridgePortList        pulumi.StringInput `pulumi:"inBridgePortList"`
	InInterface             pulumi.StringInput `pulumi:"inInterface"`
	InInterfaceList         pulumi.StringInput `pulumi:"inInterfaceList"`
	IngressPriority         pulumi.IntInput    `pulumi:"ingressPriority"`
	Invalid                 pulumi.BoolInput   `pulumi:"invalid"`
	IpsecPolicy             pulumi.StringInput `pulumi:"ipsecPolicy"`
	Ipv4Options             pulumi.StringInput `pulumi:"ipv4Options"`
	JumpTarget              pulumi.StringInput `pulumi:"jumpTarget"`
	Layer7Protocol          pulumi.StringInput `pulumi:"layer7Protocol"`
	Limit                   pulumi.StringInput `pulumi:"limit"`
	Log                     pulumi.BoolInput   `pulumi:"log"`
	LogPrefix               pulumi.StringInput `pulumi:"logPrefix"`
	Nth                     pulumi.StringInput `pulumi:"nth"`
	OutBridgePort           pulumi.StringInput `pulumi:"outBridgePort"`
	OutBridgePortList       pulumi.StringInput `pulumi:"outBridgePortList"`
	OutInterface            pulumi.StringInput `pulumi:"outInterface"`
	OutInterfaceList        pulumi.StringInput `pulumi:"outInterfaceList"`
	PacketMark              pulumi.StringInput `pulumi:"packetMark"`
	PacketSize              pulumi.StringInput `pulumi:"packetSize"`
	Packets                 pulumi.IntInput    `pulumi:"packets"`
	PerConnectionClassifier pulumi.StringInput `pulumi:"perConnectionClassifier"`
	Port                    pulumi.StringInput `pulumi:"port"`
	Priority                pulumi.IntInput    `pulumi:"priority"`
	Protocol                pulumi.StringInput `pulumi:"protocol"`
	Psd                     pulumi.StringInput `pulumi:"psd"`
	Random                  pulumi.IntInput    `pulumi:"random"`
	RoutingMark             pulumi.StringInput `pulumi:"routingMark"`
	SameNotByDst            pulumi.BoolInput   `pulumi:"sameNotByDst"`
	SrcAddress              pulumi.StringInput `pulumi:"srcAddress"`
	SrcAddressList          pulumi.StringInput `pulumi:"srcAddressList"`
	SrcAddressType          pulumi.StringInput `pulumi:"srcAddressType"`
	SrcMacAddress           pulumi.StringInput `pulumi:"srcMacAddress"`
	SrcPort                 pulumi.StringInput `pulumi:"srcPort"`
	TcpMss                  pulumi.StringInput `pulumi:"tcpMss"`
	Time                    pulumi.StringInput `pulumi:"time"`
	ToAddresses             pulumi.StringInput `pulumi:"toAddresses"`
	ToPorts                 pulumi.StringInput `pulumi:"toPorts"`
	Ttl                     pulumi.StringInput `pulumi:"ttl"`
}

func (DatasourceFirewallNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceFirewallNat)(nil)).Elem()
}

func (i DatasourceFirewallNatArgs) ToDatasourceFirewallNatOutput() DatasourceFirewallNatOutput {
	return i.ToDatasourceFirewallNatOutputWithContext(context.Background())
}

func (i DatasourceFirewallNatArgs) ToDatasourceFirewallNatOutputWithContext(ctx context.Context) DatasourceFirewallNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceFirewallNatOutput)
}

// DatasourceFirewallNatArrayInput is an input type that accepts DatasourceFirewallNatArray and DatasourceFirewallNatArrayOutput values.
// You can construct a concrete instance of `DatasourceFirewallNatArrayInput` via:
//
//	DatasourceFirewallNatArray{ DatasourceFirewallNatArgs{...} }
type DatasourceFirewallNatArrayInput interface {
	pulumi.Input

	ToDatasourceFirewallNatArrayOutput() DatasourceFirewallNatArrayOutput
	ToDatasourceFirewallNatArrayOutputWithContext(context.Context) DatasourceFirewallNatArrayOutput
}

type DatasourceFirewallNatArray []DatasourceFirewallNatInput

func (DatasourceFirewallNatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceFirewallNat)(nil)).Elem()
}

func (i DatasourceFirewallNatArray) ToDatasourceFirewallNatArrayOutput() DatasourceFirewallNatArrayOutput {
	return i.ToDatasourceFirewallNatArrayOutputWithContext(context.Background())
}

func (i DatasourceFirewallNatArray) ToDatasourceFirewallNatArrayOutputWithContext(ctx context.Context) DatasourceFirewallNatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceFirewallNatArrayOutput)
}

type DatasourceFirewallNatOutput struct{ *pulumi.OutputState }

func (DatasourceFirewallNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceFirewallNat)(nil)).Elem()
}

func (o DatasourceFirewallNatOutput) ToDatasourceFirewallNatOutput() DatasourceFirewallNatOutput {
	return o
}

func (o DatasourceFirewallNatOutput) ToDatasourceFirewallNatOutputWithContext(ctx context.Context) DatasourceFirewallNatOutput {
	return o
}

func (o DatasourceFirewallNatOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Action }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) AddressList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.AddressList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) AddressListTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.AddressListTimeout }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Bytes() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) int { return v.Bytes }).(pulumi.IntOutput)
}

func (o DatasourceFirewallNatOutput) Chain() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Chain }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Comment }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) ConnectionBytes() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.ConnectionBytes }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) ConnectionLimit() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.ConnectionLimit }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) ConnectionMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.ConnectionMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) ConnectionRate() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.ConnectionRate }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.ConnectionType }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Content }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallNatOutput) Dscp() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) int { return v.Dscp }).(pulumi.IntOutput)
}

func (o DatasourceFirewallNatOutput) DstAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.DstAddress }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) DstAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.DstAddressList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) DstAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.DstAddressType }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) DstLimit() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.DstLimit }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) DstPort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.DstPort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// Additional request filtering options.
func (o DatasourceFirewallNatOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

func (o DatasourceFirewallNatOutput) Fragment() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) bool { return v.Fragment }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallNatOutput) Hotspot() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Hotspot }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) IcmpOptions() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.IcmpOptions }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o DatasourceFirewallNatOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Id }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) InBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.InBridgePort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) InBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.InBridgePortList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) InInterface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.InInterface }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) InInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.InInterfaceList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) IngressPriority() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) int { return v.IngressPriority }).(pulumi.IntOutput)
}

func (o DatasourceFirewallNatOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) bool { return v.Invalid }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallNatOutput) IpsecPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.IpsecPolicy }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Ipv4Options() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Ipv4Options }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) JumpTarget() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.JumpTarget }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Layer7Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Layer7Protocol }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Limit() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Limit }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Log() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) bool { return v.Log }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallNatOutput) LogPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.LogPrefix }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Nth() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Nth }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) OutBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.OutBridgePort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) OutBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.OutBridgePortList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) OutInterface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.OutInterface }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) OutInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.OutInterfaceList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) PacketMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.PacketMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) PacketSize() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.PacketSize }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Packets() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) int { return v.Packets }).(pulumi.IntOutput)
}

func (o DatasourceFirewallNatOutput) PerConnectionClassifier() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.PerConnectionClassifier }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Port }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) int { return v.Priority }).(pulumi.IntOutput)
}

func (o DatasourceFirewallNatOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Psd() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Psd }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Random() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) int { return v.Random }).(pulumi.IntOutput)
}

func (o DatasourceFirewallNatOutput) RoutingMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.RoutingMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) SameNotByDst() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) bool { return v.SameNotByDst }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallNatOutput) SrcAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.SrcAddress }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) SrcAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.SrcAddressList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) SrcAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.SrcAddressType }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) SrcMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.SrcMacAddress }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) SrcPort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.SrcPort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) TcpMss() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.TcpMss }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Time }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) ToAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.ToAddresses }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) ToPorts() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.ToPorts }).(pulumi.StringOutput)
}

func (o DatasourceFirewallNatOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallNat) string { return v.Ttl }).(pulumi.StringOutput)
}

type DatasourceFirewallNatArrayOutput struct{ *pulumi.OutputState }

func (DatasourceFirewallNatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceFirewallNat)(nil)).Elem()
}

func (o DatasourceFirewallNatArrayOutput) ToDatasourceFirewallNatArrayOutput() DatasourceFirewallNatArrayOutput {
	return o
}

func (o DatasourceFirewallNatArrayOutput) ToDatasourceFirewallNatArrayOutputWithContext(ctx context.Context) DatasourceFirewallNatArrayOutput {
	return o
}

func (o DatasourceFirewallNatArrayOutput) Index(i pulumi.IntInput) DatasourceFirewallNatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasourceFirewallNat {
		return vs[0].([]DatasourceFirewallNat)[vs[1].(int)]
	}).(DatasourceFirewallNatOutput)
}

type DatasourceFirewallRule struct {
	Action             string `pulumi:"action"`
	AddressListTimeout string `pulumi:"addressListTimeout"`
	Bytes              int    `pulumi:"bytes"`
	Chain              string `pulumi:"chain"`
	Comment            string `pulumi:"comment"`
	ConnectionBytes    string `pulumi:"connectionBytes"`
	ConnectionLimit    string `pulumi:"connectionLimit"`
	ConnectionMark     string `pulumi:"connectionMark"`
	ConnectionNatState string `pulumi:"connectionNatState"`
	ConnectionRate     string `pulumi:"connectionRate"`
	ConnectionState    string `pulumi:"connectionState"`
	ConnectionType     string `pulumi:"connectionType"`
	Content            string `pulumi:"content"`
	Disabled           bool   `pulumi:"disabled"`
	Dscp               int    `pulumi:"dscp"`
	DstAddress         string `pulumi:"dstAddress"`
	DstAddressList     string `pulumi:"dstAddressList"`
	DstAddressType     string `pulumi:"dstAddressType"`
	DstLimit           string `pulumi:"dstLimit"`
	DstPort            string `pulumi:"dstPort"`
	Dynamic            bool   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      map[string]interface{} `pulumi:"filter"`
	Fragment    bool                   `pulumi:"fragment"`
	Hotspot     string                 `pulumi:"hotspot"`
	HwOffload   bool                   `pulumi:"hwOffload"`
	IcmpOptions string                 `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      string `pulumi:"id"`
	InBridgePort            string `pulumi:"inBridgePort"`
	InBridgePortList        string `pulumi:"inBridgePortList"`
	InInterface             string `pulumi:"inInterface"`
	InInterfaceList         string `pulumi:"inInterfaceList"`
	IngressPriority         int    `pulumi:"ingressPriority"`
	Invalid                 bool   `pulumi:"invalid"`
	IpsecPolicy             string `pulumi:"ipsecPolicy"`
	Ipv4Options             string `pulumi:"ipv4Options"`
	JumpTarget              string `pulumi:"jumpTarget"`
	Layer7Protocol          string `pulumi:"layer7Protocol"`
	Limit                   string `pulumi:"limit"`
	Log                     bool   `pulumi:"log"`
	LogPrefix               string `pulumi:"logPrefix"`
	Nth                     string `pulumi:"nth"`
	OutBridgePort           string `pulumi:"outBridgePort"`
	OutBridgePortList       string `pulumi:"outBridgePortList"`
	OutInterface            string `pulumi:"outInterface"`
	OutInterfaceList        string `pulumi:"outInterfaceList"`
	PacketMark              string `pulumi:"packetMark"`
	PacketSize              string `pulumi:"packetSize"`
	Packets                 int    `pulumi:"packets"`
	PerConnectionClassifier string `pulumi:"perConnectionClassifier"`
	Port                    string `pulumi:"port"`
	Priority                int    `pulumi:"priority"`
	Protocol                string `pulumi:"protocol"`
	Psd                     string `pulumi:"psd"`
	Random                  int    `pulumi:"random"`
	RejectWith              string `pulumi:"rejectWith"`
	RoutingMark             string `pulumi:"routingMark"`
	RoutingTable            string `pulumi:"routingTable"`
	SrcAddress              string `pulumi:"srcAddress"`
	SrcAddressList          string `pulumi:"srcAddressList"`
	SrcAddressType          string `pulumi:"srcAddressType"`
	SrcMacAddress           string `pulumi:"srcMacAddress"`
	SrcPort                 string `pulumi:"srcPort"`
	TcpFlags                string `pulumi:"tcpFlags"`
	TcpMss                  string `pulumi:"tcpMss"`
	Time                    string `pulumi:"time"`
	TlsHost                 string `pulumi:"tlsHost"`
	Ttl                     string `pulumi:"ttl"`
}

// DatasourceFirewallRuleInput is an input type that accepts DatasourceFirewallRuleArgs and DatasourceFirewallRuleOutput values.
// You can construct a concrete instance of `DatasourceFirewallRuleInput` via:
//
//	DatasourceFirewallRuleArgs{...}
type DatasourceFirewallRuleInput interface {
	pulumi.Input

	ToDatasourceFirewallRuleOutput() DatasourceFirewallRuleOutput
	ToDatasourceFirewallRuleOutputWithContext(context.Context) DatasourceFirewallRuleOutput
}

type DatasourceFirewallRuleArgs struct {
	Action             pulumi.StringInput `pulumi:"action"`
	AddressListTimeout pulumi.StringInput `pulumi:"addressListTimeout"`
	Bytes              pulumi.IntInput    `pulumi:"bytes"`
	Chain              pulumi.StringInput `pulumi:"chain"`
	Comment            pulumi.StringInput `pulumi:"comment"`
	ConnectionBytes    pulumi.StringInput `pulumi:"connectionBytes"`
	ConnectionLimit    pulumi.StringInput `pulumi:"connectionLimit"`
	ConnectionMark     pulumi.StringInput `pulumi:"connectionMark"`
	ConnectionNatState pulumi.StringInput `pulumi:"connectionNatState"`
	ConnectionRate     pulumi.StringInput `pulumi:"connectionRate"`
	ConnectionState    pulumi.StringInput `pulumi:"connectionState"`
	ConnectionType     pulumi.StringInput `pulumi:"connectionType"`
	Content            pulumi.StringInput `pulumi:"content"`
	Disabled           pulumi.BoolInput   `pulumi:"disabled"`
	Dscp               pulumi.IntInput    `pulumi:"dscp"`
	DstAddress         pulumi.StringInput `pulumi:"dstAddress"`
	DstAddressList     pulumi.StringInput `pulumi:"dstAddressList"`
	DstAddressType     pulumi.StringInput `pulumi:"dstAddressType"`
	DstLimit           pulumi.StringInput `pulumi:"dstLimit"`
	DstPort            pulumi.StringInput `pulumi:"dstPort"`
	Dynamic            pulumi.BoolInput   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      pulumi.MapInput    `pulumi:"filter"`
	Fragment    pulumi.BoolInput   `pulumi:"fragment"`
	Hotspot     pulumi.StringInput `pulumi:"hotspot"`
	HwOffload   pulumi.BoolInput   `pulumi:"hwOffload"`
	IcmpOptions pulumi.StringInput `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      pulumi.StringInput `pulumi:"id"`
	InBridgePort            pulumi.StringInput `pulumi:"inBridgePort"`
	InBridgePortList        pulumi.StringInput `pulumi:"inBridgePortList"`
	InInterface             pulumi.StringInput `pulumi:"inInterface"`
	InInterfaceList         pulumi.StringInput `pulumi:"inInterfaceList"`
	IngressPriority         pulumi.IntInput    `pulumi:"ingressPriority"`
	Invalid                 pulumi.BoolInput   `pulumi:"invalid"`
	IpsecPolicy             pulumi.StringInput `pulumi:"ipsecPolicy"`
	Ipv4Options             pulumi.StringInput `pulumi:"ipv4Options"`
	JumpTarget              pulumi.StringInput `pulumi:"jumpTarget"`
	Layer7Protocol          pulumi.StringInput `pulumi:"layer7Protocol"`
	Limit                   pulumi.StringInput `pulumi:"limit"`
	Log                     pulumi.BoolInput   `pulumi:"log"`
	LogPrefix               pulumi.StringInput `pulumi:"logPrefix"`
	Nth                     pulumi.StringInput `pulumi:"nth"`
	OutBridgePort           pulumi.StringInput `pulumi:"outBridgePort"`
	OutBridgePortList       pulumi.StringInput `pulumi:"outBridgePortList"`
	OutInterface            pulumi.StringInput `pulumi:"outInterface"`
	OutInterfaceList        pulumi.StringInput `pulumi:"outInterfaceList"`
	PacketMark              pulumi.StringInput `pulumi:"packetMark"`
	PacketSize              pulumi.StringInput `pulumi:"packetSize"`
	Packets                 pulumi.IntInput    `pulumi:"packets"`
	PerConnectionClassifier pulumi.StringInput `pulumi:"perConnectionClassifier"`
	Port                    pulumi.StringInput `pulumi:"port"`
	Priority                pulumi.IntInput    `pulumi:"priority"`
	Protocol                pulumi.StringInput `pulumi:"protocol"`
	Psd                     pulumi.StringInput `pulumi:"psd"`
	Random                  pulumi.IntInput    `pulumi:"random"`
	RejectWith              pulumi.StringInput `pulumi:"rejectWith"`
	RoutingMark             pulumi.StringInput `pulumi:"routingMark"`
	RoutingTable            pulumi.StringInput `pulumi:"routingTable"`
	SrcAddress              pulumi.StringInput `pulumi:"srcAddress"`
	SrcAddressList          pulumi.StringInput `pulumi:"srcAddressList"`
	SrcAddressType          pulumi.StringInput `pulumi:"srcAddressType"`
	SrcMacAddress           pulumi.StringInput `pulumi:"srcMacAddress"`
	SrcPort                 pulumi.StringInput `pulumi:"srcPort"`
	TcpFlags                pulumi.StringInput `pulumi:"tcpFlags"`
	TcpMss                  pulumi.StringInput `pulumi:"tcpMss"`
	Time                    pulumi.StringInput `pulumi:"time"`
	TlsHost                 pulumi.StringInput `pulumi:"tlsHost"`
	Ttl                     pulumi.StringInput `pulumi:"ttl"`
}

func (DatasourceFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceFirewallRule)(nil)).Elem()
}

func (i DatasourceFirewallRuleArgs) ToDatasourceFirewallRuleOutput() DatasourceFirewallRuleOutput {
	return i.ToDatasourceFirewallRuleOutputWithContext(context.Background())
}

func (i DatasourceFirewallRuleArgs) ToDatasourceFirewallRuleOutputWithContext(ctx context.Context) DatasourceFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceFirewallRuleOutput)
}

// DatasourceFirewallRuleArrayInput is an input type that accepts DatasourceFirewallRuleArray and DatasourceFirewallRuleArrayOutput values.
// You can construct a concrete instance of `DatasourceFirewallRuleArrayInput` via:
//
//	DatasourceFirewallRuleArray{ DatasourceFirewallRuleArgs{...} }
type DatasourceFirewallRuleArrayInput interface {
	pulumi.Input

	ToDatasourceFirewallRuleArrayOutput() DatasourceFirewallRuleArrayOutput
	ToDatasourceFirewallRuleArrayOutputWithContext(context.Context) DatasourceFirewallRuleArrayOutput
}

type DatasourceFirewallRuleArray []DatasourceFirewallRuleInput

func (DatasourceFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceFirewallRule)(nil)).Elem()
}

func (i DatasourceFirewallRuleArray) ToDatasourceFirewallRuleArrayOutput() DatasourceFirewallRuleArrayOutput {
	return i.ToDatasourceFirewallRuleArrayOutputWithContext(context.Background())
}

func (i DatasourceFirewallRuleArray) ToDatasourceFirewallRuleArrayOutputWithContext(ctx context.Context) DatasourceFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceFirewallRuleArrayOutput)
}

type DatasourceFirewallRuleOutput struct{ *pulumi.OutputState }

func (DatasourceFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceFirewallRule)(nil)).Elem()
}

func (o DatasourceFirewallRuleOutput) ToDatasourceFirewallRuleOutput() DatasourceFirewallRuleOutput {
	return o
}

func (o DatasourceFirewallRuleOutput) ToDatasourceFirewallRuleOutputWithContext(ctx context.Context) DatasourceFirewallRuleOutput {
	return o
}

func (o DatasourceFirewallRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) AddressListTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.AddressListTimeout }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Bytes() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) int { return v.Bytes }).(pulumi.IntOutput)
}

func (o DatasourceFirewallRuleOutput) Chain() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Chain }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Comment }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) ConnectionBytes() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.ConnectionBytes }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) ConnectionLimit() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.ConnectionLimit }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) ConnectionMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.ConnectionMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) ConnectionNatState() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.ConnectionNatState }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) ConnectionRate() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.ConnectionRate }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) ConnectionState() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.ConnectionState }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.ConnectionType }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Content }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallRuleOutput) Dscp() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) int { return v.Dscp }).(pulumi.IntOutput)
}

func (o DatasourceFirewallRuleOutput) DstAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.DstAddress }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) DstAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.DstAddressList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) DstAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.DstAddressType }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) DstLimit() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.DstLimit }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) DstPort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.DstPort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// Additional request filtering options.
func (o DatasourceFirewallRuleOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

func (o DatasourceFirewallRuleOutput) Fragment() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) bool { return v.Fragment }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallRuleOutput) Hotspot() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Hotspot }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) HwOffload() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) bool { return v.HwOffload }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallRuleOutput) IcmpOptions() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.IcmpOptions }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o DatasourceFirewallRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) InBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.InBridgePort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) InBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.InBridgePortList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) InInterface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.InInterface }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) InInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.InInterfaceList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) IngressPriority() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) int { return v.IngressPriority }).(pulumi.IntOutput)
}

func (o DatasourceFirewallRuleOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) bool { return v.Invalid }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallRuleOutput) IpsecPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.IpsecPolicy }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Ipv4Options() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Ipv4Options }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) JumpTarget() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.JumpTarget }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Layer7Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Layer7Protocol }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Limit() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Limit }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Log() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) bool { return v.Log }).(pulumi.BoolOutput)
}

func (o DatasourceFirewallRuleOutput) LogPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.LogPrefix }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Nth() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Nth }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) OutBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.OutBridgePort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) OutBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.OutBridgePortList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) OutInterface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.OutInterface }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) OutInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.OutInterfaceList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) PacketMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.PacketMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) PacketSize() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.PacketSize }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Packets() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) int { return v.Packets }).(pulumi.IntOutput)
}

func (o DatasourceFirewallRuleOutput) PerConnectionClassifier() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.PerConnectionClassifier }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Port }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) int { return v.Priority }).(pulumi.IntOutput)
}

func (o DatasourceFirewallRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Psd() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Psd }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Random() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) int { return v.Random }).(pulumi.IntOutput)
}

func (o DatasourceFirewallRuleOutput) RejectWith() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.RejectWith }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) RoutingMark() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.RoutingMark }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) RoutingTable() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.RoutingTable }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) SrcAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.SrcAddress }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) SrcAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.SrcAddressList }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) SrcAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.SrcAddressType }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) SrcMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.SrcMacAddress }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) SrcPort() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.SrcPort }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) TcpFlags() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.TcpFlags }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) TcpMss() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.TcpMss }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Time }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) TlsHost() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.TlsHost }).(pulumi.StringOutput)
}

func (o DatasourceFirewallRuleOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceFirewallRule) string { return v.Ttl }).(pulumi.StringOutput)
}

type DatasourceFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (DatasourceFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceFirewallRule)(nil)).Elem()
}

func (o DatasourceFirewallRuleArrayOutput) ToDatasourceFirewallRuleArrayOutput() DatasourceFirewallRuleArrayOutput {
	return o
}

func (o DatasourceFirewallRuleArrayOutput) ToDatasourceFirewallRuleArrayOutputWithContext(ctx context.Context) DatasourceFirewallRuleArrayOutput {
	return o
}

func (o DatasourceFirewallRuleArrayOutput) Index(i pulumi.IntInput) DatasourceFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasourceFirewallRule {
		return vs[0].([]DatasourceFirewallRule)[vs[1].(int)]
	}).(DatasourceFirewallRuleOutput)
}

type DatasourceIPAddressesAddress struct {
	ActualInterface string `pulumi:"actualInterface"`
	Address         string `pulumi:"address"`
	Disabled        bool   `pulumi:"disabled"`
	Dynamic         bool   `pulumi:"dynamic"`
	// The ID of this resource.
	Id        string `pulumi:"id"`
	Interface string `pulumi:"interface"`
	Invalid   bool   `pulumi:"invalid"`
	Network   string `pulumi:"network"`
}

// DatasourceIPAddressesAddressInput is an input type that accepts DatasourceIPAddressesAddressArgs and DatasourceIPAddressesAddressOutput values.
// You can construct a concrete instance of `DatasourceIPAddressesAddressInput` via:
//
//	DatasourceIPAddressesAddressArgs{...}
type DatasourceIPAddressesAddressInput interface {
	pulumi.Input

	ToDatasourceIPAddressesAddressOutput() DatasourceIPAddressesAddressOutput
	ToDatasourceIPAddressesAddressOutputWithContext(context.Context) DatasourceIPAddressesAddressOutput
}

type DatasourceIPAddressesAddressArgs struct {
	ActualInterface pulumi.StringInput `pulumi:"actualInterface"`
	Address         pulumi.StringInput `pulumi:"address"`
	Disabled        pulumi.BoolInput   `pulumi:"disabled"`
	Dynamic         pulumi.BoolInput   `pulumi:"dynamic"`
	// The ID of this resource.
	Id        pulumi.StringInput `pulumi:"id"`
	Interface pulumi.StringInput `pulumi:"interface"`
	Invalid   pulumi.BoolInput   `pulumi:"invalid"`
	Network   pulumi.StringInput `pulumi:"network"`
}

func (DatasourceIPAddressesAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPAddressesAddress)(nil)).Elem()
}

func (i DatasourceIPAddressesAddressArgs) ToDatasourceIPAddressesAddressOutput() DatasourceIPAddressesAddressOutput {
	return i.ToDatasourceIPAddressesAddressOutputWithContext(context.Background())
}

func (i DatasourceIPAddressesAddressArgs) ToDatasourceIPAddressesAddressOutputWithContext(ctx context.Context) DatasourceIPAddressesAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceIPAddressesAddressOutput)
}

// DatasourceIPAddressesAddressArrayInput is an input type that accepts DatasourceIPAddressesAddressArray and DatasourceIPAddressesAddressArrayOutput values.
// You can construct a concrete instance of `DatasourceIPAddressesAddressArrayInput` via:
//
//	DatasourceIPAddressesAddressArray{ DatasourceIPAddressesAddressArgs{...} }
type DatasourceIPAddressesAddressArrayInput interface {
	pulumi.Input

	ToDatasourceIPAddressesAddressArrayOutput() DatasourceIPAddressesAddressArrayOutput
	ToDatasourceIPAddressesAddressArrayOutputWithContext(context.Context) DatasourceIPAddressesAddressArrayOutput
}

type DatasourceIPAddressesAddressArray []DatasourceIPAddressesAddressInput

func (DatasourceIPAddressesAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceIPAddressesAddress)(nil)).Elem()
}

func (i DatasourceIPAddressesAddressArray) ToDatasourceIPAddressesAddressArrayOutput() DatasourceIPAddressesAddressArrayOutput {
	return i.ToDatasourceIPAddressesAddressArrayOutputWithContext(context.Background())
}

func (i DatasourceIPAddressesAddressArray) ToDatasourceIPAddressesAddressArrayOutputWithContext(ctx context.Context) DatasourceIPAddressesAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceIPAddressesAddressArrayOutput)
}

type DatasourceIPAddressesAddressOutput struct{ *pulumi.OutputState }

func (DatasourceIPAddressesAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPAddressesAddress)(nil)).Elem()
}

func (o DatasourceIPAddressesAddressOutput) ToDatasourceIPAddressesAddressOutput() DatasourceIPAddressesAddressOutput {
	return o
}

func (o DatasourceIPAddressesAddressOutput) ToDatasourceIPAddressesAddressOutputWithContext(ctx context.Context) DatasourceIPAddressesAddressOutput {
	return o
}

func (o DatasourceIPAddressesAddressOutput) ActualInterface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPAddressesAddress) string { return v.ActualInterface }).(pulumi.StringOutput)
}

func (o DatasourceIPAddressesAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPAddressesAddress) string { return v.Address }).(pulumi.StringOutput)
}

func (o DatasourceIPAddressesAddressOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPAddressesAddress) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o DatasourceIPAddressesAddressOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPAddressesAddress) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// The ID of this resource.
func (o DatasourceIPAddressesAddressOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPAddressesAddress) string { return v.Id }).(pulumi.StringOutput)
}

func (o DatasourceIPAddressesAddressOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPAddressesAddress) string { return v.Interface }).(pulumi.StringOutput)
}

func (o DatasourceIPAddressesAddressOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPAddressesAddress) bool { return v.Invalid }).(pulumi.BoolOutput)
}

func (o DatasourceIPAddressesAddressOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPAddressesAddress) string { return v.Network }).(pulumi.StringOutput)
}

type DatasourceIPAddressesAddressArrayOutput struct{ *pulumi.OutputState }

func (DatasourceIPAddressesAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceIPAddressesAddress)(nil)).Elem()
}

func (o DatasourceIPAddressesAddressArrayOutput) ToDatasourceIPAddressesAddressArrayOutput() DatasourceIPAddressesAddressArrayOutput {
	return o
}

func (o DatasourceIPAddressesAddressArrayOutput) ToDatasourceIPAddressesAddressArrayOutputWithContext(ctx context.Context) DatasourceIPAddressesAddressArrayOutput {
	return o
}

func (o DatasourceIPAddressesAddressArrayOutput) Index(i pulumi.IntInput) DatasourceIPAddressesAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasourceIPAddressesAddress {
		return vs[0].([]DatasourceIPAddressesAddress)[vs[1].(int)]
	}).(DatasourceIPAddressesAddressOutput)
}

type DatasourceIPRoutesRoute struct {
	Active      bool   `pulumi:"active"`
	Blackhole   bool   `pulumi:"blackhole"`
	Connect     bool   `pulumi:"connect"`
	Dhcp        bool   `pulumi:"dhcp"`
	Disabled    bool   `pulumi:"disabled"`
	Distance    int    `pulumi:"distance"`
	DstAddress  string `pulumi:"dstAddress"`
	Dynamic     bool   `pulumi:"dynamic"`
	Ecmp        bool   `pulumi:"ecmp"`
	Gateway     string `pulumi:"gateway"`
	HwOffloaded bool   `pulumi:"hwOffloaded"`
	// The ID of this resource.
	Id                string `pulumi:"id"`
	ImmediateGw       string `pulumi:"immediateGw"`
	Inactive          bool   `pulumi:"inactive"`
	LocalAddress      string `pulumi:"localAddress"`
	PrefSrc           string `pulumi:"prefSrc"`
	RoutingTable      string `pulumi:"routingTable"`
	Scope             int    `pulumi:"scope"`
	Static            bool   `pulumi:"static"`
	SuppressHwOffload bool   `pulumi:"suppressHwOffload"`
	TargetScope       int    `pulumi:"targetScope"`
	VrfInterface      string `pulumi:"vrfInterface"`
}

// DatasourceIPRoutesRouteInput is an input type that accepts DatasourceIPRoutesRouteArgs and DatasourceIPRoutesRouteOutput values.
// You can construct a concrete instance of `DatasourceIPRoutesRouteInput` via:
//
//	DatasourceIPRoutesRouteArgs{...}
type DatasourceIPRoutesRouteInput interface {
	pulumi.Input

	ToDatasourceIPRoutesRouteOutput() DatasourceIPRoutesRouteOutput
	ToDatasourceIPRoutesRouteOutputWithContext(context.Context) DatasourceIPRoutesRouteOutput
}

type DatasourceIPRoutesRouteArgs struct {
	Active      pulumi.BoolInput   `pulumi:"active"`
	Blackhole   pulumi.BoolInput   `pulumi:"blackhole"`
	Connect     pulumi.BoolInput   `pulumi:"connect"`
	Dhcp        pulumi.BoolInput   `pulumi:"dhcp"`
	Disabled    pulumi.BoolInput   `pulumi:"disabled"`
	Distance    pulumi.IntInput    `pulumi:"distance"`
	DstAddress  pulumi.StringInput `pulumi:"dstAddress"`
	Dynamic     pulumi.BoolInput   `pulumi:"dynamic"`
	Ecmp        pulumi.BoolInput   `pulumi:"ecmp"`
	Gateway     pulumi.StringInput `pulumi:"gateway"`
	HwOffloaded pulumi.BoolInput   `pulumi:"hwOffloaded"`
	// The ID of this resource.
	Id                pulumi.StringInput `pulumi:"id"`
	ImmediateGw       pulumi.StringInput `pulumi:"immediateGw"`
	Inactive          pulumi.BoolInput   `pulumi:"inactive"`
	LocalAddress      pulumi.StringInput `pulumi:"localAddress"`
	PrefSrc           pulumi.StringInput `pulumi:"prefSrc"`
	RoutingTable      pulumi.StringInput `pulumi:"routingTable"`
	Scope             pulumi.IntInput    `pulumi:"scope"`
	Static            pulumi.BoolInput   `pulumi:"static"`
	SuppressHwOffload pulumi.BoolInput   `pulumi:"suppressHwOffload"`
	TargetScope       pulumi.IntInput    `pulumi:"targetScope"`
	VrfInterface      pulumi.StringInput `pulumi:"vrfInterface"`
}

func (DatasourceIPRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPRoutesRoute)(nil)).Elem()
}

func (i DatasourceIPRoutesRouteArgs) ToDatasourceIPRoutesRouteOutput() DatasourceIPRoutesRouteOutput {
	return i.ToDatasourceIPRoutesRouteOutputWithContext(context.Background())
}

func (i DatasourceIPRoutesRouteArgs) ToDatasourceIPRoutesRouteOutputWithContext(ctx context.Context) DatasourceIPRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceIPRoutesRouteOutput)
}

// DatasourceIPRoutesRouteArrayInput is an input type that accepts DatasourceIPRoutesRouteArray and DatasourceIPRoutesRouteArrayOutput values.
// You can construct a concrete instance of `DatasourceIPRoutesRouteArrayInput` via:
//
//	DatasourceIPRoutesRouteArray{ DatasourceIPRoutesRouteArgs{...} }
type DatasourceIPRoutesRouteArrayInput interface {
	pulumi.Input

	ToDatasourceIPRoutesRouteArrayOutput() DatasourceIPRoutesRouteArrayOutput
	ToDatasourceIPRoutesRouteArrayOutputWithContext(context.Context) DatasourceIPRoutesRouteArrayOutput
}

type DatasourceIPRoutesRouteArray []DatasourceIPRoutesRouteInput

func (DatasourceIPRoutesRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceIPRoutesRoute)(nil)).Elem()
}

func (i DatasourceIPRoutesRouteArray) ToDatasourceIPRoutesRouteArrayOutput() DatasourceIPRoutesRouteArrayOutput {
	return i.ToDatasourceIPRoutesRouteArrayOutputWithContext(context.Background())
}

func (i DatasourceIPRoutesRouteArray) ToDatasourceIPRoutesRouteArrayOutputWithContext(ctx context.Context) DatasourceIPRoutesRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceIPRoutesRouteArrayOutput)
}

type DatasourceIPRoutesRouteOutput struct{ *pulumi.OutputState }

func (DatasourceIPRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPRoutesRoute)(nil)).Elem()
}

func (o DatasourceIPRoutesRouteOutput) ToDatasourceIPRoutesRouteOutput() DatasourceIPRoutesRouteOutput {
	return o
}

func (o DatasourceIPRoutesRouteOutput) ToDatasourceIPRoutesRouteOutputWithContext(ctx context.Context) DatasourceIPRoutesRouteOutput {
	return o
}

func (o DatasourceIPRoutesRouteOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.Active }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) Blackhole() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.Blackhole }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) Connect() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.Connect }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) int { return v.Distance }).(pulumi.IntOutput)
}

func (o DatasourceIPRoutesRouteOutput) DstAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) string { return v.DstAddress }).(pulumi.StringOutput)
}

func (o DatasourceIPRoutesRouteOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) Ecmp() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.Ecmp }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o DatasourceIPRoutesRouteOutput) HwOffloaded() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.HwOffloaded }).(pulumi.BoolOutput)
}

// The ID of this resource.
func (o DatasourceIPRoutesRouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) string { return v.Id }).(pulumi.StringOutput)
}

func (o DatasourceIPRoutesRouteOutput) ImmediateGw() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) string { return v.ImmediateGw }).(pulumi.StringOutput)
}

func (o DatasourceIPRoutesRouteOutput) Inactive() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.Inactive }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) string { return v.LocalAddress }).(pulumi.StringOutput)
}

func (o DatasourceIPRoutesRouteOutput) PrefSrc() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) string { return v.PrefSrc }).(pulumi.StringOutput)
}

func (o DatasourceIPRoutesRouteOutput) RoutingTable() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) string { return v.RoutingTable }).(pulumi.StringOutput)
}

func (o DatasourceIPRoutesRouteOutput) Scope() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) int { return v.Scope }).(pulumi.IntOutput)
}

func (o DatasourceIPRoutesRouteOutput) Static() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.Static }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) SuppressHwOffload() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) bool { return v.SuppressHwOffload }).(pulumi.BoolOutput)
}

func (o DatasourceIPRoutesRouteOutput) TargetScope() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) int { return v.TargetScope }).(pulumi.IntOutput)
}

func (o DatasourceIPRoutesRouteOutput) VrfInterface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPRoutesRoute) string { return v.VrfInterface }).(pulumi.StringOutput)
}

type DatasourceIPRoutesRouteArrayOutput struct{ *pulumi.OutputState }

func (DatasourceIPRoutesRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceIPRoutesRoute)(nil)).Elem()
}

func (o DatasourceIPRoutesRouteArrayOutput) ToDatasourceIPRoutesRouteArrayOutput() DatasourceIPRoutesRouteArrayOutput {
	return o
}

func (o DatasourceIPRoutesRouteArrayOutput) ToDatasourceIPRoutesRouteArrayOutputWithContext(ctx context.Context) DatasourceIPRoutesRouteArrayOutput {
	return o
}

func (o DatasourceIPRoutesRouteArrayOutput) Index(i pulumi.IntInput) DatasourceIPRoutesRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasourceIPRoutesRoute {
		return vs[0].([]DatasourceIPRoutesRoute)[vs[1].(int)]
	}).(DatasourceIPRoutesRouteOutput)
}

type DatasourceIPv6AddressesAddress struct {
	ActualInterface string `pulumi:"actualInterface"`
	Address         string `pulumi:"address"`
	Advertise       bool   `pulumi:"advertise"`
	Comment         string `pulumi:"comment"`
	Disabled        bool   `pulumi:"disabled"`
	Dynamic         bool   `pulumi:"dynamic"`
	Eui64           bool   `pulumi:"eui64"`
	FromPool        string `pulumi:"fromPool"`
	// The ID of this resource.
	Id        string `pulumi:"id"`
	Interface string `pulumi:"interface"`
	Invalid   bool   `pulumi:"invalid"`
	LinkLocal bool   `pulumi:"linkLocal"`
	NoDad     bool   `pulumi:"noDad"`
}

// DatasourceIPv6AddressesAddressInput is an input type that accepts DatasourceIPv6AddressesAddressArgs and DatasourceIPv6AddressesAddressOutput values.
// You can construct a concrete instance of `DatasourceIPv6AddressesAddressInput` via:
//
//	DatasourceIPv6AddressesAddressArgs{...}
type DatasourceIPv6AddressesAddressInput interface {
	pulumi.Input

	ToDatasourceIPv6AddressesAddressOutput() DatasourceIPv6AddressesAddressOutput
	ToDatasourceIPv6AddressesAddressOutputWithContext(context.Context) DatasourceIPv6AddressesAddressOutput
}

type DatasourceIPv6AddressesAddressArgs struct {
	ActualInterface pulumi.StringInput `pulumi:"actualInterface"`
	Address         pulumi.StringInput `pulumi:"address"`
	Advertise       pulumi.BoolInput   `pulumi:"advertise"`
	Comment         pulumi.StringInput `pulumi:"comment"`
	Disabled        pulumi.BoolInput   `pulumi:"disabled"`
	Dynamic         pulumi.BoolInput   `pulumi:"dynamic"`
	Eui64           pulumi.BoolInput   `pulumi:"eui64"`
	FromPool        pulumi.StringInput `pulumi:"fromPool"`
	// The ID of this resource.
	Id        pulumi.StringInput `pulumi:"id"`
	Interface pulumi.StringInput `pulumi:"interface"`
	Invalid   pulumi.BoolInput   `pulumi:"invalid"`
	LinkLocal pulumi.BoolInput   `pulumi:"linkLocal"`
	NoDad     pulumi.BoolInput   `pulumi:"noDad"`
}

func (DatasourceIPv6AddressesAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPv6AddressesAddress)(nil)).Elem()
}

func (i DatasourceIPv6AddressesAddressArgs) ToDatasourceIPv6AddressesAddressOutput() DatasourceIPv6AddressesAddressOutput {
	return i.ToDatasourceIPv6AddressesAddressOutputWithContext(context.Background())
}

func (i DatasourceIPv6AddressesAddressArgs) ToDatasourceIPv6AddressesAddressOutputWithContext(ctx context.Context) DatasourceIPv6AddressesAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceIPv6AddressesAddressOutput)
}

// DatasourceIPv6AddressesAddressArrayInput is an input type that accepts DatasourceIPv6AddressesAddressArray and DatasourceIPv6AddressesAddressArrayOutput values.
// You can construct a concrete instance of `DatasourceIPv6AddressesAddressArrayInput` via:
//
//	DatasourceIPv6AddressesAddressArray{ DatasourceIPv6AddressesAddressArgs{...} }
type DatasourceIPv6AddressesAddressArrayInput interface {
	pulumi.Input

	ToDatasourceIPv6AddressesAddressArrayOutput() DatasourceIPv6AddressesAddressArrayOutput
	ToDatasourceIPv6AddressesAddressArrayOutputWithContext(context.Context) DatasourceIPv6AddressesAddressArrayOutput
}

type DatasourceIPv6AddressesAddressArray []DatasourceIPv6AddressesAddressInput

func (DatasourceIPv6AddressesAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceIPv6AddressesAddress)(nil)).Elem()
}

func (i DatasourceIPv6AddressesAddressArray) ToDatasourceIPv6AddressesAddressArrayOutput() DatasourceIPv6AddressesAddressArrayOutput {
	return i.ToDatasourceIPv6AddressesAddressArrayOutputWithContext(context.Background())
}

func (i DatasourceIPv6AddressesAddressArray) ToDatasourceIPv6AddressesAddressArrayOutputWithContext(ctx context.Context) DatasourceIPv6AddressesAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceIPv6AddressesAddressArrayOutput)
}

type DatasourceIPv6AddressesAddressOutput struct{ *pulumi.OutputState }

func (DatasourceIPv6AddressesAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPv6AddressesAddress)(nil)).Elem()
}

func (o DatasourceIPv6AddressesAddressOutput) ToDatasourceIPv6AddressesAddressOutput() DatasourceIPv6AddressesAddressOutput {
	return o
}

func (o DatasourceIPv6AddressesAddressOutput) ToDatasourceIPv6AddressesAddressOutputWithContext(ctx context.Context) DatasourceIPv6AddressesAddressOutput {
	return o
}

func (o DatasourceIPv6AddressesAddressOutput) ActualInterface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) string { return v.ActualInterface }).(pulumi.StringOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) string { return v.Address }).(pulumi.StringOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) Advertise() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) bool { return v.Advertise }).(pulumi.BoolOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) string { return v.Comment }).(pulumi.StringOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) Eui64() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) bool { return v.Eui64 }).(pulumi.BoolOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) FromPool() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) string { return v.FromPool }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o DatasourceIPv6AddressesAddressOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) string { return v.Id }).(pulumi.StringOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) string { return v.Interface }).(pulumi.StringOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) bool { return v.Invalid }).(pulumi.BoolOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) LinkLocal() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) bool { return v.LinkLocal }).(pulumi.BoolOutput)
}

func (o DatasourceIPv6AddressesAddressOutput) NoDad() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceIPv6AddressesAddress) bool { return v.NoDad }).(pulumi.BoolOutput)
}

type DatasourceIPv6AddressesAddressArrayOutput struct{ *pulumi.OutputState }

func (DatasourceIPv6AddressesAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceIPv6AddressesAddress)(nil)).Elem()
}

func (o DatasourceIPv6AddressesAddressArrayOutput) ToDatasourceIPv6AddressesAddressArrayOutput() DatasourceIPv6AddressesAddressArrayOutput {
	return o
}

func (o DatasourceIPv6AddressesAddressArrayOutput) ToDatasourceIPv6AddressesAddressArrayOutputWithContext(ctx context.Context) DatasourceIPv6AddressesAddressArrayOutput {
	return o
}

func (o DatasourceIPv6AddressesAddressArrayOutput) Index(i pulumi.IntInput) DatasourceIPv6AddressesAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasourceIPv6AddressesAddress {
		return vs[0].([]DatasourceIPv6AddressesAddress)[vs[1].(int)]
	}).(DatasourceIPv6AddressesAddressOutput)
}

type DatasourceInterfacesInterface struct {
	ActualMtu   int    `pulumi:"actualMtu"`
	Comment     string `pulumi:"comment"`
	DefaultName string `pulumi:"defaultName"`
	Disabled    bool   `pulumi:"disabled"`
	FpRxByte    int    `pulumi:"fpRxByte"`
	FpRxPacket  int    `pulumi:"fpRxPacket"`
	FpTxByte    int    `pulumi:"fpTxByte"`
	FpTxPacket  int    `pulumi:"fpTxPacket"`
	// The ID of this resource.
	Id               string `pulumi:"id"`
	L2mtu            int    `pulumi:"l2mtu"`
	LastLinkDownTime string `pulumi:"lastLinkDownTime"`
	LastLinkUpTime   string `pulumi:"lastLinkUpTime"`
	LinkDowns        int    `pulumi:"linkDowns"`
	MacAddress       string `pulumi:"macAddress"`
	MaxL2mtu         int    `pulumi:"maxL2mtu"`
	Mtu              string `pulumi:"mtu"`
	Name             string `pulumi:"name"`
	Running          bool   `pulumi:"running"`
	RxByte           int    `pulumi:"rxByte"`
	RxDrop           int    `pulumi:"rxDrop"`
	RxError          int    `pulumi:"rxError"`
	RxPacket         int    `pulumi:"rxPacket"`
	Slave            bool   `pulumi:"slave"`
	TxByte           int    `pulumi:"txByte"`
	TxDrop           int    `pulumi:"txDrop"`
	TxError          int    `pulumi:"txError"`
	TxPacket         int    `pulumi:"txPacket"`
	TxQueueDrop      int    `pulumi:"txQueueDrop"`
	Type             string `pulumi:"type"`
}

// DatasourceInterfacesInterfaceInput is an input type that accepts DatasourceInterfacesInterfaceArgs and DatasourceInterfacesInterfaceOutput values.
// You can construct a concrete instance of `DatasourceInterfacesInterfaceInput` via:
//
//	DatasourceInterfacesInterfaceArgs{...}
type DatasourceInterfacesInterfaceInput interface {
	pulumi.Input

	ToDatasourceInterfacesInterfaceOutput() DatasourceInterfacesInterfaceOutput
	ToDatasourceInterfacesInterfaceOutputWithContext(context.Context) DatasourceInterfacesInterfaceOutput
}

type DatasourceInterfacesInterfaceArgs struct {
	ActualMtu   pulumi.IntInput    `pulumi:"actualMtu"`
	Comment     pulumi.StringInput `pulumi:"comment"`
	DefaultName pulumi.StringInput `pulumi:"defaultName"`
	Disabled    pulumi.BoolInput   `pulumi:"disabled"`
	FpRxByte    pulumi.IntInput    `pulumi:"fpRxByte"`
	FpRxPacket  pulumi.IntInput    `pulumi:"fpRxPacket"`
	FpTxByte    pulumi.IntInput    `pulumi:"fpTxByte"`
	FpTxPacket  pulumi.IntInput    `pulumi:"fpTxPacket"`
	// The ID of this resource.
	Id               pulumi.StringInput `pulumi:"id"`
	L2mtu            pulumi.IntInput    `pulumi:"l2mtu"`
	LastLinkDownTime pulumi.StringInput `pulumi:"lastLinkDownTime"`
	LastLinkUpTime   pulumi.StringInput `pulumi:"lastLinkUpTime"`
	LinkDowns        pulumi.IntInput    `pulumi:"linkDowns"`
	MacAddress       pulumi.StringInput `pulumi:"macAddress"`
	MaxL2mtu         pulumi.IntInput    `pulumi:"maxL2mtu"`
	Mtu              pulumi.StringInput `pulumi:"mtu"`
	Name             pulumi.StringInput `pulumi:"name"`
	Running          pulumi.BoolInput   `pulumi:"running"`
	RxByte           pulumi.IntInput    `pulumi:"rxByte"`
	RxDrop           pulumi.IntInput    `pulumi:"rxDrop"`
	RxError          pulumi.IntInput    `pulumi:"rxError"`
	RxPacket         pulumi.IntInput    `pulumi:"rxPacket"`
	Slave            pulumi.BoolInput   `pulumi:"slave"`
	TxByte           pulumi.IntInput    `pulumi:"txByte"`
	TxDrop           pulumi.IntInput    `pulumi:"txDrop"`
	TxError          pulumi.IntInput    `pulumi:"txError"`
	TxPacket         pulumi.IntInput    `pulumi:"txPacket"`
	TxQueueDrop      pulumi.IntInput    `pulumi:"txQueueDrop"`
	Type             pulumi.StringInput `pulumi:"type"`
}

func (DatasourceInterfacesInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceInterfacesInterface)(nil)).Elem()
}

func (i DatasourceInterfacesInterfaceArgs) ToDatasourceInterfacesInterfaceOutput() DatasourceInterfacesInterfaceOutput {
	return i.ToDatasourceInterfacesInterfaceOutputWithContext(context.Background())
}

func (i DatasourceInterfacesInterfaceArgs) ToDatasourceInterfacesInterfaceOutputWithContext(ctx context.Context) DatasourceInterfacesInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceInterfacesInterfaceOutput)
}

// DatasourceInterfacesInterfaceArrayInput is an input type that accepts DatasourceInterfacesInterfaceArray and DatasourceInterfacesInterfaceArrayOutput values.
// You can construct a concrete instance of `DatasourceInterfacesInterfaceArrayInput` via:
//
//	DatasourceInterfacesInterfaceArray{ DatasourceInterfacesInterfaceArgs{...} }
type DatasourceInterfacesInterfaceArrayInput interface {
	pulumi.Input

	ToDatasourceInterfacesInterfaceArrayOutput() DatasourceInterfacesInterfaceArrayOutput
	ToDatasourceInterfacesInterfaceArrayOutputWithContext(context.Context) DatasourceInterfacesInterfaceArrayOutput
}

type DatasourceInterfacesInterfaceArray []DatasourceInterfacesInterfaceInput

func (DatasourceInterfacesInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceInterfacesInterface)(nil)).Elem()
}

func (i DatasourceInterfacesInterfaceArray) ToDatasourceInterfacesInterfaceArrayOutput() DatasourceInterfacesInterfaceArrayOutput {
	return i.ToDatasourceInterfacesInterfaceArrayOutputWithContext(context.Background())
}

func (i DatasourceInterfacesInterfaceArray) ToDatasourceInterfacesInterfaceArrayOutputWithContext(ctx context.Context) DatasourceInterfacesInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceInterfacesInterfaceArrayOutput)
}

type DatasourceInterfacesInterfaceOutput struct{ *pulumi.OutputState }

func (DatasourceInterfacesInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceInterfacesInterface)(nil)).Elem()
}

func (o DatasourceInterfacesInterfaceOutput) ToDatasourceInterfacesInterfaceOutput() DatasourceInterfacesInterfaceOutput {
	return o
}

func (o DatasourceInterfacesInterfaceOutput) ToDatasourceInterfacesInterfaceOutputWithContext(ctx context.Context) DatasourceInterfacesInterfaceOutput {
	return o
}

func (o DatasourceInterfacesInterfaceOutput) ActualMtu() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.ActualMtu }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) string { return v.Comment }).(pulumi.StringOutput)
}

func (o DatasourceInterfacesInterfaceOutput) DefaultName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) string { return v.DefaultName }).(pulumi.StringOutput)
}

func (o DatasourceInterfacesInterfaceOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o DatasourceInterfacesInterfaceOutput) FpRxByte() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.FpRxByte }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) FpRxPacket() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.FpRxPacket }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) FpTxByte() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.FpTxByte }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) FpTxPacket() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.FpTxPacket }).(pulumi.IntOutput)
}

// The ID of this resource.
func (o DatasourceInterfacesInterfaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) string { return v.Id }).(pulumi.StringOutput)
}

func (o DatasourceInterfacesInterfaceOutput) L2mtu() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.L2mtu }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) LastLinkDownTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) string { return v.LastLinkDownTime }).(pulumi.StringOutput)
}

func (o DatasourceInterfacesInterfaceOutput) LastLinkUpTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) string { return v.LastLinkUpTime }).(pulumi.StringOutput)
}

func (o DatasourceInterfacesInterfaceOutput) LinkDowns() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.LinkDowns }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

func (o DatasourceInterfacesInterfaceOutput) MaxL2mtu() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.MaxL2mtu }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) Mtu() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) string { return v.Mtu }).(pulumi.StringOutput)
}

func (o DatasourceInterfacesInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) string { return v.Name }).(pulumi.StringOutput)
}

func (o DatasourceInterfacesInterfaceOutput) Running() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) bool { return v.Running }).(pulumi.BoolOutput)
}

func (o DatasourceInterfacesInterfaceOutput) RxByte() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.RxByte }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) RxDrop() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.RxDrop }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) RxError() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.RxError }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) RxPacket() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.RxPacket }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) Slave() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) bool { return v.Slave }).(pulumi.BoolOutput)
}

func (o DatasourceInterfacesInterfaceOutput) TxByte() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.TxByte }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) TxDrop() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.TxDrop }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) TxError() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.TxError }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) TxPacket() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.TxPacket }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) TxQueueDrop() pulumi.IntOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) int { return v.TxQueueDrop }).(pulumi.IntOutput)
}

func (o DatasourceInterfacesInterfaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceInterfacesInterface) string { return v.Type }).(pulumi.StringOutput)
}

type DatasourceInterfacesInterfaceArrayOutput struct{ *pulumi.OutputState }

func (DatasourceInterfacesInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasourceInterfacesInterface)(nil)).Elem()
}

func (o DatasourceInterfacesInterfaceArrayOutput) ToDatasourceInterfacesInterfaceArrayOutput() DatasourceInterfacesInterfaceArrayOutput {
	return o
}

func (o DatasourceInterfacesInterfaceArrayOutput) ToDatasourceInterfacesInterfaceArrayOutputWithContext(ctx context.Context) DatasourceInterfacesInterfaceArrayOutput {
	return o
}

func (o DatasourceInterfacesInterfaceArrayOutput) Index(i pulumi.IntInput) DatasourceInterfacesInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasourceInterfacesInterface {
		return vs[0].([]DatasourceInterfacesInterface)[vs[1].(int)]
	}).(DatasourceInterfacesInterfaceOutput)
}

type ResourceSystemCertificateSign struct {
	// Which CA to use if signing issued certificates.
	Ca *string `pulumi:"ca"`
	// CRL host if issuing CA certificate.
	CaCrlHost *string `pulumi:"caCrlHost"`
}

// ResourceSystemCertificateSignInput is an input type that accepts ResourceSystemCertificateSignArgs and ResourceSystemCertificateSignOutput values.
// You can construct a concrete instance of `ResourceSystemCertificateSignInput` via:
//
//	ResourceSystemCertificateSignArgs{...}
type ResourceSystemCertificateSignInput interface {
	pulumi.Input

	ToResourceSystemCertificateSignOutput() ResourceSystemCertificateSignOutput
	ToResourceSystemCertificateSignOutputWithContext(context.Context) ResourceSystemCertificateSignOutput
}

type ResourceSystemCertificateSignArgs struct {
	// Which CA to use if signing issued certificates.
	Ca pulumi.StringPtrInput `pulumi:"ca"`
	// CRL host if issuing CA certificate.
	CaCrlHost pulumi.StringPtrInput `pulumi:"caCrlHost"`
}

func (ResourceSystemCertificateSignArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSystemCertificateSign)(nil)).Elem()
}

func (i ResourceSystemCertificateSignArgs) ToResourceSystemCertificateSignOutput() ResourceSystemCertificateSignOutput {
	return i.ToResourceSystemCertificateSignOutputWithContext(context.Background())
}

func (i ResourceSystemCertificateSignArgs) ToResourceSystemCertificateSignOutputWithContext(ctx context.Context) ResourceSystemCertificateSignOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSystemCertificateSignOutput)
}

// ResourceSystemCertificateSignArrayInput is an input type that accepts ResourceSystemCertificateSignArray and ResourceSystemCertificateSignArrayOutput values.
// You can construct a concrete instance of `ResourceSystemCertificateSignArrayInput` via:
//
//	ResourceSystemCertificateSignArray{ ResourceSystemCertificateSignArgs{...} }
type ResourceSystemCertificateSignArrayInput interface {
	pulumi.Input

	ToResourceSystemCertificateSignArrayOutput() ResourceSystemCertificateSignArrayOutput
	ToResourceSystemCertificateSignArrayOutputWithContext(context.Context) ResourceSystemCertificateSignArrayOutput
}

type ResourceSystemCertificateSignArray []ResourceSystemCertificateSignInput

func (ResourceSystemCertificateSignArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceSystemCertificateSign)(nil)).Elem()
}

func (i ResourceSystemCertificateSignArray) ToResourceSystemCertificateSignArrayOutput() ResourceSystemCertificateSignArrayOutput {
	return i.ToResourceSystemCertificateSignArrayOutputWithContext(context.Background())
}

func (i ResourceSystemCertificateSignArray) ToResourceSystemCertificateSignArrayOutputWithContext(ctx context.Context) ResourceSystemCertificateSignArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSystemCertificateSignArrayOutput)
}

type ResourceSystemCertificateSignOutput struct{ *pulumi.OutputState }

func (ResourceSystemCertificateSignOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSystemCertificateSign)(nil)).Elem()
}

func (o ResourceSystemCertificateSignOutput) ToResourceSystemCertificateSignOutput() ResourceSystemCertificateSignOutput {
	return o
}

func (o ResourceSystemCertificateSignOutput) ToResourceSystemCertificateSignOutputWithContext(ctx context.Context) ResourceSystemCertificateSignOutput {
	return o
}

// Which CA to use if signing issued certificates.
func (o ResourceSystemCertificateSignOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSystemCertificateSign) *string { return v.Ca }).(pulumi.StringPtrOutput)
}

// CRL host if issuing CA certificate.
func (o ResourceSystemCertificateSignOutput) CaCrlHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSystemCertificateSign) *string { return v.CaCrlHost }).(pulumi.StringPtrOutput)
}

type ResourceSystemCertificateSignArrayOutput struct{ *pulumi.OutputState }

func (ResourceSystemCertificateSignArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceSystemCertificateSign)(nil)).Elem()
}

func (o ResourceSystemCertificateSignArrayOutput) ToResourceSystemCertificateSignArrayOutput() ResourceSystemCertificateSignArrayOutput {
	return o
}

func (o ResourceSystemCertificateSignArrayOutput) ToResourceSystemCertificateSignArrayOutputWithContext(ctx context.Context) ResourceSystemCertificateSignArrayOutput {
	return o
}

func (o ResourceSystemCertificateSignArrayOutput) Index(i pulumi.IntInput) ResourceSystemCertificateSignOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceSystemCertificateSign {
		return vs[0].([]ResourceSystemCertificateSign)[vs[1].(int)]
	}).(ResourceSystemCertificateSignOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceFirewallAddressListInput)(nil)).Elem(), DatasourceFirewallAddressListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceFirewallAddressListArrayInput)(nil)).Elem(), DatasourceFirewallAddressListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceFirewallMangleInput)(nil)).Elem(), DatasourceFirewallMangleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceFirewallMangleArrayInput)(nil)).Elem(), DatasourceFirewallMangleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceFirewallNatInput)(nil)).Elem(), DatasourceFirewallNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceFirewallNatArrayInput)(nil)).Elem(), DatasourceFirewallNatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceFirewallRuleInput)(nil)).Elem(), DatasourceFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceFirewallRuleArrayInput)(nil)).Elem(), DatasourceFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceIPAddressesAddressInput)(nil)).Elem(), DatasourceIPAddressesAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceIPAddressesAddressArrayInput)(nil)).Elem(), DatasourceIPAddressesAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceIPRoutesRouteInput)(nil)).Elem(), DatasourceIPRoutesRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceIPRoutesRouteArrayInput)(nil)).Elem(), DatasourceIPRoutesRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceIPv6AddressesAddressInput)(nil)).Elem(), DatasourceIPv6AddressesAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceIPv6AddressesAddressArrayInput)(nil)).Elem(), DatasourceIPv6AddressesAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceInterfacesInterfaceInput)(nil)).Elem(), DatasourceInterfacesInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasourceInterfacesInterfaceArrayInput)(nil)).Elem(), DatasourceInterfacesInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSystemCertificateSignInput)(nil)).Elem(), ResourceSystemCertificateSignArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSystemCertificateSignArrayInput)(nil)).Elem(), ResourceSystemCertificateSignArray{})
	pulumi.RegisterOutputType(DatasourceFirewallAddressListOutput{})
	pulumi.RegisterOutputType(DatasourceFirewallAddressListArrayOutput{})
	pulumi.RegisterOutputType(DatasourceFirewallMangleOutput{})
	pulumi.RegisterOutputType(DatasourceFirewallMangleArrayOutput{})
	pulumi.RegisterOutputType(DatasourceFirewallNatOutput{})
	pulumi.RegisterOutputType(DatasourceFirewallNatArrayOutput{})
	pulumi.RegisterOutputType(DatasourceFirewallRuleOutput{})
	pulumi.RegisterOutputType(DatasourceFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(DatasourceIPAddressesAddressOutput{})
	pulumi.RegisterOutputType(DatasourceIPAddressesAddressArrayOutput{})
	pulumi.RegisterOutputType(DatasourceIPRoutesRouteOutput{})
	pulumi.RegisterOutputType(DatasourceIPRoutesRouteArrayOutput{})
	pulumi.RegisterOutputType(DatasourceIPv6AddressesAddressOutput{})
	pulumi.RegisterOutputType(DatasourceIPv6AddressesAddressArrayOutput{})
	pulumi.RegisterOutputType(DatasourceInterfacesInterfaceOutput{})
	pulumi.RegisterOutputType(DatasourceInterfacesInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ResourceSystemCertificateSignOutput{})
	pulumi.RegisterOutputType(ResourceSystemCertificateSignArrayOutput{})
}
