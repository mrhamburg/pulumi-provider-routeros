// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourceRoutingTable(ctx, "testTable", &routeros.ResourceRoutingTableArgs{
//				Fib: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #The ID can be found via API or the terminal #The command for the terminal is -> :put [/routing/table get [print show-ids]]
//
// ```sh
//
//	$ pulumi import routeros:index/resourceRoutingTable:ResourceRoutingTable test_table "*0"
//
// ```
type ResourceRoutingTable struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	Comment  pulumi.StringPtrOutput `pulumi:"comment"`
	Disabled pulumi.BoolPtrOutput   `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolOutput `pulumi:"dynamic"`
	// fib parameter should be specified if the routing table is intended to push routes to the FIB.
	Fib     pulumi.BoolPtrOutput `pulumi:"fib"`
	Invalid pulumi.BoolOutput    `pulumi:"invalid"`
	// Routing table name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewResourceRoutingTable registers a new resource with the given unique name, arguments, and options.
func NewResourceRoutingTable(ctx *pulumi.Context,
	name string, args *ResourceRoutingTableArgs, opts ...pulumi.ResourceOption) (*ResourceRoutingTable, error) {
	if args == nil {
		args = &ResourceRoutingTableArgs{}
	}

	var resource ResourceRoutingTable
	err := ctx.RegisterResource("routeros:index/resourceRoutingTable:ResourceRoutingTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceRoutingTable gets an existing ResourceRoutingTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceRoutingTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceRoutingTableState, opts ...pulumi.ResourceOption) (*ResourceRoutingTable, error) {
	var resource ResourceRoutingTable
	err := ctx.ReadResource("routeros:index/resourceRoutingTable:ResourceRoutingTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceRoutingTable resources.
type resourceRoutingTableState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	Comment  *string `pulumi:"comment"`
	Disabled *bool   `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic *bool `pulumi:"dynamic"`
	// fib parameter should be specified if the routing table is intended to push routes to the FIB.
	Fib     *bool `pulumi:"fib"`
	Invalid *bool `pulumi:"invalid"`
	// Routing table name.
	Name *string `pulumi:"name"`
}

type ResourceRoutingTableState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	Comment  pulumi.StringPtrInput
	Disabled pulumi.BoolPtrInput
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolPtrInput
	// fib parameter should be specified if the routing table is intended to push routes to the FIB.
	Fib     pulumi.BoolPtrInput
	Invalid pulumi.BoolPtrInput
	// Routing table name.
	Name pulumi.StringPtrInput
}

func (ResourceRoutingTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceRoutingTableState)(nil)).Elem()
}

type resourceRoutingTableArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	Comment  *string `pulumi:"comment"`
	Disabled *bool   `pulumi:"disabled"`
	// fib parameter should be specified if the routing table is intended to push routes to the FIB.
	Fib *bool `pulumi:"fib"`
	// Routing table name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ResourceRoutingTable resource.
type ResourceRoutingTableArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	Comment  pulumi.StringPtrInput
	Disabled pulumi.BoolPtrInput
	// fib parameter should be specified if the routing table is intended to push routes to the FIB.
	Fib pulumi.BoolPtrInput
	// Routing table name.
	Name pulumi.StringPtrInput
}

func (ResourceRoutingTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceRoutingTableArgs)(nil)).Elem()
}

type ResourceRoutingTableInput interface {
	pulumi.Input

	ToResourceRoutingTableOutput() ResourceRoutingTableOutput
	ToResourceRoutingTableOutputWithContext(ctx context.Context) ResourceRoutingTableOutput
}

func (*ResourceRoutingTable) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRoutingTable)(nil)).Elem()
}

func (i *ResourceRoutingTable) ToResourceRoutingTableOutput() ResourceRoutingTableOutput {
	return i.ToResourceRoutingTableOutputWithContext(context.Background())
}

func (i *ResourceRoutingTable) ToResourceRoutingTableOutputWithContext(ctx context.Context) ResourceRoutingTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRoutingTableOutput)
}

// ResourceRoutingTableArrayInput is an input type that accepts ResourceRoutingTableArray and ResourceRoutingTableArrayOutput values.
// You can construct a concrete instance of `ResourceRoutingTableArrayInput` via:
//
//	ResourceRoutingTableArray{ ResourceRoutingTableArgs{...} }
type ResourceRoutingTableArrayInput interface {
	pulumi.Input

	ToResourceRoutingTableArrayOutput() ResourceRoutingTableArrayOutput
	ToResourceRoutingTableArrayOutputWithContext(context.Context) ResourceRoutingTableArrayOutput
}

type ResourceRoutingTableArray []ResourceRoutingTableInput

func (ResourceRoutingTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceRoutingTable)(nil)).Elem()
}

func (i ResourceRoutingTableArray) ToResourceRoutingTableArrayOutput() ResourceRoutingTableArrayOutput {
	return i.ToResourceRoutingTableArrayOutputWithContext(context.Background())
}

func (i ResourceRoutingTableArray) ToResourceRoutingTableArrayOutputWithContext(ctx context.Context) ResourceRoutingTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRoutingTableArrayOutput)
}

// ResourceRoutingTableMapInput is an input type that accepts ResourceRoutingTableMap and ResourceRoutingTableMapOutput values.
// You can construct a concrete instance of `ResourceRoutingTableMapInput` via:
//
//	ResourceRoutingTableMap{ "key": ResourceRoutingTableArgs{...} }
type ResourceRoutingTableMapInput interface {
	pulumi.Input

	ToResourceRoutingTableMapOutput() ResourceRoutingTableMapOutput
	ToResourceRoutingTableMapOutputWithContext(context.Context) ResourceRoutingTableMapOutput
}

type ResourceRoutingTableMap map[string]ResourceRoutingTableInput

func (ResourceRoutingTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceRoutingTable)(nil)).Elem()
}

func (i ResourceRoutingTableMap) ToResourceRoutingTableMapOutput() ResourceRoutingTableMapOutput {
	return i.ToResourceRoutingTableMapOutputWithContext(context.Background())
}

func (i ResourceRoutingTableMap) ToResourceRoutingTableMapOutputWithContext(ctx context.Context) ResourceRoutingTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRoutingTableMapOutput)
}

type ResourceRoutingTableOutput struct{ *pulumi.OutputState }

func (ResourceRoutingTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRoutingTable)(nil)).Elem()
}

func (o ResourceRoutingTableOutput) ToResourceRoutingTableOutput() ResourceRoutingTableOutput {
	return o
}

func (o ResourceRoutingTableOutput) ToResourceRoutingTableOutputWithContext(ctx context.Context) ResourceRoutingTableOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceRoutingTableOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceRoutingTable) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceRoutingTableOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRoutingTable) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

func (o ResourceRoutingTableOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceRoutingTable) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ResourceRoutingTableOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceRoutingTable) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
func (o ResourceRoutingTableOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceRoutingTable) pulumi.BoolOutput { return v.Dynamic }).(pulumi.BoolOutput)
}

// fib parameter should be specified if the routing table is intended to push routes to the FIB.
func (o ResourceRoutingTableOutput) Fib() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceRoutingTable) pulumi.BoolPtrOutput { return v.Fib }).(pulumi.BoolPtrOutput)
}

func (o ResourceRoutingTableOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceRoutingTable) pulumi.BoolOutput { return v.Invalid }).(pulumi.BoolOutput)
}

// Routing table name.
func (o ResourceRoutingTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceRoutingTable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ResourceRoutingTableArrayOutput struct{ *pulumi.OutputState }

func (ResourceRoutingTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceRoutingTable)(nil)).Elem()
}

func (o ResourceRoutingTableArrayOutput) ToResourceRoutingTableArrayOutput() ResourceRoutingTableArrayOutput {
	return o
}

func (o ResourceRoutingTableArrayOutput) ToResourceRoutingTableArrayOutputWithContext(ctx context.Context) ResourceRoutingTableArrayOutput {
	return o
}

func (o ResourceRoutingTableArrayOutput) Index(i pulumi.IntInput) ResourceRoutingTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceRoutingTable {
		return vs[0].([]*ResourceRoutingTable)[vs[1].(int)]
	}).(ResourceRoutingTableOutput)
}

type ResourceRoutingTableMapOutput struct{ *pulumi.OutputState }

func (ResourceRoutingTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceRoutingTable)(nil)).Elem()
}

func (o ResourceRoutingTableMapOutput) ToResourceRoutingTableMapOutput() ResourceRoutingTableMapOutput {
	return o
}

func (o ResourceRoutingTableMapOutput) ToResourceRoutingTableMapOutputWithContext(ctx context.Context) ResourceRoutingTableMapOutput {
	return o
}

func (o ResourceRoutingTableMapOutput) MapIndex(k pulumi.StringInput) ResourceRoutingTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceRoutingTable {
		return vs[0].(map[string]*ResourceRoutingTable)[vs[1].(string)]
	}).(ResourceRoutingTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceRoutingTableInput)(nil)).Elem(), &ResourceRoutingTable{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceRoutingTableArrayInput)(nil)).Elem(), ResourceRoutingTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceRoutingTableMapInput)(nil)).Elem(), ResourceRoutingTableMap{})
	pulumi.RegisterOutputType(ResourceRoutingTableOutput{})
	pulumi.RegisterOutputType(ResourceRoutingTableArrayOutput{})
	pulumi.RegisterOutputType(ResourceRoutingTableMapOutput{})
}
