// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func DatasourceIPRoutes(ctx *pulumi.Context, args *DatasourceIPRoutesArgs, opts ...pulumi.InvokeOption) (*DatasourceIPRoutesResult, error) {
	var rv DatasourceIPRoutesResult
	err := ctx.Invoke("routeros:index/datasourceIPRoutes:DatasourceIPRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking DatasourceIPRoutes.
type DatasourceIPRoutesArgs struct {
	___id_   *int    `pulumi:"___id_"`
	___path_ *string `pulumi:"___path_"`
	// Additional request filtering options.
	Filter map[string]interface{} `pulumi:"filter"`
}

// A collection of values returned by DatasourceIPRoutes.
type DatasourceIPRoutesResult struct {
	___id_   *int    `pulumi:"___id_"`
	___path_ *string `pulumi:"___path_"`
	// Additional request filtering options.
	Filter map[string]interface{} `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id     string                    `pulumi:"id"`
	Routes []DatasourceIPRoutesRoute `pulumi:"routes"`
}

func DatasourceIPRoutesOutput(ctx *pulumi.Context, args DatasourceIPRoutesOutputArgs, opts ...pulumi.InvokeOption) DatasourceIPRoutesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (DatasourceIPRoutesResult, error) {
			args := v.(DatasourceIPRoutesArgs)
			r, err := DatasourceIPRoutes(ctx, &args, opts...)
			var s DatasourceIPRoutesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(DatasourceIPRoutesResultOutput)
}

// A collection of arguments for invoking DatasourceIPRoutes.
type DatasourceIPRoutesOutputArgs struct {
	___id_   pulumi.IntPtrInput    `pulumi:"___id_"`
	___path_ pulumi.StringPtrInput `pulumi:"___path_"`
	// Additional request filtering options.
	Filter pulumi.MapInput `pulumi:"filter"`
}

func (DatasourceIPRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPRoutesArgs)(nil)).Elem()
}

// A collection of values returned by DatasourceIPRoutes.
type DatasourceIPRoutesResultOutput struct{ *pulumi.OutputState }

func (DatasourceIPRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceIPRoutesResult)(nil)).Elem()
}

func (o DatasourceIPRoutesResultOutput) ToDatasourceIPRoutesResultOutput() DatasourceIPRoutesResultOutput {
	return o
}

func (o DatasourceIPRoutesResultOutput) ToDatasourceIPRoutesResultOutputWithContext(ctx context.Context) DatasourceIPRoutesResultOutput {
	return o
}

func (o DatasourceIPRoutesResultOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatasourceIPRoutesResult) *int { return v.___id_ }).(pulumi.IntPtrOutput)
}

func (o DatasourceIPRoutesResultOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceIPRoutesResult) *string { return v.___path_ }).(pulumi.StringPtrOutput)
}

// Additional request filtering options.
func (o DatasourceIPRoutesResultOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v DatasourceIPRoutesResult) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o DatasourceIPRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceIPRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o DatasourceIPRoutesResultOutput) Routes() DatasourceIPRoutesRouteArrayOutput {
	return o.ApplyT(func(v DatasourceIPRoutesResult) []DatasourceIPRoutesRoute { return v.Routes }).(DatasourceIPRoutesRouteArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(DatasourceIPRoutesResultOutput{})
}
