// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourceDhcpClient(ctx, "client", &routeros.ResourceDhcpClientArgs{
//				Interface: pulumi.String("bridge"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #The ID can be found via API or the terminal #The command for the terminal is -> :put [/ip/dhcp-client get [print show-ids]]
//
// ```sh
//
//	$ pulumi import routeros:index/resourceDhcpClient:ResourceDhcpClient client "*0"
//
// ```
type ResourceDhcpClient struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// Whether to install default route in routing table received from DHCP server.
	AddDefaultRoute pulumi.StringOutput `pulumi:"addDefaultRoute"`
	// IP address and netmask, which is assigned to DHCP Client from the Server.
	Address pulumi.StringOutput    `pulumi:"address"`
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Distance of default route. Applicable if add-default-route is set to yes.
	DefaultRouteDistance pulumi.IntPtrOutput `pulumi:"defaultRouteDistance"`
	// Options that are sent to the DHCP server.
	DhcpOptions pulumi.StringPtrOutput `pulumi:"dhcpOptions"`
	// The IP address of the DHCP server.
	DhcpServer pulumi.StringOutput  `pulumi:"dhcpServer"`
	Disabled   pulumi.BoolPtrOutput `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolOutput `pulumi:"dynamic"`
	// A time when the lease expires (specified by the DHCP server).
	ExpiresAfter pulumi.StringOutput `pulumi:"expiresAfter"`
	// The IP address of the gateway which is assigned by DHCP server.
	Gateway pulumi.StringOutput `pulumi:"gateway"`
	// Name of the interface.
	Interface pulumi.StringOutput `pulumi:"interface"`
	Invalid   pulumi.BoolOutput   `pulumi:"invalid"`
	// The IP address of the first DNS resolver, that was assigned by the DHCP server.
	PrimaryDns pulumi.StringOutput `pulumi:"primaryDns"`
	// The IP address of the primary NTP server, assigned by the DHCP server.
	PrimaryNtp pulumi.StringOutput `pulumi:"primaryNtp"`
	// The IP address of the second DNS resolver, assigned by the DHCP server.
	SecondaryDns pulumi.StringOutput `pulumi:"secondaryDns"`
	// The IP address of the secondary NTP server, assigned by the DHCP server.
	SecondaryNtp pulumi.StringOutput `pulumi:"secondaryNtp"`
	Status       pulumi.StringOutput `pulumi:"status"`
	// Whether to accept the DNS settings advertised by DHCP Server (will override the settings put in the /ip dns submenu).
	UsePeerDns pulumi.BoolPtrOutput `pulumi:"usePeerDns"`
	// Whether to accept the NTP settings advertised by DHCP Server (will override the settings put in the /system ntp client submenu).
	UsePeerNtp pulumi.BoolPtrOutput `pulumi:"usePeerNtp"`
}

// NewResourceDhcpClient registers a new resource with the given unique name, arguments, and options.
func NewResourceDhcpClient(ctx *pulumi.Context,
	name string, args *ResourceDhcpClientArgs, opts ...pulumi.ResourceOption) (*ResourceDhcpClient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	var resource ResourceDhcpClient
	err := ctx.RegisterResource("routeros:index/resourceDhcpClient:ResourceDhcpClient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceDhcpClient gets an existing ResourceDhcpClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceDhcpClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceDhcpClientState, opts ...pulumi.ResourceOption) (*ResourceDhcpClient, error) {
	var resource ResourceDhcpClient
	err := ctx.ReadResource("routeros:index/resourceDhcpClient:ResourceDhcpClient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceDhcpClient resources.
type resourceDhcpClientState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Whether to install default route in routing table received from DHCP server.
	AddDefaultRoute *string `pulumi:"addDefaultRoute"`
	// IP address and netmask, which is assigned to DHCP Client from the Server.
	Address *string `pulumi:"address"`
	Comment *string `pulumi:"comment"`
	// Distance of default route. Applicable if add-default-route is set to yes.
	DefaultRouteDistance *int `pulumi:"defaultRouteDistance"`
	// Options that are sent to the DHCP server.
	DhcpOptions *string `pulumi:"dhcpOptions"`
	// The IP address of the DHCP server.
	DhcpServer *string `pulumi:"dhcpServer"`
	Disabled   *bool   `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic *bool `pulumi:"dynamic"`
	// A time when the lease expires (specified by the DHCP server).
	ExpiresAfter *string `pulumi:"expiresAfter"`
	// The IP address of the gateway which is assigned by DHCP server.
	Gateway *string `pulumi:"gateway"`
	// Name of the interface.
	Interface *string `pulumi:"interface"`
	Invalid   *bool   `pulumi:"invalid"`
	// The IP address of the first DNS resolver, that was assigned by the DHCP server.
	PrimaryDns *string `pulumi:"primaryDns"`
	// The IP address of the primary NTP server, assigned by the DHCP server.
	PrimaryNtp *string `pulumi:"primaryNtp"`
	// The IP address of the second DNS resolver, assigned by the DHCP server.
	SecondaryDns *string `pulumi:"secondaryDns"`
	// The IP address of the secondary NTP server, assigned by the DHCP server.
	SecondaryNtp *string `pulumi:"secondaryNtp"`
	Status       *string `pulumi:"status"`
	// Whether to accept the DNS settings advertised by DHCP Server (will override the settings put in the /ip dns submenu).
	UsePeerDns *bool `pulumi:"usePeerDns"`
	// Whether to accept the NTP settings advertised by DHCP Server (will override the settings put in the /system ntp client submenu).
	UsePeerNtp *bool `pulumi:"usePeerNtp"`
}

type ResourceDhcpClientState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Whether to install default route in routing table received from DHCP server.
	AddDefaultRoute pulumi.StringPtrInput
	// IP address and netmask, which is assigned to DHCP Client from the Server.
	Address pulumi.StringPtrInput
	Comment pulumi.StringPtrInput
	// Distance of default route. Applicable if add-default-route is set to yes.
	DefaultRouteDistance pulumi.IntPtrInput
	// Options that are sent to the DHCP server.
	DhcpOptions pulumi.StringPtrInput
	// The IP address of the DHCP server.
	DhcpServer pulumi.StringPtrInput
	Disabled   pulumi.BoolPtrInput
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolPtrInput
	// A time when the lease expires (specified by the DHCP server).
	ExpiresAfter pulumi.StringPtrInput
	// The IP address of the gateway which is assigned by DHCP server.
	Gateway pulumi.StringPtrInput
	// Name of the interface.
	Interface pulumi.StringPtrInput
	Invalid   pulumi.BoolPtrInput
	// The IP address of the first DNS resolver, that was assigned by the DHCP server.
	PrimaryDns pulumi.StringPtrInput
	// The IP address of the primary NTP server, assigned by the DHCP server.
	PrimaryNtp pulumi.StringPtrInput
	// The IP address of the second DNS resolver, assigned by the DHCP server.
	SecondaryDns pulumi.StringPtrInput
	// The IP address of the secondary NTP server, assigned by the DHCP server.
	SecondaryNtp pulumi.StringPtrInput
	Status       pulumi.StringPtrInput
	// Whether to accept the DNS settings advertised by DHCP Server (will override the settings put in the /ip dns submenu).
	UsePeerDns pulumi.BoolPtrInput
	// Whether to accept the NTP settings advertised by DHCP Server (will override the settings put in the /system ntp client submenu).
	UsePeerNtp pulumi.BoolPtrInput
}

func (ResourceDhcpClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceDhcpClientState)(nil)).Elem()
}

type resourceDhcpClientArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Whether to install default route in routing table received from DHCP server.
	AddDefaultRoute *string `pulumi:"addDefaultRoute"`
	Comment         *string `pulumi:"comment"`
	// Distance of default route. Applicable if add-default-route is set to yes.
	DefaultRouteDistance *int `pulumi:"defaultRouteDistance"`
	// Options that are sent to the DHCP server.
	DhcpOptions *string `pulumi:"dhcpOptions"`
	Disabled    *bool   `pulumi:"disabled"`
	// Name of the interface.
	Interface string `pulumi:"interface"`
	// Whether to accept the DNS settings advertised by DHCP Server (will override the settings put in the /ip dns submenu).
	UsePeerDns *bool `pulumi:"usePeerDns"`
	// Whether to accept the NTP settings advertised by DHCP Server (will override the settings put in the /system ntp client submenu).
	UsePeerNtp *bool `pulumi:"usePeerNtp"`
}

// The set of arguments for constructing a ResourceDhcpClient resource.
type ResourceDhcpClientArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Whether to install default route in routing table received from DHCP server.
	AddDefaultRoute pulumi.StringPtrInput
	Comment         pulumi.StringPtrInput
	// Distance of default route. Applicable if add-default-route is set to yes.
	DefaultRouteDistance pulumi.IntPtrInput
	// Options that are sent to the DHCP server.
	DhcpOptions pulumi.StringPtrInput
	Disabled    pulumi.BoolPtrInput
	// Name of the interface.
	Interface pulumi.StringInput
	// Whether to accept the DNS settings advertised by DHCP Server (will override the settings put in the /ip dns submenu).
	UsePeerDns pulumi.BoolPtrInput
	// Whether to accept the NTP settings advertised by DHCP Server (will override the settings put in the /system ntp client submenu).
	UsePeerNtp pulumi.BoolPtrInput
}

func (ResourceDhcpClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceDhcpClientArgs)(nil)).Elem()
}

type ResourceDhcpClientInput interface {
	pulumi.Input

	ToResourceDhcpClientOutput() ResourceDhcpClientOutput
	ToResourceDhcpClientOutputWithContext(ctx context.Context) ResourceDhcpClientOutput
}

func (*ResourceDhcpClient) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDhcpClient)(nil)).Elem()
}

func (i *ResourceDhcpClient) ToResourceDhcpClientOutput() ResourceDhcpClientOutput {
	return i.ToResourceDhcpClientOutputWithContext(context.Background())
}

func (i *ResourceDhcpClient) ToResourceDhcpClientOutputWithContext(ctx context.Context) ResourceDhcpClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDhcpClientOutput)
}

// ResourceDhcpClientArrayInput is an input type that accepts ResourceDhcpClientArray and ResourceDhcpClientArrayOutput values.
// You can construct a concrete instance of `ResourceDhcpClientArrayInput` via:
//
//	ResourceDhcpClientArray{ ResourceDhcpClientArgs{...} }
type ResourceDhcpClientArrayInput interface {
	pulumi.Input

	ToResourceDhcpClientArrayOutput() ResourceDhcpClientArrayOutput
	ToResourceDhcpClientArrayOutputWithContext(context.Context) ResourceDhcpClientArrayOutput
}

type ResourceDhcpClientArray []ResourceDhcpClientInput

func (ResourceDhcpClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceDhcpClient)(nil)).Elem()
}

func (i ResourceDhcpClientArray) ToResourceDhcpClientArrayOutput() ResourceDhcpClientArrayOutput {
	return i.ToResourceDhcpClientArrayOutputWithContext(context.Background())
}

func (i ResourceDhcpClientArray) ToResourceDhcpClientArrayOutputWithContext(ctx context.Context) ResourceDhcpClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDhcpClientArrayOutput)
}

// ResourceDhcpClientMapInput is an input type that accepts ResourceDhcpClientMap and ResourceDhcpClientMapOutput values.
// You can construct a concrete instance of `ResourceDhcpClientMapInput` via:
//
//	ResourceDhcpClientMap{ "key": ResourceDhcpClientArgs{...} }
type ResourceDhcpClientMapInput interface {
	pulumi.Input

	ToResourceDhcpClientMapOutput() ResourceDhcpClientMapOutput
	ToResourceDhcpClientMapOutputWithContext(context.Context) ResourceDhcpClientMapOutput
}

type ResourceDhcpClientMap map[string]ResourceDhcpClientInput

func (ResourceDhcpClientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceDhcpClient)(nil)).Elem()
}

func (i ResourceDhcpClientMap) ToResourceDhcpClientMapOutput() ResourceDhcpClientMapOutput {
	return i.ToResourceDhcpClientMapOutputWithContext(context.Background())
}

func (i ResourceDhcpClientMap) ToResourceDhcpClientMapOutputWithContext(ctx context.Context) ResourceDhcpClientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDhcpClientMapOutput)
}

type ResourceDhcpClientOutput struct{ *pulumi.OutputState }

func (ResourceDhcpClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDhcpClient)(nil)).Elem()
}

func (o ResourceDhcpClientOutput) ToResourceDhcpClientOutput() ResourceDhcpClientOutput {
	return o
}

func (o ResourceDhcpClientOutput) ToResourceDhcpClientOutputWithContext(ctx context.Context) ResourceDhcpClientOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceDhcpClientOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceDhcpClientOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// Whether to install default route in routing table received from DHCP server.
func (o ResourceDhcpClientOutput) AddDefaultRoute() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.AddDefaultRoute }).(pulumi.StringOutput)
}

// IP address and netmask, which is assigned to DHCP Client from the Server.
func (o ResourceDhcpClientOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

func (o ResourceDhcpClientOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Distance of default route. Applicable if add-default-route is set to yes.
func (o ResourceDhcpClientOutput) DefaultRouteDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.IntPtrOutput { return v.DefaultRouteDistance }).(pulumi.IntPtrOutput)
}

// Options that are sent to the DHCP server.
func (o ResourceDhcpClientOutput) DhcpOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringPtrOutput { return v.DhcpOptions }).(pulumi.StringPtrOutput)
}

// The IP address of the DHCP server.
func (o ResourceDhcpClientOutput) DhcpServer() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.DhcpServer }).(pulumi.StringOutput)
}

func (o ResourceDhcpClientOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
func (o ResourceDhcpClientOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.BoolOutput { return v.Dynamic }).(pulumi.BoolOutput)
}

// A time when the lease expires (specified by the DHCP server).
func (o ResourceDhcpClientOutput) ExpiresAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.ExpiresAfter }).(pulumi.StringOutput)
}

// The IP address of the gateway which is assigned by DHCP server.
func (o ResourceDhcpClientOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

// Name of the interface.
func (o ResourceDhcpClientOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o ResourceDhcpClientOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.BoolOutput { return v.Invalid }).(pulumi.BoolOutput)
}

// The IP address of the first DNS resolver, that was assigned by the DHCP server.
func (o ResourceDhcpClientOutput) PrimaryDns() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.PrimaryDns }).(pulumi.StringOutput)
}

// The IP address of the primary NTP server, assigned by the DHCP server.
func (o ResourceDhcpClientOutput) PrimaryNtp() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.PrimaryNtp }).(pulumi.StringOutput)
}

// The IP address of the second DNS resolver, assigned by the DHCP server.
func (o ResourceDhcpClientOutput) SecondaryDns() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.SecondaryDns }).(pulumi.StringOutput)
}

// The IP address of the secondary NTP server, assigned by the DHCP server.
func (o ResourceDhcpClientOutput) SecondaryNtp() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.SecondaryNtp }).(pulumi.StringOutput)
}

func (o ResourceDhcpClientOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Whether to accept the DNS settings advertised by DHCP Server (will override the settings put in the /ip dns submenu).
func (o ResourceDhcpClientOutput) UsePeerDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.BoolPtrOutput { return v.UsePeerDns }).(pulumi.BoolPtrOutput)
}

// Whether to accept the NTP settings advertised by DHCP Server (will override the settings put in the /system ntp client submenu).
func (o ResourceDhcpClientOutput) UsePeerNtp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceDhcpClient) pulumi.BoolPtrOutput { return v.UsePeerNtp }).(pulumi.BoolPtrOutput)
}

type ResourceDhcpClientArrayOutput struct{ *pulumi.OutputState }

func (ResourceDhcpClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceDhcpClient)(nil)).Elem()
}

func (o ResourceDhcpClientArrayOutput) ToResourceDhcpClientArrayOutput() ResourceDhcpClientArrayOutput {
	return o
}

func (o ResourceDhcpClientArrayOutput) ToResourceDhcpClientArrayOutputWithContext(ctx context.Context) ResourceDhcpClientArrayOutput {
	return o
}

func (o ResourceDhcpClientArrayOutput) Index(i pulumi.IntInput) ResourceDhcpClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceDhcpClient {
		return vs[0].([]*ResourceDhcpClient)[vs[1].(int)]
	}).(ResourceDhcpClientOutput)
}

type ResourceDhcpClientMapOutput struct{ *pulumi.OutputState }

func (ResourceDhcpClientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceDhcpClient)(nil)).Elem()
}

func (o ResourceDhcpClientMapOutput) ToResourceDhcpClientMapOutput() ResourceDhcpClientMapOutput {
	return o
}

func (o ResourceDhcpClientMapOutput) ToResourceDhcpClientMapOutputWithContext(ctx context.Context) ResourceDhcpClientMapOutput {
	return o
}

func (o ResourceDhcpClientMapOutput) MapIndex(k pulumi.StringInput) ResourceDhcpClientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceDhcpClient {
		return vs[0].(map[string]*ResourceDhcpClient)[vs[1].(string)]
	}).(ResourceDhcpClientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDhcpClientInput)(nil)).Elem(), &ResourceDhcpClient{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDhcpClientArrayInput)(nil)).Elem(), ResourceDhcpClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDhcpClientMapInput)(nil)).Elem(), ResourceDhcpClientMap{})
	pulumi.RegisterOutputType(ResourceDhcpClientOutput{})
	pulumi.RegisterOutputType(ResourceDhcpClientArrayOutput{})
	pulumi.RegisterOutputType(ResourceDhcpClientMapOutput{})
}
