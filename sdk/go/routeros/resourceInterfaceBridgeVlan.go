// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourceInterfaceBridgeVlan(ctx, "bridgeVlan", &routeros.ResourceInterfaceBridgeVlanArgs{
//				Bridge: pulumi.String("bridge"),
//				Taggeds: pulumi.StringArray{
//					pulumi.String("bridge"),
//					pulumi.String("ether1"),
//				},
//				Untaggeds: pulumi.StringArray{
//					pulumi.String("ether5"),
//				},
//				VlanIds: pulumi.String("50"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #The ID can be found via API or the terminal #The command for the terminal is -> :put [/interface/bridge/vlan get [print show-ids]]
//
// ```sh
//
//	$ pulumi import routeros:index/resourceInterfaceBridgeVlan:ResourceInterfaceBridgeVlan bridge_vlan "*0"
//
// ```
type ResourceInterfaceBridgeVlan struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// The bridge interface which the respective VLAN entry is intended for.
	Bridge           pulumi.StringOutput      `pulumi:"bridge"`
	Comment          pulumi.StringPtrOutput   `pulumi:"comment"`
	CurrentTaggeds   pulumi.StringArrayOutput `pulumi:"currentTaggeds"`
	CurrentUntaggeds pulumi.StringArrayOutput `pulumi:"currentUntaggeds"`
	Disabled         pulumi.BoolPtrOutput     `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolOutput `pulumi:"dynamic"`
	// Interface list with a VLAN tag adding action in egress. This setting accepts comma separated values. E.g. tagged=ether1,ether2.
	Taggeds pulumi.StringArrayOutput `pulumi:"taggeds"`
	// Interface list with a VLAN tag removing action in egress. This setting accepts comma separated values. E.g. untagged=ether3,ether4
	Untaggeds pulumi.StringArrayOutput `pulumi:"untaggeds"`
	// The list of VLAN IDs for certain port configuration. This setting accepts VLAN ID range as well as comma separated values. E.g. vlan-ids=100-115,120,122,128-130.
	VlanIds pulumi.StringOutput `pulumi:"vlanIds"`
}

// NewResourceInterfaceBridgeVlan registers a new resource with the given unique name, arguments, and options.
func NewResourceInterfaceBridgeVlan(ctx *pulumi.Context,
	name string, args *ResourceInterfaceBridgeVlanArgs, opts ...pulumi.ResourceOption) (*ResourceInterfaceBridgeVlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bridge == nil {
		return nil, errors.New("invalid value for required argument 'Bridge'")
	}
	if args.VlanIds == nil {
		return nil, errors.New("invalid value for required argument 'VlanIds'")
	}
	var resource ResourceInterfaceBridgeVlan
	err := ctx.RegisterResource("routeros:index/resourceInterfaceBridgeVlan:ResourceInterfaceBridgeVlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceInterfaceBridgeVlan gets an existing ResourceInterfaceBridgeVlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceInterfaceBridgeVlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceInterfaceBridgeVlanState, opts ...pulumi.ResourceOption) (*ResourceInterfaceBridgeVlan, error) {
	var resource ResourceInterfaceBridgeVlan
	err := ctx.ReadResource("routeros:index/resourceInterfaceBridgeVlan:ResourceInterfaceBridgeVlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceInterfaceBridgeVlan resources.
type resourceInterfaceBridgeVlanState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// The bridge interface which the respective VLAN entry is intended for.
	Bridge           *string  `pulumi:"bridge"`
	Comment          *string  `pulumi:"comment"`
	CurrentTaggeds   []string `pulumi:"currentTaggeds"`
	CurrentUntaggeds []string `pulumi:"currentUntaggeds"`
	Disabled         *bool    `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic *bool `pulumi:"dynamic"`
	// Interface list with a VLAN tag adding action in egress. This setting accepts comma separated values. E.g. tagged=ether1,ether2.
	Taggeds []string `pulumi:"taggeds"`
	// Interface list with a VLAN tag removing action in egress. This setting accepts comma separated values. E.g. untagged=ether3,ether4
	Untaggeds []string `pulumi:"untaggeds"`
	// The list of VLAN IDs for certain port configuration. This setting accepts VLAN ID range as well as comma separated values. E.g. vlan-ids=100-115,120,122,128-130.
	VlanIds *string `pulumi:"vlanIds"`
}

type ResourceInterfaceBridgeVlanState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// The bridge interface which the respective VLAN entry is intended for.
	Bridge           pulumi.StringPtrInput
	Comment          pulumi.StringPtrInput
	CurrentTaggeds   pulumi.StringArrayInput
	CurrentUntaggeds pulumi.StringArrayInput
	Disabled         pulumi.BoolPtrInput
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolPtrInput
	// Interface list with a VLAN tag adding action in egress. This setting accepts comma separated values. E.g. tagged=ether1,ether2.
	Taggeds pulumi.StringArrayInput
	// Interface list with a VLAN tag removing action in egress. This setting accepts comma separated values. E.g. untagged=ether3,ether4
	Untaggeds pulumi.StringArrayInput
	// The list of VLAN IDs for certain port configuration. This setting accepts VLAN ID range as well as comma separated values. E.g. vlan-ids=100-115,120,122,128-130.
	VlanIds pulumi.StringPtrInput
}

func (ResourceInterfaceBridgeVlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceInterfaceBridgeVlanState)(nil)).Elem()
}

type resourceInterfaceBridgeVlanArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// The bridge interface which the respective VLAN entry is intended for.
	Bridge   string  `pulumi:"bridge"`
	Comment  *string `pulumi:"comment"`
	Disabled *bool   `pulumi:"disabled"`
	// Interface list with a VLAN tag adding action in egress. This setting accepts comma separated values. E.g. tagged=ether1,ether2.
	Taggeds []string `pulumi:"taggeds"`
	// Interface list with a VLAN tag removing action in egress. This setting accepts comma separated values. E.g. untagged=ether3,ether4
	Untaggeds []string `pulumi:"untaggeds"`
	// The list of VLAN IDs for certain port configuration. This setting accepts VLAN ID range as well as comma separated values. E.g. vlan-ids=100-115,120,122,128-130.
	VlanIds string `pulumi:"vlanIds"`
}

// The set of arguments for constructing a ResourceInterfaceBridgeVlan resource.
type ResourceInterfaceBridgeVlanArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// The bridge interface which the respective VLAN entry is intended for.
	Bridge   pulumi.StringInput
	Comment  pulumi.StringPtrInput
	Disabled pulumi.BoolPtrInput
	// Interface list with a VLAN tag adding action in egress. This setting accepts comma separated values. E.g. tagged=ether1,ether2.
	Taggeds pulumi.StringArrayInput
	// Interface list with a VLAN tag removing action in egress. This setting accepts comma separated values. E.g. untagged=ether3,ether4
	Untaggeds pulumi.StringArrayInput
	// The list of VLAN IDs for certain port configuration. This setting accepts VLAN ID range as well as comma separated values. E.g. vlan-ids=100-115,120,122,128-130.
	VlanIds pulumi.StringInput
}

func (ResourceInterfaceBridgeVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceInterfaceBridgeVlanArgs)(nil)).Elem()
}

type ResourceInterfaceBridgeVlanInput interface {
	pulumi.Input

	ToResourceInterfaceBridgeVlanOutput() ResourceInterfaceBridgeVlanOutput
	ToResourceInterfaceBridgeVlanOutputWithContext(ctx context.Context) ResourceInterfaceBridgeVlanOutput
}

func (*ResourceInterfaceBridgeVlan) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceInterfaceBridgeVlan)(nil)).Elem()
}

func (i *ResourceInterfaceBridgeVlan) ToResourceInterfaceBridgeVlanOutput() ResourceInterfaceBridgeVlanOutput {
	return i.ToResourceInterfaceBridgeVlanOutputWithContext(context.Background())
}

func (i *ResourceInterfaceBridgeVlan) ToResourceInterfaceBridgeVlanOutputWithContext(ctx context.Context) ResourceInterfaceBridgeVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceInterfaceBridgeVlanOutput)
}

// ResourceInterfaceBridgeVlanArrayInput is an input type that accepts ResourceInterfaceBridgeVlanArray and ResourceInterfaceBridgeVlanArrayOutput values.
// You can construct a concrete instance of `ResourceInterfaceBridgeVlanArrayInput` via:
//
//	ResourceInterfaceBridgeVlanArray{ ResourceInterfaceBridgeVlanArgs{...} }
type ResourceInterfaceBridgeVlanArrayInput interface {
	pulumi.Input

	ToResourceInterfaceBridgeVlanArrayOutput() ResourceInterfaceBridgeVlanArrayOutput
	ToResourceInterfaceBridgeVlanArrayOutputWithContext(context.Context) ResourceInterfaceBridgeVlanArrayOutput
}

type ResourceInterfaceBridgeVlanArray []ResourceInterfaceBridgeVlanInput

func (ResourceInterfaceBridgeVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceInterfaceBridgeVlan)(nil)).Elem()
}

func (i ResourceInterfaceBridgeVlanArray) ToResourceInterfaceBridgeVlanArrayOutput() ResourceInterfaceBridgeVlanArrayOutput {
	return i.ToResourceInterfaceBridgeVlanArrayOutputWithContext(context.Background())
}

func (i ResourceInterfaceBridgeVlanArray) ToResourceInterfaceBridgeVlanArrayOutputWithContext(ctx context.Context) ResourceInterfaceBridgeVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceInterfaceBridgeVlanArrayOutput)
}

// ResourceInterfaceBridgeVlanMapInput is an input type that accepts ResourceInterfaceBridgeVlanMap and ResourceInterfaceBridgeVlanMapOutput values.
// You can construct a concrete instance of `ResourceInterfaceBridgeVlanMapInput` via:
//
//	ResourceInterfaceBridgeVlanMap{ "key": ResourceInterfaceBridgeVlanArgs{...} }
type ResourceInterfaceBridgeVlanMapInput interface {
	pulumi.Input

	ToResourceInterfaceBridgeVlanMapOutput() ResourceInterfaceBridgeVlanMapOutput
	ToResourceInterfaceBridgeVlanMapOutputWithContext(context.Context) ResourceInterfaceBridgeVlanMapOutput
}

type ResourceInterfaceBridgeVlanMap map[string]ResourceInterfaceBridgeVlanInput

func (ResourceInterfaceBridgeVlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceInterfaceBridgeVlan)(nil)).Elem()
}

func (i ResourceInterfaceBridgeVlanMap) ToResourceInterfaceBridgeVlanMapOutput() ResourceInterfaceBridgeVlanMapOutput {
	return i.ToResourceInterfaceBridgeVlanMapOutputWithContext(context.Background())
}

func (i ResourceInterfaceBridgeVlanMap) ToResourceInterfaceBridgeVlanMapOutputWithContext(ctx context.Context) ResourceInterfaceBridgeVlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceInterfaceBridgeVlanMapOutput)
}

type ResourceInterfaceBridgeVlanOutput struct{ *pulumi.OutputState }

func (ResourceInterfaceBridgeVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceInterfaceBridgeVlan)(nil)).Elem()
}

func (o ResourceInterfaceBridgeVlanOutput) ToResourceInterfaceBridgeVlanOutput() ResourceInterfaceBridgeVlanOutput {
	return o
}

func (o ResourceInterfaceBridgeVlanOutput) ToResourceInterfaceBridgeVlanOutputWithContext(ctx context.Context) ResourceInterfaceBridgeVlanOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceInterfaceBridgeVlanOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceInterfaceBridgeVlanOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// The bridge interface which the respective VLAN entry is intended for.
func (o ResourceInterfaceBridgeVlanOutput) Bridge() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.StringOutput { return v.Bridge }).(pulumi.StringOutput)
}

func (o ResourceInterfaceBridgeVlanOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ResourceInterfaceBridgeVlanOutput) CurrentTaggeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.StringArrayOutput { return v.CurrentTaggeds }).(pulumi.StringArrayOutput)
}

func (o ResourceInterfaceBridgeVlanOutput) CurrentUntaggeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.StringArrayOutput { return v.CurrentUntaggeds }).(pulumi.StringArrayOutput)
}

func (o ResourceInterfaceBridgeVlanOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
func (o ResourceInterfaceBridgeVlanOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.BoolOutput { return v.Dynamic }).(pulumi.BoolOutput)
}

// Interface list with a VLAN tag adding action in egress. This setting accepts comma separated values. E.g. tagged=ether1,ether2.
func (o ResourceInterfaceBridgeVlanOutput) Taggeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.StringArrayOutput { return v.Taggeds }).(pulumi.StringArrayOutput)
}

// Interface list with a VLAN tag removing action in egress. This setting accepts comma separated values. E.g. untagged=ether3,ether4
func (o ResourceInterfaceBridgeVlanOutput) Untaggeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.StringArrayOutput { return v.Untaggeds }).(pulumi.StringArrayOutput)
}

// The list of VLAN IDs for certain port configuration. This setting accepts VLAN ID range as well as comma separated values. E.g. vlan-ids=100-115,120,122,128-130.
func (o ResourceInterfaceBridgeVlanOutput) VlanIds() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceBridgeVlan) pulumi.StringOutput { return v.VlanIds }).(pulumi.StringOutput)
}

type ResourceInterfaceBridgeVlanArrayOutput struct{ *pulumi.OutputState }

func (ResourceInterfaceBridgeVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceInterfaceBridgeVlan)(nil)).Elem()
}

func (o ResourceInterfaceBridgeVlanArrayOutput) ToResourceInterfaceBridgeVlanArrayOutput() ResourceInterfaceBridgeVlanArrayOutput {
	return o
}

func (o ResourceInterfaceBridgeVlanArrayOutput) ToResourceInterfaceBridgeVlanArrayOutputWithContext(ctx context.Context) ResourceInterfaceBridgeVlanArrayOutput {
	return o
}

func (o ResourceInterfaceBridgeVlanArrayOutput) Index(i pulumi.IntInput) ResourceInterfaceBridgeVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceInterfaceBridgeVlan {
		return vs[0].([]*ResourceInterfaceBridgeVlan)[vs[1].(int)]
	}).(ResourceInterfaceBridgeVlanOutput)
}

type ResourceInterfaceBridgeVlanMapOutput struct{ *pulumi.OutputState }

func (ResourceInterfaceBridgeVlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceInterfaceBridgeVlan)(nil)).Elem()
}

func (o ResourceInterfaceBridgeVlanMapOutput) ToResourceInterfaceBridgeVlanMapOutput() ResourceInterfaceBridgeVlanMapOutput {
	return o
}

func (o ResourceInterfaceBridgeVlanMapOutput) ToResourceInterfaceBridgeVlanMapOutputWithContext(ctx context.Context) ResourceInterfaceBridgeVlanMapOutput {
	return o
}

func (o ResourceInterfaceBridgeVlanMapOutput) MapIndex(k pulumi.StringInput) ResourceInterfaceBridgeVlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceInterfaceBridgeVlan {
		return vs[0].(map[string]*ResourceInterfaceBridgeVlan)[vs[1].(string)]
	}).(ResourceInterfaceBridgeVlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInterfaceBridgeVlanInput)(nil)).Elem(), &ResourceInterfaceBridgeVlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInterfaceBridgeVlanArrayInput)(nil)).Elem(), ResourceInterfaceBridgeVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInterfaceBridgeVlanMapInput)(nil)).Elem(), ResourceInterfaceBridgeVlanMap{})
	pulumi.RegisterOutputType(ResourceInterfaceBridgeVlanOutput{})
	pulumi.RegisterOutputType(ResourceInterfaceBridgeVlanArrayOutput{})
	pulumi.RegisterOutputType(ResourceInterfaceBridgeVlanMapOutput{})
}
