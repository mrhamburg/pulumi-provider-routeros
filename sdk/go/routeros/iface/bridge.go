// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iface

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Iface.Bridge (Resource)
//
// ***
//
// #### This is an alias for backwards compatibility between plugin versions.
// Please see documentation for Iface.InterfaceBridge
type Bridge struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_  pulumi.StringPtrOutput `pulumi:"___path_"`
	ActualMtu pulumi.IntOutput       `pulumi:"actualMtu"`
	// Whether to add DHCP Option-82 information (Agent Remote ID and Agent Circuit ID) to DHCP packets. Can be used together
	// with Option-82 capable DHCP server to assign IP addresses and implement policies. This property only has effect when
	// dhcp-snooping is set to yes.
	AddDhcpOption82 pulumi.BoolPtrOutput `pulumi:"addDhcpOption82"`
	// Static MAC address of the bridge. This property only has effect when auto-mac is set to no.
	AdminMac pulumi.StringOutput `pulumi:"adminMac"`
	// How long a host's information will be kept in the bridge database.
	AgeingTime pulumi.StringPtrOutput `pulumi:"ageingTime"`
	// ARP resolution protocol mode.
	Arp pulumi.StringPtrOutput `pulumi:"arp"`
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to
	// the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds,
	// minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout pulumi.StringPtrOutput `pulumi:"arpTimeout"`
	// Automatically select one MAC address of bridge ports as a bridge MAC address, bridge MAC will be chosen from the first
	// added bridge port. After a device reboot, the bridge MAC can change depending on the port-number.
	AutoMac      pulumi.BoolPtrOutput   `pulumi:"autoMac"`
	Comment      pulumi.StringPtrOutput `pulumi:"comment"`
	DhcpSnooping pulumi.BoolPtrOutput   `pulumi:"dhcpSnooping"`
	Disabled     pulumi.BoolPtrOutput   `pulumi:"disabled"`
	// This property only has effect when vlan-filtering is set to yes.
	EtherType   pulumi.StringPtrOutput `pulumi:"etherType"`
	FastForward pulumi.BoolOutput      `pulumi:"fastForward"`
	// Time which is spent during the initialization phase of the bridge interface (i.e., after router startup or enabling the
	// interface) in listening/learning state before the bridge will start functioning normally.
	ForwardDelay pulumi.StringPtrOutput `pulumi:"forwardDelay"`
	// Specifies allowed frame types on a bridge port. This property only has effect when vlan-filtering is set to yes.
	FrameTypes pulumi.StringPtrOutput `pulumi:"frameTypes"`
	// Enables multicast group and port learning to prevent multicast traffic from flooding all interfaces in a bridge.
	IgmpSnooping pulumi.BoolPtrOutput `pulumi:"igmpSnooping"`
	// Selects the IGMP version in which IGMP general membership queries will be generated. This property only has effect when
	// igmp-snooping is set to yes.
	IgmpVersion pulumi.IntOutput `pulumi:"igmpVersion"`
	// Enables or disables VLAN ingress filtering, which checks if the ingress port is a member of the received VLAN ID in the
	// bridge VLAN table. Should be used with frame-types to specify if the ingress traffic should be tagged or untagged. This
	// property only has effect when vlan-filtering is set to yes.
	IngressFiltering pulumi.BoolPtrOutput `pulumi:"ingressFiltering"`
	// Layer2 Maximum transmission unit.
	L2mtu pulumi.IntOutput `pulumi:"l2mtu"`
	// If a port has fast-leave set to no and a bridge port receives a IGMP Leave message, then a IGMP Snooping enabled bridge
	// will send a IGMP query to make sure that no devices has subscribed to a certain multicast stream on a bridge port.
	LastMemberInterval pulumi.StringOutput `pulumi:"lastMemberInterval"`
	// How many times should last-member-interval pass until a IGMP Snooping bridge will stop forwarding a certain multicast
	// stream. This property only has effect when igmp-snooping is set to yes.
	LastMemberQueryCount pulumi.IntOutput    `pulumi:"lastMemberQueryCount"`
	MacAddress           pulumi.StringOutput `pulumi:"macAddress"`
	// Bridge count which BPDU can pass in a MSTP enabled network in the same region before BPDU is being ignored. This
	// property only has effect when protocol-mode is set to mstp.
	MaxHops pulumi.IntOutput `pulumi:"maxHops"`
	// Changes the Max Age value in BPDU packets, which is transmitted by the root bridge. This property only has effect when
	// protocol-mode is set to stp or rstp. Value: 6s..40s
	MaxMessageAge pulumi.StringPtrOutput `pulumi:"maxMessageAge"`
	// Amount of time after an entry in the Multicast Database (MDB) is removed if a IGMP membership report is not received on
	// a certain port. This property only has effect when igmp-snooping is set to yes.
	MembershipInterval pulumi.StringOutput `pulumi:"membershipInterval"`
	// Selects the MLD version. Version 2 adds support for source-specific multicast. This property only has effect when
	// RouterOS IPv6 package is enabled and igmp-snooping is set to yes.
	MldVersion pulumi.IntOutput `pulumi:"mldVersion"`
	// The default bridge MTU value without any bridge ports added is 1500. The MTU value can be set manually, but it cannot
	// exceed the bridge L2MTU or the lowest bridge port L2MTU. If a new bridge port is added with L2MTU which is smaller than
	// the actual-mtu of the bridge (set by the mtu property), then manually set value will be ignored and the bridge will act
	// as if mtu=auto is set.
	Mtu pulumi.StringPtrOutput `pulumi:"mtu"`
	// Multicast querier generates IGMP general membership queries to which all IGMP capable devices respond with an IGMP
	// membership report, usually a PIM (multicast) router or IGMP proxy generates these queries. This property only has an
	// effect when igmp-snooping is set to yes. Additionally, the igmp-snooping should be disabled/enabled after changing
	// multicast-querier property.
	MulticastQuerier pulumi.BoolPtrOutput `pulumi:"multicastQuerier"`
	// A multicast router port is a port where a multicast router or querier is connected. On this port, unregistered multicast
	// streams and IGMP/MLD membership reports will be sent. This setting changes the state of the multicast router for a
	// bridge interface itself. This property can be used to send IGMP/MLD membership reports and multicast traffic to the
	// bridge interface for further multicast routing or proxying. This property only has an effect when igmp-snooping is set
	// to yes.
	MulticastRouter pulumi.StringOutput `pulumi:"multicastRouter"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringOutput `pulumi:"name"`
	// Bridge priority, used by STP to determine root bridge, used by MSTP to determine CIST and IST regional root bridge. This
	// property has no effect when protocol-mode is set to none.
	Priority pulumi.StringPtrOutput `pulumi:"priority"`
	// Select Spanning tree protocol (STP) or Rapid spanning tree protocol (RSTP) to ensure a loop-free topology for any
	// bridged LAN.
	ProtocolMode pulumi.StringPtrOutput `pulumi:"protocolMode"`
	// Port VLAN ID (pvid) specifies which VLAN the untagged ingress traffic is assigned to. It applies e.g. to frames sent
	// from bridge IP and destined to a bridge port. This property only has effect when vlan-filtering is set to yes.
	Pvid pulumi.IntPtrOutput `pulumi:"pvid"`
	// Used to change the interval how often a bridge checks if it is the active multicast querier. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QuerierInterval pulumi.StringOutput `pulumi:"querierInterval"`
	// Used to change the interval how often IGMP general membership queries are sent out. This property only has effect when
	// igmp-snooping and multicast-querier is set to yes.
	QueryInterval pulumi.StringOutput `pulumi:"queryInterval"`
	// Interval in which a IGMP capable device must reply to a IGMP query with a IGMP membership report. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QueryResponseInterval pulumi.StringOutput `pulumi:"queryResponseInterval"`
	// MSTP region name. This property only has effect when protocol-mode is set to mstp.
	RegionName pulumi.StringPtrOutput `pulumi:"regionName"`
	// MSTP configuration revision number. This property only has effect when protocol-mode is set to mstp.
	RegionRevision pulumi.IntPtrOutput `pulumi:"regionRevision"`
	Running        pulumi.BoolOutput   `pulumi:"running"`
	// Specifies how many times must startup-query-interval pass until the bridge starts sending out IGMP general membership
	// queries periodically. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryCount pulumi.IntOutput `pulumi:"startupQueryCount"`
	// Used to change the amount of time after a bridge starts sending out IGMP general membership queries after the bridge is
	// enabled. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryInterval pulumi.StringOutput `pulumi:"startupQueryInterval"`
	// The Transmit Hold Count used by the Port Transmit state machine to limit transmission rate.
	TransmitHoldCount pulumi.IntPtrOutput `pulumi:"transmitHoldCount"`
	// Globally enables or disables VLAN functionality for bridge.
	VlanFiltering pulumi.BoolPtrOutput `pulumi:"vlanFiltering"`
}

// NewBridge registers a new resource with the given unique name, arguments, and options.
func NewBridge(ctx *pulumi.Context,
	name string, args *BridgeArgs, opts ...pulumi.ResourceOption) (*Bridge, error) {
	if args == nil {
		args = &BridgeArgs{}
	}

	var resource Bridge
	err := ctx.RegisterResource("routeros:Iface/bridge:Bridge", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBridge gets an existing Bridge resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBridge(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BridgeState, opts ...pulumi.ResourceOption) (*Bridge, error) {
	var resource Bridge
	err := ctx.ReadResource("routeros:Iface/bridge:Bridge", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bridge resources.
type bridgeState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_  *string `pulumi:"___path_"`
	ActualMtu *int    `pulumi:"actualMtu"`
	// Whether to add DHCP Option-82 information (Agent Remote ID and Agent Circuit ID) to DHCP packets. Can be used together
	// with Option-82 capable DHCP server to assign IP addresses and implement policies. This property only has effect when
	// dhcp-snooping is set to yes.
	AddDhcpOption82 *bool `pulumi:"addDhcpOption82"`
	// Static MAC address of the bridge. This property only has effect when auto-mac is set to no.
	AdminMac *string `pulumi:"adminMac"`
	// How long a host's information will be kept in the bridge database.
	AgeingTime *string `pulumi:"ageingTime"`
	// ARP resolution protocol mode.
	Arp *string `pulumi:"arp"`
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to
	// the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds,
	// minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout *string `pulumi:"arpTimeout"`
	// Automatically select one MAC address of bridge ports as a bridge MAC address, bridge MAC will be chosen from the first
	// added bridge port. After a device reboot, the bridge MAC can change depending on the port-number.
	AutoMac      *bool   `pulumi:"autoMac"`
	Comment      *string `pulumi:"comment"`
	DhcpSnooping *bool   `pulumi:"dhcpSnooping"`
	Disabled     *bool   `pulumi:"disabled"`
	// This property only has effect when vlan-filtering is set to yes.
	EtherType   *string `pulumi:"etherType"`
	FastForward *bool   `pulumi:"fastForward"`
	// Time which is spent during the initialization phase of the bridge interface (i.e., after router startup or enabling the
	// interface) in listening/learning state before the bridge will start functioning normally.
	ForwardDelay *string `pulumi:"forwardDelay"`
	// Specifies allowed frame types on a bridge port. This property only has effect when vlan-filtering is set to yes.
	FrameTypes *string `pulumi:"frameTypes"`
	// Enables multicast group and port learning to prevent multicast traffic from flooding all interfaces in a bridge.
	IgmpSnooping *bool `pulumi:"igmpSnooping"`
	// Selects the IGMP version in which IGMP general membership queries will be generated. This property only has effect when
	// igmp-snooping is set to yes.
	IgmpVersion *int `pulumi:"igmpVersion"`
	// Enables or disables VLAN ingress filtering, which checks if the ingress port is a member of the received VLAN ID in the
	// bridge VLAN table. Should be used with frame-types to specify if the ingress traffic should be tagged or untagged. This
	// property only has effect when vlan-filtering is set to yes.
	IngressFiltering *bool `pulumi:"ingressFiltering"`
	// Layer2 Maximum transmission unit.
	L2mtu *int `pulumi:"l2mtu"`
	// If a port has fast-leave set to no and a bridge port receives a IGMP Leave message, then a IGMP Snooping enabled bridge
	// will send a IGMP query to make sure that no devices has subscribed to a certain multicast stream on a bridge port.
	LastMemberInterval *string `pulumi:"lastMemberInterval"`
	// How many times should last-member-interval pass until a IGMP Snooping bridge will stop forwarding a certain multicast
	// stream. This property only has effect when igmp-snooping is set to yes.
	LastMemberQueryCount *int    `pulumi:"lastMemberQueryCount"`
	MacAddress           *string `pulumi:"macAddress"`
	// Bridge count which BPDU can pass in a MSTP enabled network in the same region before BPDU is being ignored. This
	// property only has effect when protocol-mode is set to mstp.
	MaxHops *int `pulumi:"maxHops"`
	// Changes the Max Age value in BPDU packets, which is transmitted by the root bridge. This property only has effect when
	// protocol-mode is set to stp or rstp. Value: 6s..40s
	MaxMessageAge *string `pulumi:"maxMessageAge"`
	// Amount of time after an entry in the Multicast Database (MDB) is removed if a IGMP membership report is not received on
	// a certain port. This property only has effect when igmp-snooping is set to yes.
	MembershipInterval *string `pulumi:"membershipInterval"`
	// Selects the MLD version. Version 2 adds support for source-specific multicast. This property only has effect when
	// RouterOS IPv6 package is enabled and igmp-snooping is set to yes.
	MldVersion *int `pulumi:"mldVersion"`
	// The default bridge MTU value without any bridge ports added is 1500. The MTU value can be set manually, but it cannot
	// exceed the bridge L2MTU or the lowest bridge port L2MTU. If a new bridge port is added with L2MTU which is smaller than
	// the actual-mtu of the bridge (set by the mtu property), then manually set value will be ignored and the bridge will act
	// as if mtu=auto is set.
	Mtu *string `pulumi:"mtu"`
	// Multicast querier generates IGMP general membership queries to which all IGMP capable devices respond with an IGMP
	// membership report, usually a PIM (multicast) router or IGMP proxy generates these queries. This property only has an
	// effect when igmp-snooping is set to yes. Additionally, the igmp-snooping should be disabled/enabled after changing
	// multicast-querier property.
	MulticastQuerier *bool `pulumi:"multicastQuerier"`
	// A multicast router port is a port where a multicast router or querier is connected. On this port, unregistered multicast
	// streams and IGMP/MLD membership reports will be sent. This setting changes the state of the multicast router for a
	// bridge interface itself. This property can be used to send IGMP/MLD membership reports and multicast traffic to the
	// bridge interface for further multicast routing or proxying. This property only has an effect when igmp-snooping is set
	// to yes.
	MulticastRouter *string `pulumi:"multicastRouter"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name *string `pulumi:"name"`
	// Bridge priority, used by STP to determine root bridge, used by MSTP to determine CIST and IST regional root bridge. This
	// property has no effect when protocol-mode is set to none.
	Priority *string `pulumi:"priority"`
	// Select Spanning tree protocol (STP) or Rapid spanning tree protocol (RSTP) to ensure a loop-free topology for any
	// bridged LAN.
	ProtocolMode *string `pulumi:"protocolMode"`
	// Port VLAN ID (pvid) specifies which VLAN the untagged ingress traffic is assigned to. It applies e.g. to frames sent
	// from bridge IP and destined to a bridge port. This property only has effect when vlan-filtering is set to yes.
	Pvid *int `pulumi:"pvid"`
	// Used to change the interval how often a bridge checks if it is the active multicast querier. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QuerierInterval *string `pulumi:"querierInterval"`
	// Used to change the interval how often IGMP general membership queries are sent out. This property only has effect when
	// igmp-snooping and multicast-querier is set to yes.
	QueryInterval *string `pulumi:"queryInterval"`
	// Interval in which a IGMP capable device must reply to a IGMP query with a IGMP membership report. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QueryResponseInterval *string `pulumi:"queryResponseInterval"`
	// MSTP region name. This property only has effect when protocol-mode is set to mstp.
	RegionName *string `pulumi:"regionName"`
	// MSTP configuration revision number. This property only has effect when protocol-mode is set to mstp.
	RegionRevision *int  `pulumi:"regionRevision"`
	Running        *bool `pulumi:"running"`
	// Specifies how many times must startup-query-interval pass until the bridge starts sending out IGMP general membership
	// queries periodically. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryCount *int `pulumi:"startupQueryCount"`
	// Used to change the amount of time after a bridge starts sending out IGMP general membership queries after the bridge is
	// enabled. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryInterval *string `pulumi:"startupQueryInterval"`
	// The Transmit Hold Count used by the Port Transmit state machine to limit transmission rate.
	TransmitHoldCount *int `pulumi:"transmitHoldCount"`
	// Globally enables or disables VLAN functionality for bridge.
	VlanFiltering *bool `pulumi:"vlanFiltering"`
}

type BridgeState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_  pulumi.StringPtrInput
	ActualMtu pulumi.IntPtrInput
	// Whether to add DHCP Option-82 information (Agent Remote ID and Agent Circuit ID) to DHCP packets. Can be used together
	// with Option-82 capable DHCP server to assign IP addresses and implement policies. This property only has effect when
	// dhcp-snooping is set to yes.
	AddDhcpOption82 pulumi.BoolPtrInput
	// Static MAC address of the bridge. This property only has effect when auto-mac is set to no.
	AdminMac pulumi.StringPtrInput
	// How long a host's information will be kept in the bridge database.
	AgeingTime pulumi.StringPtrInput
	// ARP resolution protocol mode.
	Arp pulumi.StringPtrInput
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to
	// the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds,
	// minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout pulumi.StringPtrInput
	// Automatically select one MAC address of bridge ports as a bridge MAC address, bridge MAC will be chosen from the first
	// added bridge port. After a device reboot, the bridge MAC can change depending on the port-number.
	AutoMac      pulumi.BoolPtrInput
	Comment      pulumi.StringPtrInput
	DhcpSnooping pulumi.BoolPtrInput
	Disabled     pulumi.BoolPtrInput
	// This property only has effect when vlan-filtering is set to yes.
	EtherType   pulumi.StringPtrInput
	FastForward pulumi.BoolPtrInput
	// Time which is spent during the initialization phase of the bridge interface (i.e., after router startup or enabling the
	// interface) in listening/learning state before the bridge will start functioning normally.
	ForwardDelay pulumi.StringPtrInput
	// Specifies allowed frame types on a bridge port. This property only has effect when vlan-filtering is set to yes.
	FrameTypes pulumi.StringPtrInput
	// Enables multicast group and port learning to prevent multicast traffic from flooding all interfaces in a bridge.
	IgmpSnooping pulumi.BoolPtrInput
	// Selects the IGMP version in which IGMP general membership queries will be generated. This property only has effect when
	// igmp-snooping is set to yes.
	IgmpVersion pulumi.IntPtrInput
	// Enables or disables VLAN ingress filtering, which checks if the ingress port is a member of the received VLAN ID in the
	// bridge VLAN table. Should be used with frame-types to specify if the ingress traffic should be tagged or untagged. This
	// property only has effect when vlan-filtering is set to yes.
	IngressFiltering pulumi.BoolPtrInput
	// Layer2 Maximum transmission unit.
	L2mtu pulumi.IntPtrInput
	// If a port has fast-leave set to no and a bridge port receives a IGMP Leave message, then a IGMP Snooping enabled bridge
	// will send a IGMP query to make sure that no devices has subscribed to a certain multicast stream on a bridge port.
	LastMemberInterval pulumi.StringPtrInput
	// How many times should last-member-interval pass until a IGMP Snooping bridge will stop forwarding a certain multicast
	// stream. This property only has effect when igmp-snooping is set to yes.
	LastMemberQueryCount pulumi.IntPtrInput
	MacAddress           pulumi.StringPtrInput
	// Bridge count which BPDU can pass in a MSTP enabled network in the same region before BPDU is being ignored. This
	// property only has effect when protocol-mode is set to mstp.
	MaxHops pulumi.IntPtrInput
	// Changes the Max Age value in BPDU packets, which is transmitted by the root bridge. This property only has effect when
	// protocol-mode is set to stp or rstp. Value: 6s..40s
	MaxMessageAge pulumi.StringPtrInput
	// Amount of time after an entry in the Multicast Database (MDB) is removed if a IGMP membership report is not received on
	// a certain port. This property only has effect when igmp-snooping is set to yes.
	MembershipInterval pulumi.StringPtrInput
	// Selects the MLD version. Version 2 adds support for source-specific multicast. This property only has effect when
	// RouterOS IPv6 package is enabled and igmp-snooping is set to yes.
	MldVersion pulumi.IntPtrInput
	// The default bridge MTU value without any bridge ports added is 1500. The MTU value can be set manually, but it cannot
	// exceed the bridge L2MTU or the lowest bridge port L2MTU. If a new bridge port is added with L2MTU which is smaller than
	// the actual-mtu of the bridge (set by the mtu property), then manually set value will be ignored and the bridge will act
	// as if mtu=auto is set.
	Mtu pulumi.StringPtrInput
	// Multicast querier generates IGMP general membership queries to which all IGMP capable devices respond with an IGMP
	// membership report, usually a PIM (multicast) router or IGMP proxy generates these queries. This property only has an
	// effect when igmp-snooping is set to yes. Additionally, the igmp-snooping should be disabled/enabled after changing
	// multicast-querier property.
	MulticastQuerier pulumi.BoolPtrInput
	// A multicast router port is a port where a multicast router or querier is connected. On this port, unregistered multicast
	// streams and IGMP/MLD membership reports will be sent. This setting changes the state of the multicast router for a
	// bridge interface itself. This property can be used to send IGMP/MLD membership reports and multicast traffic to the
	// bridge interface for further multicast routing or proxying. This property only has an effect when igmp-snooping is set
	// to yes.
	MulticastRouter pulumi.StringPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringPtrInput
	// Bridge priority, used by STP to determine root bridge, used by MSTP to determine CIST and IST regional root bridge. This
	// property has no effect when protocol-mode is set to none.
	Priority pulumi.StringPtrInput
	// Select Spanning tree protocol (STP) or Rapid spanning tree protocol (RSTP) to ensure a loop-free topology for any
	// bridged LAN.
	ProtocolMode pulumi.StringPtrInput
	// Port VLAN ID (pvid) specifies which VLAN the untagged ingress traffic is assigned to. It applies e.g. to frames sent
	// from bridge IP and destined to a bridge port. This property only has effect when vlan-filtering is set to yes.
	Pvid pulumi.IntPtrInput
	// Used to change the interval how often a bridge checks if it is the active multicast querier. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QuerierInterval pulumi.StringPtrInput
	// Used to change the interval how often IGMP general membership queries are sent out. This property only has effect when
	// igmp-snooping and multicast-querier is set to yes.
	QueryInterval pulumi.StringPtrInput
	// Interval in which a IGMP capable device must reply to a IGMP query with a IGMP membership report. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QueryResponseInterval pulumi.StringPtrInput
	// MSTP region name. This property only has effect when protocol-mode is set to mstp.
	RegionName pulumi.StringPtrInput
	// MSTP configuration revision number. This property only has effect when protocol-mode is set to mstp.
	RegionRevision pulumi.IntPtrInput
	Running        pulumi.BoolPtrInput
	// Specifies how many times must startup-query-interval pass until the bridge starts sending out IGMP general membership
	// queries periodically. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryCount pulumi.IntPtrInput
	// Used to change the amount of time after a bridge starts sending out IGMP general membership queries after the bridge is
	// enabled. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryInterval pulumi.StringPtrInput
	// The Transmit Hold Count used by the Port Transmit state machine to limit transmission rate.
	TransmitHoldCount pulumi.IntPtrInput
	// Globally enables or disables VLAN functionality for bridge.
	VlanFiltering pulumi.BoolPtrInput
}

func (BridgeState) ElementType() reflect.Type {
	return reflect.TypeOf((*bridgeState)(nil)).Elem()
}

type bridgeArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Whether to add DHCP Option-82 information (Agent Remote ID and Agent Circuit ID) to DHCP packets. Can be used together
	// with Option-82 capable DHCP server to assign IP addresses and implement policies. This property only has effect when
	// dhcp-snooping is set to yes.
	AddDhcpOption82 *bool `pulumi:"addDhcpOption82"`
	// Static MAC address of the bridge. This property only has effect when auto-mac is set to no.
	AdminMac *string `pulumi:"adminMac"`
	// How long a host's information will be kept in the bridge database.
	AgeingTime *string `pulumi:"ageingTime"`
	// ARP resolution protocol mode.
	Arp *string `pulumi:"arp"`
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to
	// the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds,
	// minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout *string `pulumi:"arpTimeout"`
	// Automatically select one MAC address of bridge ports as a bridge MAC address, bridge MAC will be chosen from the first
	// added bridge port. After a device reboot, the bridge MAC can change depending on the port-number.
	AutoMac      *bool   `pulumi:"autoMac"`
	Comment      *string `pulumi:"comment"`
	DhcpSnooping *bool   `pulumi:"dhcpSnooping"`
	Disabled     *bool   `pulumi:"disabled"`
	// This property only has effect when vlan-filtering is set to yes.
	EtherType   *string `pulumi:"etherType"`
	FastForward *bool   `pulumi:"fastForward"`
	// Time which is spent during the initialization phase of the bridge interface (i.e., after router startup or enabling the
	// interface) in listening/learning state before the bridge will start functioning normally.
	ForwardDelay *string `pulumi:"forwardDelay"`
	// Specifies allowed frame types on a bridge port. This property only has effect when vlan-filtering is set to yes.
	FrameTypes *string `pulumi:"frameTypes"`
	// Enables multicast group and port learning to prevent multicast traffic from flooding all interfaces in a bridge.
	IgmpSnooping *bool `pulumi:"igmpSnooping"`
	// Selects the IGMP version in which IGMP general membership queries will be generated. This property only has effect when
	// igmp-snooping is set to yes.
	IgmpVersion *int `pulumi:"igmpVersion"`
	// Enables or disables VLAN ingress filtering, which checks if the ingress port is a member of the received VLAN ID in the
	// bridge VLAN table. Should be used with frame-types to specify if the ingress traffic should be tagged or untagged. This
	// property only has effect when vlan-filtering is set to yes.
	IngressFiltering *bool `pulumi:"ingressFiltering"`
	// If a port has fast-leave set to no and a bridge port receives a IGMP Leave message, then a IGMP Snooping enabled bridge
	// will send a IGMP query to make sure that no devices has subscribed to a certain multicast stream on a bridge port.
	LastMemberInterval *string `pulumi:"lastMemberInterval"`
	// How many times should last-member-interval pass until a IGMP Snooping bridge will stop forwarding a certain multicast
	// stream. This property only has effect when igmp-snooping is set to yes.
	LastMemberQueryCount *int `pulumi:"lastMemberQueryCount"`
	// Bridge count which BPDU can pass in a MSTP enabled network in the same region before BPDU is being ignored. This
	// property only has effect when protocol-mode is set to mstp.
	MaxHops *int `pulumi:"maxHops"`
	// Changes the Max Age value in BPDU packets, which is transmitted by the root bridge. This property only has effect when
	// protocol-mode is set to stp or rstp. Value: 6s..40s
	MaxMessageAge *string `pulumi:"maxMessageAge"`
	// Amount of time after an entry in the Multicast Database (MDB) is removed if a IGMP membership report is not received on
	// a certain port. This property only has effect when igmp-snooping is set to yes.
	MembershipInterval *string `pulumi:"membershipInterval"`
	// Selects the MLD version. Version 2 adds support for source-specific multicast. This property only has effect when
	// RouterOS IPv6 package is enabled and igmp-snooping is set to yes.
	MldVersion *int `pulumi:"mldVersion"`
	// The default bridge MTU value without any bridge ports added is 1500. The MTU value can be set manually, but it cannot
	// exceed the bridge L2MTU or the lowest bridge port L2MTU. If a new bridge port is added with L2MTU which is smaller than
	// the actual-mtu of the bridge (set by the mtu property), then manually set value will be ignored and the bridge will act
	// as if mtu=auto is set.
	Mtu *string `pulumi:"mtu"`
	// Multicast querier generates IGMP general membership queries to which all IGMP capable devices respond with an IGMP
	// membership report, usually a PIM (multicast) router or IGMP proxy generates these queries. This property only has an
	// effect when igmp-snooping is set to yes. Additionally, the igmp-snooping should be disabled/enabled after changing
	// multicast-querier property.
	MulticastQuerier *bool `pulumi:"multicastQuerier"`
	// A multicast router port is a port where a multicast router or querier is connected. On this port, unregistered multicast
	// streams and IGMP/MLD membership reports will be sent. This setting changes the state of the multicast router for a
	// bridge interface itself. This property can be used to send IGMP/MLD membership reports and multicast traffic to the
	// bridge interface for further multicast routing or proxying. This property only has an effect when igmp-snooping is set
	// to yes.
	MulticastRouter *string `pulumi:"multicastRouter"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name *string `pulumi:"name"`
	// Bridge priority, used by STP to determine root bridge, used by MSTP to determine CIST and IST regional root bridge. This
	// property has no effect when protocol-mode is set to none.
	Priority *string `pulumi:"priority"`
	// Select Spanning tree protocol (STP) or Rapid spanning tree protocol (RSTP) to ensure a loop-free topology for any
	// bridged LAN.
	ProtocolMode *string `pulumi:"protocolMode"`
	// Port VLAN ID (pvid) specifies which VLAN the untagged ingress traffic is assigned to. It applies e.g. to frames sent
	// from bridge IP and destined to a bridge port. This property only has effect when vlan-filtering is set to yes.
	Pvid *int `pulumi:"pvid"`
	// Used to change the interval how often a bridge checks if it is the active multicast querier. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QuerierInterval *string `pulumi:"querierInterval"`
	// Used to change the interval how often IGMP general membership queries are sent out. This property only has effect when
	// igmp-snooping and multicast-querier is set to yes.
	QueryInterval *string `pulumi:"queryInterval"`
	// Interval in which a IGMP capable device must reply to a IGMP query with a IGMP membership report. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QueryResponseInterval *string `pulumi:"queryResponseInterval"`
	// MSTP region name. This property only has effect when protocol-mode is set to mstp.
	RegionName *string `pulumi:"regionName"`
	// MSTP configuration revision number. This property only has effect when protocol-mode is set to mstp.
	RegionRevision *int `pulumi:"regionRevision"`
	// Specifies how many times must startup-query-interval pass until the bridge starts sending out IGMP general membership
	// queries periodically. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryCount *int `pulumi:"startupQueryCount"`
	// Used to change the amount of time after a bridge starts sending out IGMP general membership queries after the bridge is
	// enabled. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryInterval *string `pulumi:"startupQueryInterval"`
	// The Transmit Hold Count used by the Port Transmit state machine to limit transmission rate.
	TransmitHoldCount *int `pulumi:"transmitHoldCount"`
	// Globally enables or disables VLAN functionality for bridge.
	VlanFiltering *bool `pulumi:"vlanFiltering"`
}

// The set of arguments for constructing a Bridge resource.
type BridgeArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Whether to add DHCP Option-82 information (Agent Remote ID and Agent Circuit ID) to DHCP packets. Can be used together
	// with Option-82 capable DHCP server to assign IP addresses and implement policies. This property only has effect when
	// dhcp-snooping is set to yes.
	AddDhcpOption82 pulumi.BoolPtrInput
	// Static MAC address of the bridge. This property only has effect when auto-mac is set to no.
	AdminMac pulumi.StringPtrInput
	// How long a host's information will be kept in the bridge database.
	AgeingTime pulumi.StringPtrInput
	// ARP resolution protocol mode.
	Arp pulumi.StringPtrInput
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to
	// the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds,
	// minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout pulumi.StringPtrInput
	// Automatically select one MAC address of bridge ports as a bridge MAC address, bridge MAC will be chosen from the first
	// added bridge port. After a device reboot, the bridge MAC can change depending on the port-number.
	AutoMac      pulumi.BoolPtrInput
	Comment      pulumi.StringPtrInput
	DhcpSnooping pulumi.BoolPtrInput
	Disabled     pulumi.BoolPtrInput
	// This property only has effect when vlan-filtering is set to yes.
	EtherType   pulumi.StringPtrInput
	FastForward pulumi.BoolPtrInput
	// Time which is spent during the initialization phase of the bridge interface (i.e., after router startup or enabling the
	// interface) in listening/learning state before the bridge will start functioning normally.
	ForwardDelay pulumi.StringPtrInput
	// Specifies allowed frame types on a bridge port. This property only has effect when vlan-filtering is set to yes.
	FrameTypes pulumi.StringPtrInput
	// Enables multicast group and port learning to prevent multicast traffic from flooding all interfaces in a bridge.
	IgmpSnooping pulumi.BoolPtrInput
	// Selects the IGMP version in which IGMP general membership queries will be generated. This property only has effect when
	// igmp-snooping is set to yes.
	IgmpVersion pulumi.IntPtrInput
	// Enables or disables VLAN ingress filtering, which checks if the ingress port is a member of the received VLAN ID in the
	// bridge VLAN table. Should be used with frame-types to specify if the ingress traffic should be tagged or untagged. This
	// property only has effect when vlan-filtering is set to yes.
	IngressFiltering pulumi.BoolPtrInput
	// If a port has fast-leave set to no and a bridge port receives a IGMP Leave message, then a IGMP Snooping enabled bridge
	// will send a IGMP query to make sure that no devices has subscribed to a certain multicast stream on a bridge port.
	LastMemberInterval pulumi.StringPtrInput
	// How many times should last-member-interval pass until a IGMP Snooping bridge will stop forwarding a certain multicast
	// stream. This property only has effect when igmp-snooping is set to yes.
	LastMemberQueryCount pulumi.IntPtrInput
	// Bridge count which BPDU can pass in a MSTP enabled network in the same region before BPDU is being ignored. This
	// property only has effect when protocol-mode is set to mstp.
	MaxHops pulumi.IntPtrInput
	// Changes the Max Age value in BPDU packets, which is transmitted by the root bridge. This property only has effect when
	// protocol-mode is set to stp or rstp. Value: 6s..40s
	MaxMessageAge pulumi.StringPtrInput
	// Amount of time after an entry in the Multicast Database (MDB) is removed if a IGMP membership report is not received on
	// a certain port. This property only has effect when igmp-snooping is set to yes.
	MembershipInterval pulumi.StringPtrInput
	// Selects the MLD version. Version 2 adds support for source-specific multicast. This property only has effect when
	// RouterOS IPv6 package is enabled and igmp-snooping is set to yes.
	MldVersion pulumi.IntPtrInput
	// The default bridge MTU value without any bridge ports added is 1500. The MTU value can be set manually, but it cannot
	// exceed the bridge L2MTU or the lowest bridge port L2MTU. If a new bridge port is added with L2MTU which is smaller than
	// the actual-mtu of the bridge (set by the mtu property), then manually set value will be ignored and the bridge will act
	// as if mtu=auto is set.
	Mtu pulumi.StringPtrInput
	// Multicast querier generates IGMP general membership queries to which all IGMP capable devices respond with an IGMP
	// membership report, usually a PIM (multicast) router or IGMP proxy generates these queries. This property only has an
	// effect when igmp-snooping is set to yes. Additionally, the igmp-snooping should be disabled/enabled after changing
	// multicast-querier property.
	MulticastQuerier pulumi.BoolPtrInput
	// A multicast router port is a port where a multicast router or querier is connected. On this port, unregistered multicast
	// streams and IGMP/MLD membership reports will be sent. This setting changes the state of the multicast router for a
	// bridge interface itself. This property can be used to send IGMP/MLD membership reports and multicast traffic to the
	// bridge interface for further multicast routing or proxying. This property only has an effect when igmp-snooping is set
	// to yes.
	MulticastRouter pulumi.StringPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringPtrInput
	// Bridge priority, used by STP to determine root bridge, used by MSTP to determine CIST and IST regional root bridge. This
	// property has no effect when protocol-mode is set to none.
	Priority pulumi.StringPtrInput
	// Select Spanning tree protocol (STP) or Rapid spanning tree protocol (RSTP) to ensure a loop-free topology for any
	// bridged LAN.
	ProtocolMode pulumi.StringPtrInput
	// Port VLAN ID (pvid) specifies which VLAN the untagged ingress traffic is assigned to. It applies e.g. to frames sent
	// from bridge IP and destined to a bridge port. This property only has effect when vlan-filtering is set to yes.
	Pvid pulumi.IntPtrInput
	// Used to change the interval how often a bridge checks if it is the active multicast querier. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QuerierInterval pulumi.StringPtrInput
	// Used to change the interval how often IGMP general membership queries are sent out. This property only has effect when
	// igmp-snooping and multicast-querier is set to yes.
	QueryInterval pulumi.StringPtrInput
	// Interval in which a IGMP capable device must reply to a IGMP query with a IGMP membership report. This property only has
	// effect when igmp-snooping and multicast-querier is set to yes.
	QueryResponseInterval pulumi.StringPtrInput
	// MSTP region name. This property only has effect when protocol-mode is set to mstp.
	RegionName pulumi.StringPtrInput
	// MSTP configuration revision number. This property only has effect when protocol-mode is set to mstp.
	RegionRevision pulumi.IntPtrInput
	// Specifies how many times must startup-query-interval pass until the bridge starts sending out IGMP general membership
	// queries periodically. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryCount pulumi.IntPtrInput
	// Used to change the amount of time after a bridge starts sending out IGMP general membership queries after the bridge is
	// enabled. This property only has effect when igmp-snooping and multicast-querier is set to yes.
	StartupQueryInterval pulumi.StringPtrInput
	// The Transmit Hold Count used by the Port Transmit state machine to limit transmission rate.
	TransmitHoldCount pulumi.IntPtrInput
	// Globally enables or disables VLAN functionality for bridge.
	VlanFiltering pulumi.BoolPtrInput
}

func (BridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bridgeArgs)(nil)).Elem()
}

type BridgeInput interface {
	pulumi.Input

	ToBridgeOutput() BridgeOutput
	ToBridgeOutputWithContext(ctx context.Context) BridgeOutput
}

func (*Bridge) ElementType() reflect.Type {
	return reflect.TypeOf((**Bridge)(nil)).Elem()
}

func (i *Bridge) ToBridgeOutput() BridgeOutput {
	return i.ToBridgeOutputWithContext(context.Background())
}

func (i *Bridge) ToBridgeOutputWithContext(ctx context.Context) BridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BridgeOutput)
}

// BridgeArrayInput is an input type that accepts BridgeArray and BridgeArrayOutput values.
// You can construct a concrete instance of `BridgeArrayInput` via:
//
//	BridgeArray{ BridgeArgs{...} }
type BridgeArrayInput interface {
	pulumi.Input

	ToBridgeArrayOutput() BridgeArrayOutput
	ToBridgeArrayOutputWithContext(context.Context) BridgeArrayOutput
}

type BridgeArray []BridgeInput

func (BridgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bridge)(nil)).Elem()
}

func (i BridgeArray) ToBridgeArrayOutput() BridgeArrayOutput {
	return i.ToBridgeArrayOutputWithContext(context.Background())
}

func (i BridgeArray) ToBridgeArrayOutputWithContext(ctx context.Context) BridgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BridgeArrayOutput)
}

// BridgeMapInput is an input type that accepts BridgeMap and BridgeMapOutput values.
// You can construct a concrete instance of `BridgeMapInput` via:
//
//	BridgeMap{ "key": BridgeArgs{...} }
type BridgeMapInput interface {
	pulumi.Input

	ToBridgeMapOutput() BridgeMapOutput
	ToBridgeMapOutputWithContext(context.Context) BridgeMapOutput
}

type BridgeMap map[string]BridgeInput

func (BridgeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bridge)(nil)).Elem()
}

func (i BridgeMap) ToBridgeMapOutput() BridgeMapOutput {
	return i.ToBridgeMapOutputWithContext(context.Background())
}

func (i BridgeMap) ToBridgeMapOutputWithContext(ctx context.Context) BridgeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BridgeMapOutput)
}

type BridgeOutput struct{ *pulumi.OutputState }

func (BridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bridge)(nil)).Elem()
}

func (o BridgeOutput) ToBridgeOutput() BridgeOutput {
	return o
}

func (o BridgeOutput) ToBridgeOutputWithContext(ctx context.Context) BridgeOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o BridgeOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o BridgeOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

func (o BridgeOutput) ActualMtu() pulumi.IntOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntOutput { return v.ActualMtu }).(pulumi.IntOutput)
}

// Whether to add DHCP Option-82 information (Agent Remote ID and Agent Circuit ID) to DHCP packets. Can be used together
// with Option-82 capable DHCP server to assign IP addresses and implement policies. This property only has effect when
// dhcp-snooping is set to yes.
func (o BridgeOutput) AddDhcpOption82() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolPtrOutput { return v.AddDhcpOption82 }).(pulumi.BoolPtrOutput)
}

// Static MAC address of the bridge. This property only has effect when auto-mac is set to no.
func (o BridgeOutput) AdminMac() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.AdminMac }).(pulumi.StringOutput)
}

// How long a host's information will be kept in the bridge database.
func (o BridgeOutput) AgeingTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.AgeingTime }).(pulumi.StringPtrOutput)
}

// ARP resolution protocol mode.
func (o BridgeOutput) Arp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.Arp }).(pulumi.StringPtrOutput)
}

// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to
// the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds,
// minutes, hours or days. If no postfix is set then seconds (s) is used.
func (o BridgeOutput) ArpTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.ArpTimeout }).(pulumi.StringPtrOutput)
}

// Automatically select one MAC address of bridge ports as a bridge MAC address, bridge MAC will be chosen from the first
// added bridge port. After a device reboot, the bridge MAC can change depending on the port-number.
func (o BridgeOutput) AutoMac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolPtrOutput { return v.AutoMac }).(pulumi.BoolPtrOutput)
}

func (o BridgeOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o BridgeOutput) DhcpSnooping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolPtrOutput { return v.DhcpSnooping }).(pulumi.BoolPtrOutput)
}

func (o BridgeOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// This property only has effect when vlan-filtering is set to yes.
func (o BridgeOutput) EtherType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.EtherType }).(pulumi.StringPtrOutput)
}

func (o BridgeOutput) FastForward() pulumi.BoolOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolOutput { return v.FastForward }).(pulumi.BoolOutput)
}

// Time which is spent during the initialization phase of the bridge interface (i.e., after router startup or enabling the
// interface) in listening/learning state before the bridge will start functioning normally.
func (o BridgeOutput) ForwardDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.ForwardDelay }).(pulumi.StringPtrOutput)
}

// Specifies allowed frame types on a bridge port. This property only has effect when vlan-filtering is set to yes.
func (o BridgeOutput) FrameTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.FrameTypes }).(pulumi.StringPtrOutput)
}

// Enables multicast group and port learning to prevent multicast traffic from flooding all interfaces in a bridge.
func (o BridgeOutput) IgmpSnooping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolPtrOutput { return v.IgmpSnooping }).(pulumi.BoolPtrOutput)
}

// Selects the IGMP version in which IGMP general membership queries will be generated. This property only has effect when
// igmp-snooping is set to yes.
func (o BridgeOutput) IgmpVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntOutput { return v.IgmpVersion }).(pulumi.IntOutput)
}

// Enables or disables VLAN ingress filtering, which checks if the ingress port is a member of the received VLAN ID in the
// bridge VLAN table. Should be used with frame-types to specify if the ingress traffic should be tagged or untagged. This
// property only has effect when vlan-filtering is set to yes.
func (o BridgeOutput) IngressFiltering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolPtrOutput { return v.IngressFiltering }).(pulumi.BoolPtrOutput)
}

// Layer2 Maximum transmission unit.
func (o BridgeOutput) L2mtu() pulumi.IntOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntOutput { return v.L2mtu }).(pulumi.IntOutput)
}

// If a port has fast-leave set to no and a bridge port receives a IGMP Leave message, then a IGMP Snooping enabled bridge
// will send a IGMP query to make sure that no devices has subscribed to a certain multicast stream on a bridge port.
func (o BridgeOutput) LastMemberInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.LastMemberInterval }).(pulumi.StringOutput)
}

// How many times should last-member-interval pass until a IGMP Snooping bridge will stop forwarding a certain multicast
// stream. This property only has effect when igmp-snooping is set to yes.
func (o BridgeOutput) LastMemberQueryCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntOutput { return v.LastMemberQueryCount }).(pulumi.IntOutput)
}

func (o BridgeOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.MacAddress }).(pulumi.StringOutput)
}

// Bridge count which BPDU can pass in a MSTP enabled network in the same region before BPDU is being ignored. This
// property only has effect when protocol-mode is set to mstp.
func (o BridgeOutput) MaxHops() pulumi.IntOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntOutput { return v.MaxHops }).(pulumi.IntOutput)
}

// Changes the Max Age value in BPDU packets, which is transmitted by the root bridge. This property only has effect when
// protocol-mode is set to stp or rstp. Value: 6s..40s
func (o BridgeOutput) MaxMessageAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.MaxMessageAge }).(pulumi.StringPtrOutput)
}

// Amount of time after an entry in the Multicast Database (MDB) is removed if a IGMP membership report is not received on
// a certain port. This property only has effect when igmp-snooping is set to yes.
func (o BridgeOutput) MembershipInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.MembershipInterval }).(pulumi.StringOutput)
}

// Selects the MLD version. Version 2 adds support for source-specific multicast. This property only has effect when
// RouterOS IPv6 package is enabled and igmp-snooping is set to yes.
func (o BridgeOutput) MldVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntOutput { return v.MldVersion }).(pulumi.IntOutput)
}

// The default bridge MTU value without any bridge ports added is 1500. The MTU value can be set manually, but it cannot
// exceed the bridge L2MTU or the lowest bridge port L2MTU. If a new bridge port is added with L2MTU which is smaller than
// the actual-mtu of the bridge (set by the mtu property), then manually set value will be ignored and the bridge will act
// as if mtu=auto is set.
func (o BridgeOutput) Mtu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.Mtu }).(pulumi.StringPtrOutput)
}

// Multicast querier generates IGMP general membership queries to which all IGMP capable devices respond with an IGMP
// membership report, usually a PIM (multicast) router or IGMP proxy generates these queries. This property only has an
// effect when igmp-snooping is set to yes. Additionally, the igmp-snooping should be disabled/enabled after changing
// multicast-querier property.
func (o BridgeOutput) MulticastQuerier() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolPtrOutput { return v.MulticastQuerier }).(pulumi.BoolPtrOutput)
}

// A multicast router port is a port where a multicast router or querier is connected. On this port, unregistered multicast
// streams and IGMP/MLD membership reports will be sent. This setting changes the state of the multicast router for a
// bridge interface itself. This property can be used to send IGMP/MLD membership reports and multicast traffic to the
// bridge interface for further multicast routing or proxying. This property only has an effect when igmp-snooping is set
// to yes.
func (o BridgeOutput) MulticastRouter() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.MulticastRouter }).(pulumi.StringOutput)
}

// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
// integrity for that resource!
func (o BridgeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Bridge priority, used by STP to determine root bridge, used by MSTP to determine CIST and IST regional root bridge. This
// property has no effect when protocol-mode is set to none.
func (o BridgeOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.Priority }).(pulumi.StringPtrOutput)
}

// Select Spanning tree protocol (STP) or Rapid spanning tree protocol (RSTP) to ensure a loop-free topology for any
// bridged LAN.
func (o BridgeOutput) ProtocolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.ProtocolMode }).(pulumi.StringPtrOutput)
}

// Port VLAN ID (pvid) specifies which VLAN the untagged ingress traffic is assigned to. It applies e.g. to frames sent
// from bridge IP and destined to a bridge port. This property only has effect when vlan-filtering is set to yes.
func (o BridgeOutput) Pvid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntPtrOutput { return v.Pvid }).(pulumi.IntPtrOutput)
}

// Used to change the interval how often a bridge checks if it is the active multicast querier. This property only has
// effect when igmp-snooping and multicast-querier is set to yes.
func (o BridgeOutput) QuerierInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.QuerierInterval }).(pulumi.StringOutput)
}

// Used to change the interval how often IGMP general membership queries are sent out. This property only has effect when
// igmp-snooping and multicast-querier is set to yes.
func (o BridgeOutput) QueryInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.QueryInterval }).(pulumi.StringOutput)
}

// Interval in which a IGMP capable device must reply to a IGMP query with a IGMP membership report. This property only has
// effect when igmp-snooping and multicast-querier is set to yes.
func (o BridgeOutput) QueryResponseInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.QueryResponseInterval }).(pulumi.StringOutput)
}

// MSTP region name. This property only has effect when protocol-mode is set to mstp.
func (o BridgeOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringPtrOutput { return v.RegionName }).(pulumi.StringPtrOutput)
}

// MSTP configuration revision number. This property only has effect when protocol-mode is set to mstp.
func (o BridgeOutput) RegionRevision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntPtrOutput { return v.RegionRevision }).(pulumi.IntPtrOutput)
}

func (o BridgeOutput) Running() pulumi.BoolOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolOutput { return v.Running }).(pulumi.BoolOutput)
}

// Specifies how many times must startup-query-interval pass until the bridge starts sending out IGMP general membership
// queries periodically. This property only has effect when igmp-snooping and multicast-querier is set to yes.
func (o BridgeOutput) StartupQueryCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntOutput { return v.StartupQueryCount }).(pulumi.IntOutput)
}

// Used to change the amount of time after a bridge starts sending out IGMP general membership queries after the bridge is
// enabled. This property only has effect when igmp-snooping and multicast-querier is set to yes.
func (o BridgeOutput) StartupQueryInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *Bridge) pulumi.StringOutput { return v.StartupQueryInterval }).(pulumi.StringOutput)
}

// The Transmit Hold Count used by the Port Transmit state machine to limit transmission rate.
func (o BridgeOutput) TransmitHoldCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.IntPtrOutput { return v.TransmitHoldCount }).(pulumi.IntPtrOutput)
}

// Globally enables or disables VLAN functionality for bridge.
func (o BridgeOutput) VlanFiltering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bridge) pulumi.BoolPtrOutput { return v.VlanFiltering }).(pulumi.BoolPtrOutput)
}

type BridgeArrayOutput struct{ *pulumi.OutputState }

func (BridgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bridge)(nil)).Elem()
}

func (o BridgeArrayOutput) ToBridgeArrayOutput() BridgeArrayOutput {
	return o
}

func (o BridgeArrayOutput) ToBridgeArrayOutputWithContext(ctx context.Context) BridgeArrayOutput {
	return o
}

func (o BridgeArrayOutput) Index(i pulumi.IntInput) BridgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Bridge {
		return vs[0].([]*Bridge)[vs[1].(int)]
	}).(BridgeOutput)
}

type BridgeMapOutput struct{ *pulumi.OutputState }

func (BridgeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bridge)(nil)).Elem()
}

func (o BridgeMapOutput) ToBridgeMapOutput() BridgeMapOutput {
	return o
}

func (o BridgeMapOutput) ToBridgeMapOutputWithContext(ctx context.Context) BridgeMapOutput {
	return o
}

func (o BridgeMapOutput) MapIndex(k pulumi.StringInput) BridgeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Bridge {
		return vs[0].(map[string]*Bridge)[vs[1].(string)]
	}).(BridgeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeInput)(nil)).Elem(), &Bridge{})
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeArrayInput)(nil)).Elem(), BridgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeMapInput)(nil)).Elem(), BridgeMap{})
	pulumi.RegisterOutputType(BridgeOutput{})
	pulumi.RegisterOutputType(BridgeArrayOutput{})
	pulumi.RegisterOutputType(BridgeMapOutput{})
}
