// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iface

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros/Iface"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Iface.NewInterfaceVlan(ctx, "interfaceVlan", &Iface.InterfaceVlanArgs{
//				Interface: pulumi.String("bridge"),
//				VlanId:    pulumi.Int(50),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import with the name of the vlan interface in case of the example use VLAN_TEST
//
// ```sh
//
//	$ pulumi import routeros:Iface/interfaceVlan:InterfaceVlan interface_vlan VLAN_TEST
//
// ```
type InterfaceVlan struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// ARP resolution protocol mode.
	Arp pulumi.StringPtrOutput `pulumi:"arp"`
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout pulumi.StringPtrOutput `pulumi:"arpTimeout"`
	Comment    pulumi.StringPtrOutput `pulumi:"comment"`
	Disabled   pulumi.BoolPtrOutput   `pulumi:"disabled"`
	// Name of the interface.
	Interface pulumi.StringOutput `pulumi:"interface"`
	// Layer2 Maximum transmission unit.
	L2mtu                   pulumi.IntOutput       `pulumi:"l2mtu"`
	LoopProtect             pulumi.StringPtrOutput `pulumi:"loopProtect"`
	LoopProtectDisableTime  pulumi.StringPtrOutput `pulumi:"loopProtectDisableTime"`
	LoopProtectSendInterval pulumi.StringPtrOutput `pulumi:"loopProtectSendInterval"`
	LoopProtectStatus       pulumi.StringOutput    `pulumi:"loopProtectStatus"`
	MacAddress              pulumi.StringOutput    `pulumi:"macAddress"`
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu pulumi.StringOutput `pulumi:"mtu"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          pulumi.StringOutput  `pulumi:"name"`
	Running       pulumi.BoolOutput    `pulumi:"running"`
	UseServiceTag pulumi.BoolPtrOutput `pulumi:"useServiceTag"`
	VlanId        pulumi.IntOutput     `pulumi:"vlanId"`
}

// NewInterfaceVlan registers a new resource with the given unique name, arguments, and options.
func NewInterfaceVlan(ctx *pulumi.Context,
	name string, args *InterfaceVlanArgs, opts ...pulumi.ResourceOption) (*InterfaceVlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.VlanId == nil {
		return nil, errors.New("invalid value for required argument 'VlanId'")
	}
	var resource InterfaceVlan
	err := ctx.RegisterResource("routeros:Iface/interfaceVlan:InterfaceVlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInterfaceVlan gets an existing InterfaceVlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInterfaceVlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InterfaceVlanState, opts ...pulumi.ResourceOption) (*InterfaceVlan, error) {
	var resource InterfaceVlan
	err := ctx.ReadResource("routeros:Iface/interfaceVlan:InterfaceVlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InterfaceVlan resources.
type interfaceVlanState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// ARP resolution protocol mode.
	Arp *string `pulumi:"arp"`
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout *string `pulumi:"arpTimeout"`
	Comment    *string `pulumi:"comment"`
	Disabled   *bool   `pulumi:"disabled"`
	// Name of the interface.
	Interface *string `pulumi:"interface"`
	// Layer2 Maximum transmission unit.
	L2mtu                   *int    `pulumi:"l2mtu"`
	LoopProtect             *string `pulumi:"loopProtect"`
	LoopProtectDisableTime  *string `pulumi:"loopProtectDisableTime"`
	LoopProtectSendInterval *string `pulumi:"loopProtectSendInterval"`
	LoopProtectStatus       *string `pulumi:"loopProtectStatus"`
	MacAddress              *string `pulumi:"macAddress"`
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu *string `pulumi:"mtu"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          *string `pulumi:"name"`
	Running       *bool   `pulumi:"running"`
	UseServiceTag *bool   `pulumi:"useServiceTag"`
	VlanId        *int    `pulumi:"vlanId"`
}

type InterfaceVlanState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// ARP resolution protocol mode.
	Arp pulumi.StringPtrInput
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout pulumi.StringPtrInput
	Comment    pulumi.StringPtrInput
	Disabled   pulumi.BoolPtrInput
	// Name of the interface.
	Interface pulumi.StringPtrInput
	// Layer2 Maximum transmission unit.
	L2mtu                   pulumi.IntPtrInput
	LoopProtect             pulumi.StringPtrInput
	LoopProtectDisableTime  pulumi.StringPtrInput
	LoopProtectSendInterval pulumi.StringPtrInput
	LoopProtectStatus       pulumi.StringPtrInput
	MacAddress              pulumi.StringPtrInput
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu pulumi.StringPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          pulumi.StringPtrInput
	Running       pulumi.BoolPtrInput
	UseServiceTag pulumi.BoolPtrInput
	VlanId        pulumi.IntPtrInput
}

func (InterfaceVlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*interfaceVlanState)(nil)).Elem()
}

type interfaceVlanArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// ARP resolution protocol mode.
	Arp *string `pulumi:"arp"`
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout *string `pulumi:"arpTimeout"`
	Comment    *string `pulumi:"comment"`
	Disabled   *bool   `pulumi:"disabled"`
	// Name of the interface.
	Interface               string  `pulumi:"interface"`
	LoopProtect             *string `pulumi:"loopProtect"`
	LoopProtectDisableTime  *string `pulumi:"loopProtectDisableTime"`
	LoopProtectSendInterval *string `pulumi:"loopProtectSendInterval"`
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu *string `pulumi:"mtu"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          *string `pulumi:"name"`
	UseServiceTag *bool   `pulumi:"useServiceTag"`
	VlanId        int     `pulumi:"vlanId"`
}

// The set of arguments for constructing a InterfaceVlan resource.
type InterfaceVlanArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// ARP resolution protocol mode.
	Arp pulumi.StringPtrInput
	// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
	ArpTimeout pulumi.StringPtrInput
	Comment    pulumi.StringPtrInput
	Disabled   pulumi.BoolPtrInput
	// Name of the interface.
	Interface               pulumi.StringInput
	LoopProtect             pulumi.StringPtrInput
	LoopProtectDisableTime  pulumi.StringPtrInput
	LoopProtectSendInterval pulumi.StringPtrInput
	// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
	Mtu pulumi.StringPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name          pulumi.StringPtrInput
	UseServiceTag pulumi.BoolPtrInput
	VlanId        pulumi.IntInput
}

func (InterfaceVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*interfaceVlanArgs)(nil)).Elem()
}

type InterfaceVlanInput interface {
	pulumi.Input

	ToInterfaceVlanOutput() InterfaceVlanOutput
	ToInterfaceVlanOutputWithContext(ctx context.Context) InterfaceVlanOutput
}

func (*InterfaceVlan) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceVlan)(nil)).Elem()
}

func (i *InterfaceVlan) ToInterfaceVlanOutput() InterfaceVlanOutput {
	return i.ToInterfaceVlanOutputWithContext(context.Background())
}

func (i *InterfaceVlan) ToInterfaceVlanOutputWithContext(ctx context.Context) InterfaceVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceVlanOutput)
}

// InterfaceVlanArrayInput is an input type that accepts InterfaceVlanArray and InterfaceVlanArrayOutput values.
// You can construct a concrete instance of `InterfaceVlanArrayInput` via:
//
//	InterfaceVlanArray{ InterfaceVlanArgs{...} }
type InterfaceVlanArrayInput interface {
	pulumi.Input

	ToInterfaceVlanArrayOutput() InterfaceVlanArrayOutput
	ToInterfaceVlanArrayOutputWithContext(context.Context) InterfaceVlanArrayOutput
}

type InterfaceVlanArray []InterfaceVlanInput

func (InterfaceVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterfaceVlan)(nil)).Elem()
}

func (i InterfaceVlanArray) ToInterfaceVlanArrayOutput() InterfaceVlanArrayOutput {
	return i.ToInterfaceVlanArrayOutputWithContext(context.Background())
}

func (i InterfaceVlanArray) ToInterfaceVlanArrayOutputWithContext(ctx context.Context) InterfaceVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceVlanArrayOutput)
}

// InterfaceVlanMapInput is an input type that accepts InterfaceVlanMap and InterfaceVlanMapOutput values.
// You can construct a concrete instance of `InterfaceVlanMapInput` via:
//
//	InterfaceVlanMap{ "key": InterfaceVlanArgs{...} }
type InterfaceVlanMapInput interface {
	pulumi.Input

	ToInterfaceVlanMapOutput() InterfaceVlanMapOutput
	ToInterfaceVlanMapOutputWithContext(context.Context) InterfaceVlanMapOutput
}

type InterfaceVlanMap map[string]InterfaceVlanInput

func (InterfaceVlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterfaceVlan)(nil)).Elem()
}

func (i InterfaceVlanMap) ToInterfaceVlanMapOutput() InterfaceVlanMapOutput {
	return i.ToInterfaceVlanMapOutputWithContext(context.Background())
}

func (i InterfaceVlanMap) ToInterfaceVlanMapOutputWithContext(ctx context.Context) InterfaceVlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceVlanMapOutput)
}

type InterfaceVlanOutput struct{ *pulumi.OutputState }

func (InterfaceVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceVlan)(nil)).Elem()
}

func (o InterfaceVlanOutput) ToInterfaceVlanOutput() InterfaceVlanOutput {
	return o
}

func (o InterfaceVlanOutput) ToInterfaceVlanOutputWithContext(ctx context.Context) InterfaceVlanOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o InterfaceVlanOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o InterfaceVlanOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// ARP resolution protocol mode.
func (o InterfaceVlanOutput) Arp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringPtrOutput { return v.Arp }).(pulumi.StringPtrOutput)
}

// ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
func (o InterfaceVlanOutput) ArpTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringPtrOutput { return v.ArpTimeout }).(pulumi.StringPtrOutput)
}

func (o InterfaceVlanOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o InterfaceVlanOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Name of the interface.
func (o InterfaceVlanOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

// Layer2 Maximum transmission unit.
func (o InterfaceVlanOutput) L2mtu() pulumi.IntOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.IntOutput { return v.L2mtu }).(pulumi.IntOutput)
}

func (o InterfaceVlanOutput) LoopProtect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringPtrOutput { return v.LoopProtect }).(pulumi.StringPtrOutput)
}

func (o InterfaceVlanOutput) LoopProtectDisableTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringPtrOutput { return v.LoopProtectDisableTime }).(pulumi.StringPtrOutput)
}

func (o InterfaceVlanOutput) LoopProtectSendInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringPtrOutput { return v.LoopProtectSendInterval }).(pulumi.StringPtrOutput)
}

func (o InterfaceVlanOutput) LoopProtectStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringOutput { return v.LoopProtectStatus }).(pulumi.StringOutput)
}

func (o InterfaceVlanOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringOutput { return v.MacAddress }).(pulumi.StringOutput)
}

// Layer3 Maximum transmission unit ('auto', 0 .. 65535)
func (o InterfaceVlanOutput) Mtu() pulumi.StringOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringOutput { return v.Mtu }).(pulumi.StringOutput)
}

// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
// integrity for that resource!
func (o InterfaceVlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o InterfaceVlanOutput) Running() pulumi.BoolOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.BoolOutput { return v.Running }).(pulumi.BoolOutput)
}

func (o InterfaceVlanOutput) UseServiceTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.BoolPtrOutput { return v.UseServiceTag }).(pulumi.BoolPtrOutput)
}

func (o InterfaceVlanOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v *InterfaceVlan) pulumi.IntOutput { return v.VlanId }).(pulumi.IntOutput)
}

type InterfaceVlanArrayOutput struct{ *pulumi.OutputState }

func (InterfaceVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterfaceVlan)(nil)).Elem()
}

func (o InterfaceVlanArrayOutput) ToInterfaceVlanArrayOutput() InterfaceVlanArrayOutput {
	return o
}

func (o InterfaceVlanArrayOutput) ToInterfaceVlanArrayOutputWithContext(ctx context.Context) InterfaceVlanArrayOutput {
	return o
}

func (o InterfaceVlanArrayOutput) Index(i pulumi.IntInput) InterfaceVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InterfaceVlan {
		return vs[0].([]*InterfaceVlan)[vs[1].(int)]
	}).(InterfaceVlanOutput)
}

type InterfaceVlanMapOutput struct{ *pulumi.OutputState }

func (InterfaceVlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterfaceVlan)(nil)).Elem()
}

func (o InterfaceVlanMapOutput) ToInterfaceVlanMapOutput() InterfaceVlanMapOutput {
	return o
}

func (o InterfaceVlanMapOutput) ToInterfaceVlanMapOutputWithContext(ctx context.Context) InterfaceVlanMapOutput {
	return o
}

func (o InterfaceVlanMapOutput) MapIndex(k pulumi.StringInput) InterfaceVlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InterfaceVlan {
		return vs[0].(map[string]*InterfaceVlan)[vs[1].(string)]
	}).(InterfaceVlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceVlanInput)(nil)).Elem(), &InterfaceVlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceVlanArrayInput)(nil)).Elem(), InterfaceVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceVlanMapInput)(nil)).Elem(), InterfaceVlanMap{})
	pulumi.RegisterOutputType(InterfaceVlanOutput{})
	pulumi.RegisterOutputType(InterfaceVlanArrayOutput{})
	pulumi.RegisterOutputType(InterfaceVlanMapOutput{})
}
