// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ip

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetAddressesAddress struct {
	ActualInterface string `pulumi:"actualInterface"`
	Address         string `pulumi:"address"`
	Disabled        bool   `pulumi:"disabled"`
	Dynamic         bool   `pulumi:"dynamic"`
	// The ID of this resource.
	Id        string `pulumi:"id"`
	Interface string `pulumi:"interface"`
	Invalid   bool   `pulumi:"invalid"`
	Network   string `pulumi:"network"`
}

// GetAddressesAddressInput is an input type that accepts GetAddressesAddressArgs and GetAddressesAddressOutput values.
// You can construct a concrete instance of `GetAddressesAddressInput` via:
//
//	GetAddressesAddressArgs{...}
type GetAddressesAddressInput interface {
	pulumi.Input

	ToGetAddressesAddressOutput() GetAddressesAddressOutput
	ToGetAddressesAddressOutputWithContext(context.Context) GetAddressesAddressOutput
}

type GetAddressesAddressArgs struct {
	ActualInterface pulumi.StringInput `pulumi:"actualInterface"`
	Address         pulumi.StringInput `pulumi:"address"`
	Disabled        pulumi.BoolInput   `pulumi:"disabled"`
	Dynamic         pulumi.BoolInput   `pulumi:"dynamic"`
	// The ID of this resource.
	Id        pulumi.StringInput `pulumi:"id"`
	Interface pulumi.StringInput `pulumi:"interface"`
	Invalid   pulumi.BoolInput   `pulumi:"invalid"`
	Network   pulumi.StringInput `pulumi:"network"`
}

func (GetAddressesAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressesAddress)(nil)).Elem()
}

func (i GetAddressesAddressArgs) ToGetAddressesAddressOutput() GetAddressesAddressOutput {
	return i.ToGetAddressesAddressOutputWithContext(context.Background())
}

func (i GetAddressesAddressArgs) ToGetAddressesAddressOutputWithContext(ctx context.Context) GetAddressesAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressesAddressOutput)
}

// GetAddressesAddressArrayInput is an input type that accepts GetAddressesAddressArray and GetAddressesAddressArrayOutput values.
// You can construct a concrete instance of `GetAddressesAddressArrayInput` via:
//
//	GetAddressesAddressArray{ GetAddressesAddressArgs{...} }
type GetAddressesAddressArrayInput interface {
	pulumi.Input

	ToGetAddressesAddressArrayOutput() GetAddressesAddressArrayOutput
	ToGetAddressesAddressArrayOutputWithContext(context.Context) GetAddressesAddressArrayOutput
}

type GetAddressesAddressArray []GetAddressesAddressInput

func (GetAddressesAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressesAddress)(nil)).Elem()
}

func (i GetAddressesAddressArray) ToGetAddressesAddressArrayOutput() GetAddressesAddressArrayOutput {
	return i.ToGetAddressesAddressArrayOutputWithContext(context.Background())
}

func (i GetAddressesAddressArray) ToGetAddressesAddressArrayOutputWithContext(ctx context.Context) GetAddressesAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressesAddressArrayOutput)
}

type GetAddressesAddressOutput struct{ *pulumi.OutputState }

func (GetAddressesAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressesAddress)(nil)).Elem()
}

func (o GetAddressesAddressOutput) ToGetAddressesAddressOutput() GetAddressesAddressOutput {
	return o
}

func (o GetAddressesAddressOutput) ToGetAddressesAddressOutputWithContext(ctx context.Context) GetAddressesAddressOutput {
	return o
}

func (o GetAddressesAddressOutput) ActualInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressesAddress) string { return v.ActualInterface }).(pulumi.StringOutput)
}

func (o GetAddressesAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressesAddress) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetAddressesAddressOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAddressesAddress) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetAddressesAddressOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAddressesAddress) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// The ID of this resource.
func (o GetAddressesAddressOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressesAddress) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAddressesAddressOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressesAddress) string { return v.Interface }).(pulumi.StringOutput)
}

func (o GetAddressesAddressOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAddressesAddress) bool { return v.Invalid }).(pulumi.BoolOutput)
}

func (o GetAddressesAddressOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressesAddress) string { return v.Network }).(pulumi.StringOutput)
}

type GetAddressesAddressArrayOutput struct{ *pulumi.OutputState }

func (GetAddressesAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressesAddress)(nil)).Elem()
}

func (o GetAddressesAddressArrayOutput) ToGetAddressesAddressArrayOutput() GetAddressesAddressArrayOutput {
	return o
}

func (o GetAddressesAddressArrayOutput) ToGetAddressesAddressArrayOutputWithContext(ctx context.Context) GetAddressesAddressArrayOutput {
	return o
}

func (o GetAddressesAddressArrayOutput) Index(i pulumi.IntInput) GetAddressesAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddressesAddress {
		return vs[0].([]GetAddressesAddress)[vs[1].(int)]
	}).(GetAddressesAddressOutput)
}

type GetFirewallAddressList struct {
	Address      string `pulumi:"address"`
	Comment      string `pulumi:"comment"`
	CreationTime string `pulumi:"creationTime"`
	Disabled     bool   `pulumi:"disabled"`
	Dynamic      bool   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter map[string]interface{} `pulumi:"filter"`
	// The ID of this resource.
	Id      string `pulumi:"id"`
	List    string `pulumi:"list"`
	Timeout string `pulumi:"timeout"`
}

// GetFirewallAddressListInput is an input type that accepts GetFirewallAddressListArgs and GetFirewallAddressListOutput values.
// You can construct a concrete instance of `GetFirewallAddressListInput` via:
//
//	GetFirewallAddressListArgs{...}
type GetFirewallAddressListInput interface {
	pulumi.Input

	ToGetFirewallAddressListOutput() GetFirewallAddressListOutput
	ToGetFirewallAddressListOutputWithContext(context.Context) GetFirewallAddressListOutput
}

type GetFirewallAddressListArgs struct {
	Address      pulumi.StringInput `pulumi:"address"`
	Comment      pulumi.StringInput `pulumi:"comment"`
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	Disabled     pulumi.BoolInput   `pulumi:"disabled"`
	Dynamic      pulumi.BoolInput   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter pulumi.MapInput `pulumi:"filter"`
	// The ID of this resource.
	Id      pulumi.StringInput `pulumi:"id"`
	List    pulumi.StringInput `pulumi:"list"`
	Timeout pulumi.StringInput `pulumi:"timeout"`
}

func (GetFirewallAddressListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressList)(nil)).Elem()
}

func (i GetFirewallAddressListArgs) ToGetFirewallAddressListOutput() GetFirewallAddressListOutput {
	return i.ToGetFirewallAddressListOutputWithContext(context.Background())
}

func (i GetFirewallAddressListArgs) ToGetFirewallAddressListOutputWithContext(ctx context.Context) GetFirewallAddressListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressListOutput)
}

// GetFirewallAddressListArrayInput is an input type that accepts GetFirewallAddressListArray and GetFirewallAddressListArrayOutput values.
// You can construct a concrete instance of `GetFirewallAddressListArrayInput` via:
//
//	GetFirewallAddressListArray{ GetFirewallAddressListArgs{...} }
type GetFirewallAddressListArrayInput interface {
	pulumi.Input

	ToGetFirewallAddressListArrayOutput() GetFirewallAddressListArrayOutput
	ToGetFirewallAddressListArrayOutputWithContext(context.Context) GetFirewallAddressListArrayOutput
}

type GetFirewallAddressListArray []GetFirewallAddressListInput

func (GetFirewallAddressListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressList)(nil)).Elem()
}

func (i GetFirewallAddressListArray) ToGetFirewallAddressListArrayOutput() GetFirewallAddressListArrayOutput {
	return i.ToGetFirewallAddressListArrayOutputWithContext(context.Background())
}

func (i GetFirewallAddressListArray) ToGetFirewallAddressListArrayOutputWithContext(ctx context.Context) GetFirewallAddressListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallAddressListArrayOutput)
}

type GetFirewallAddressListOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallAddressList)(nil)).Elem()
}

func (o GetFirewallAddressListOutput) ToGetFirewallAddressListOutput() GetFirewallAddressListOutput {
	return o
}

func (o GetFirewallAddressListOutput) ToGetFirewallAddressListOutputWithContext(ctx context.Context) GetFirewallAddressListOutput {
	return o
}

func (o GetFirewallAddressListOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressList) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetFirewallAddressListOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressList) string { return v.Comment }).(pulumi.StringOutput)
}

func (o GetFirewallAddressListOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressList) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o GetFirewallAddressListOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallAddressList) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetFirewallAddressListOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallAddressList) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// Additional request filtering options.
func (o GetFirewallAddressListOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v GetFirewallAddressList) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

// The ID of this resource.
func (o GetFirewallAddressListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressList) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFirewallAddressListOutput) List() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressList) string { return v.List }).(pulumi.StringOutput)
}

func (o GetFirewallAddressListOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallAddressList) string { return v.Timeout }).(pulumi.StringOutput)
}

type GetFirewallAddressListArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallAddressListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallAddressList)(nil)).Elem()
}

func (o GetFirewallAddressListArrayOutput) ToGetFirewallAddressListArrayOutput() GetFirewallAddressListArrayOutput {
	return o
}

func (o GetFirewallAddressListArrayOutput) ToGetFirewallAddressListArrayOutputWithContext(ctx context.Context) GetFirewallAddressListArrayOutput {
	return o
}

func (o GetFirewallAddressListArrayOutput) Index(i pulumi.IntInput) GetFirewallAddressListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallAddressList {
		return vs[0].([]GetFirewallAddressList)[vs[1].(int)]
	}).(GetFirewallAddressListOutput)
}

type GetFirewallMangleType struct {
	Action             string `pulumi:"action"`
	AddressList        string `pulumi:"addressList"`
	AddressListTimeout string `pulumi:"addressListTimeout"`
	Bytes              int    `pulumi:"bytes"`
	Chain              string `pulumi:"chain"`
	Comment            string `pulumi:"comment"`
	ConnectionBytes    string `pulumi:"connectionBytes"`
	ConnectionLimit    string `pulumi:"connectionLimit"`
	ConnectionMark     string `pulumi:"connectionMark"`
	ConnectionNatState string `pulumi:"connectionNatState"`
	ConnectionRate     string `pulumi:"connectionRate"`
	ConnectionState    string `pulumi:"connectionState"`
	ConnectionType     string `pulumi:"connectionType"`
	Content            string `pulumi:"content"`
	Disabled           bool   `pulumi:"disabled"`
	Dscp               int    `pulumi:"dscp"`
	DstAddress         string `pulumi:"dstAddress"`
	DstAddressList     string `pulumi:"dstAddressList"`
	DstAddressType     string `pulumi:"dstAddressType"`
	DstLimit           string `pulumi:"dstLimit"`
	DstPort            string `pulumi:"dstPort"`
	Dynamic            bool   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      map[string]interface{} `pulumi:"filter"`
	Fragment    bool                   `pulumi:"fragment"`
	Hotspot     string                 `pulumi:"hotspot"`
	IcmpOptions string                 `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      string `pulumi:"id"`
	InBridgePort            string `pulumi:"inBridgePort"`
	InBridgePortList        string `pulumi:"inBridgePortList"`
	InInterface             string `pulumi:"inInterface"`
	InInterfaceList         string `pulumi:"inInterfaceList"`
	IngressPriority         int    `pulumi:"ingressPriority"`
	Invalid                 bool   `pulumi:"invalid"`
	IpsecPolicy             string `pulumi:"ipsecPolicy"`
	Ipv4Options             string `pulumi:"ipv4Options"`
	JumpTarget              string `pulumi:"jumpTarget"`
	Layer7Protocol          string `pulumi:"layer7Protocol"`
	Limit                   string `pulumi:"limit"`
	Log                     bool   `pulumi:"log"`
	LogPrefix               string `pulumi:"logPrefix"`
	NewConnectionMark       string `pulumi:"newConnectionMark"`
	NewDscp                 int    `pulumi:"newDscp"`
	NewMss                  int    `pulumi:"newMss"`
	NewPacketMark           string `pulumi:"newPacketMark"`
	NewPriority             string `pulumi:"newPriority"`
	NewRoutingMark          string `pulumi:"newRoutingMark"`
	NewTtl                  string `pulumi:"newTtl"`
	Nth                     string `pulumi:"nth"`
	OutBridgePort           string `pulumi:"outBridgePort"`
	OutBridgePortList       string `pulumi:"outBridgePortList"`
	OutInterface            string `pulumi:"outInterface"`
	OutInterfaceList        string `pulumi:"outInterfaceList"`
	PacketMark              string `pulumi:"packetMark"`
	PacketSize              string `pulumi:"packetSize"`
	Packets                 int    `pulumi:"packets"`
	Passthrough             bool   `pulumi:"passthrough"`
	PerConnectionClassifier string `pulumi:"perConnectionClassifier"`
	Port                    string `pulumi:"port"`
	Protocol                string `pulumi:"protocol"`
	Psd                     string `pulumi:"psd"`
	Random                  int    `pulumi:"random"`
	RouteDst                string `pulumi:"routeDst"`
	RoutingMark             string `pulumi:"routingMark"`
	SrcAddress              string `pulumi:"srcAddress"`
	SrcAddressList          string `pulumi:"srcAddressList"`
	SrcAddressType          string `pulumi:"srcAddressType"`
	SrcMacAddress           string `pulumi:"srcMacAddress"`
	SrcPort                 string `pulumi:"srcPort"`
	TcpFlags                string `pulumi:"tcpFlags"`
	TcpMss                  string `pulumi:"tcpMss"`
	Time                    string `pulumi:"time"`
	TlsHost                 string `pulumi:"tlsHost"`
	Ttl                     string `pulumi:"ttl"`
}

// GetFirewallMangleTypeInput is an input type that accepts GetFirewallMangleTypeArgs and GetFirewallMangleTypeOutput values.
// You can construct a concrete instance of `GetFirewallMangleTypeInput` via:
//
//	GetFirewallMangleTypeArgs{...}
type GetFirewallMangleTypeInput interface {
	pulumi.Input

	ToGetFirewallMangleTypeOutput() GetFirewallMangleTypeOutput
	ToGetFirewallMangleTypeOutputWithContext(context.Context) GetFirewallMangleTypeOutput
}

type GetFirewallMangleTypeArgs struct {
	Action             pulumi.StringInput `pulumi:"action"`
	AddressList        pulumi.StringInput `pulumi:"addressList"`
	AddressListTimeout pulumi.StringInput `pulumi:"addressListTimeout"`
	Bytes              pulumi.IntInput    `pulumi:"bytes"`
	Chain              pulumi.StringInput `pulumi:"chain"`
	Comment            pulumi.StringInput `pulumi:"comment"`
	ConnectionBytes    pulumi.StringInput `pulumi:"connectionBytes"`
	ConnectionLimit    pulumi.StringInput `pulumi:"connectionLimit"`
	ConnectionMark     pulumi.StringInput `pulumi:"connectionMark"`
	ConnectionNatState pulumi.StringInput `pulumi:"connectionNatState"`
	ConnectionRate     pulumi.StringInput `pulumi:"connectionRate"`
	ConnectionState    pulumi.StringInput `pulumi:"connectionState"`
	ConnectionType     pulumi.StringInput `pulumi:"connectionType"`
	Content            pulumi.StringInput `pulumi:"content"`
	Disabled           pulumi.BoolInput   `pulumi:"disabled"`
	Dscp               pulumi.IntInput    `pulumi:"dscp"`
	DstAddress         pulumi.StringInput `pulumi:"dstAddress"`
	DstAddressList     pulumi.StringInput `pulumi:"dstAddressList"`
	DstAddressType     pulumi.StringInput `pulumi:"dstAddressType"`
	DstLimit           pulumi.StringInput `pulumi:"dstLimit"`
	DstPort            pulumi.StringInput `pulumi:"dstPort"`
	Dynamic            pulumi.BoolInput   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      pulumi.MapInput    `pulumi:"filter"`
	Fragment    pulumi.BoolInput   `pulumi:"fragment"`
	Hotspot     pulumi.StringInput `pulumi:"hotspot"`
	IcmpOptions pulumi.StringInput `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      pulumi.StringInput `pulumi:"id"`
	InBridgePort            pulumi.StringInput `pulumi:"inBridgePort"`
	InBridgePortList        pulumi.StringInput `pulumi:"inBridgePortList"`
	InInterface             pulumi.StringInput `pulumi:"inInterface"`
	InInterfaceList         pulumi.StringInput `pulumi:"inInterfaceList"`
	IngressPriority         pulumi.IntInput    `pulumi:"ingressPriority"`
	Invalid                 pulumi.BoolInput   `pulumi:"invalid"`
	IpsecPolicy             pulumi.StringInput `pulumi:"ipsecPolicy"`
	Ipv4Options             pulumi.StringInput `pulumi:"ipv4Options"`
	JumpTarget              pulumi.StringInput `pulumi:"jumpTarget"`
	Layer7Protocol          pulumi.StringInput `pulumi:"layer7Protocol"`
	Limit                   pulumi.StringInput `pulumi:"limit"`
	Log                     pulumi.BoolInput   `pulumi:"log"`
	LogPrefix               pulumi.StringInput `pulumi:"logPrefix"`
	NewConnectionMark       pulumi.StringInput `pulumi:"newConnectionMark"`
	NewDscp                 pulumi.IntInput    `pulumi:"newDscp"`
	NewMss                  pulumi.IntInput    `pulumi:"newMss"`
	NewPacketMark           pulumi.StringInput `pulumi:"newPacketMark"`
	NewPriority             pulumi.StringInput `pulumi:"newPriority"`
	NewRoutingMark          pulumi.StringInput `pulumi:"newRoutingMark"`
	NewTtl                  pulumi.StringInput `pulumi:"newTtl"`
	Nth                     pulumi.StringInput `pulumi:"nth"`
	OutBridgePort           pulumi.StringInput `pulumi:"outBridgePort"`
	OutBridgePortList       pulumi.StringInput `pulumi:"outBridgePortList"`
	OutInterface            pulumi.StringInput `pulumi:"outInterface"`
	OutInterfaceList        pulumi.StringInput `pulumi:"outInterfaceList"`
	PacketMark              pulumi.StringInput `pulumi:"packetMark"`
	PacketSize              pulumi.StringInput `pulumi:"packetSize"`
	Packets                 pulumi.IntInput    `pulumi:"packets"`
	Passthrough             pulumi.BoolInput   `pulumi:"passthrough"`
	PerConnectionClassifier pulumi.StringInput `pulumi:"perConnectionClassifier"`
	Port                    pulumi.StringInput `pulumi:"port"`
	Protocol                pulumi.StringInput `pulumi:"protocol"`
	Psd                     pulumi.StringInput `pulumi:"psd"`
	Random                  pulumi.IntInput    `pulumi:"random"`
	RouteDst                pulumi.StringInput `pulumi:"routeDst"`
	RoutingMark             pulumi.StringInput `pulumi:"routingMark"`
	SrcAddress              pulumi.StringInput `pulumi:"srcAddress"`
	SrcAddressList          pulumi.StringInput `pulumi:"srcAddressList"`
	SrcAddressType          pulumi.StringInput `pulumi:"srcAddressType"`
	SrcMacAddress           pulumi.StringInput `pulumi:"srcMacAddress"`
	SrcPort                 pulumi.StringInput `pulumi:"srcPort"`
	TcpFlags                pulumi.StringInput `pulumi:"tcpFlags"`
	TcpMss                  pulumi.StringInput `pulumi:"tcpMss"`
	Time                    pulumi.StringInput `pulumi:"time"`
	TlsHost                 pulumi.StringInput `pulumi:"tlsHost"`
	Ttl                     pulumi.StringInput `pulumi:"ttl"`
}

func (GetFirewallMangleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMangleType)(nil)).Elem()
}

func (i GetFirewallMangleTypeArgs) ToGetFirewallMangleTypeOutput() GetFirewallMangleTypeOutput {
	return i.ToGetFirewallMangleTypeOutputWithContext(context.Background())
}

func (i GetFirewallMangleTypeArgs) ToGetFirewallMangleTypeOutputWithContext(ctx context.Context) GetFirewallMangleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMangleTypeOutput)
}

// GetFirewallMangleTypeArrayInput is an input type that accepts GetFirewallMangleTypeArray and GetFirewallMangleTypeArrayOutput values.
// You can construct a concrete instance of `GetFirewallMangleTypeArrayInput` via:
//
//	GetFirewallMangleTypeArray{ GetFirewallMangleTypeArgs{...} }
type GetFirewallMangleTypeArrayInput interface {
	pulumi.Input

	ToGetFirewallMangleTypeArrayOutput() GetFirewallMangleTypeArrayOutput
	ToGetFirewallMangleTypeArrayOutputWithContext(context.Context) GetFirewallMangleTypeArrayOutput
}

type GetFirewallMangleTypeArray []GetFirewallMangleTypeInput

func (GetFirewallMangleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMangleType)(nil)).Elem()
}

func (i GetFirewallMangleTypeArray) ToGetFirewallMangleTypeArrayOutput() GetFirewallMangleTypeArrayOutput {
	return i.ToGetFirewallMangleTypeArrayOutputWithContext(context.Background())
}

func (i GetFirewallMangleTypeArray) ToGetFirewallMangleTypeArrayOutputWithContext(ctx context.Context) GetFirewallMangleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallMangleTypeArrayOutput)
}

type GetFirewallMangleTypeOutput struct{ *pulumi.OutputState }

func (GetFirewallMangleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallMangleType)(nil)).Elem()
}

func (o GetFirewallMangleTypeOutput) ToGetFirewallMangleTypeOutput() GetFirewallMangleTypeOutput {
	return o
}

func (o GetFirewallMangleTypeOutput) ToGetFirewallMangleTypeOutputWithContext(ctx context.Context) GetFirewallMangleTypeOutput {
	return o
}

func (o GetFirewallMangleTypeOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) AddressList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.AddressList }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) AddressListTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.AddressListTimeout }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Bytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallMangleType) int { return v.Bytes }).(pulumi.IntOutput)
}

func (o GetFirewallMangleTypeOutput) Chain() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Chain }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Comment }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) ConnectionBytes() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.ConnectionBytes }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) ConnectionLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.ConnectionLimit }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) ConnectionMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.ConnectionMark }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) ConnectionNatState() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.ConnectionNatState }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) ConnectionRate() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.ConnectionRate }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) ConnectionState() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.ConnectionState }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.ConnectionType }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Content }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallMangleType) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetFirewallMangleTypeOutput) Dscp() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallMangleType) int { return v.Dscp }).(pulumi.IntOutput)
}

func (o GetFirewallMangleTypeOutput) DstAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.DstAddress }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) DstAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.DstAddressList }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) DstAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.DstAddressType }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) DstLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.DstLimit }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) DstPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.DstPort }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallMangleType) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// Additional request filtering options.
func (o GetFirewallMangleTypeOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v GetFirewallMangleType) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

func (o GetFirewallMangleTypeOutput) Fragment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallMangleType) bool { return v.Fragment }).(pulumi.BoolOutput)
}

func (o GetFirewallMangleTypeOutput) Hotspot() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Hotspot }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) IcmpOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.IcmpOptions }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetFirewallMangleTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) InBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.InBridgePort }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) InBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.InBridgePortList }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) InInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.InInterface }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) InInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.InInterfaceList }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) IngressPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallMangleType) int { return v.IngressPriority }).(pulumi.IntOutput)
}

func (o GetFirewallMangleTypeOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallMangleType) bool { return v.Invalid }).(pulumi.BoolOutput)
}

func (o GetFirewallMangleTypeOutput) IpsecPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.IpsecPolicy }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Ipv4Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Ipv4Options }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) JumpTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.JumpTarget }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Layer7Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Layer7Protocol }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Limit() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Limit }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Log() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallMangleType) bool { return v.Log }).(pulumi.BoolOutput)
}

func (o GetFirewallMangleTypeOutput) LogPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.LogPrefix }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) NewConnectionMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.NewConnectionMark }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) NewDscp() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallMangleType) int { return v.NewDscp }).(pulumi.IntOutput)
}

func (o GetFirewallMangleTypeOutput) NewMss() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallMangleType) int { return v.NewMss }).(pulumi.IntOutput)
}

func (o GetFirewallMangleTypeOutput) NewPacketMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.NewPacketMark }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) NewPriority() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.NewPriority }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) NewRoutingMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.NewRoutingMark }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) NewTtl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.NewTtl }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Nth() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Nth }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) OutBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.OutBridgePort }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) OutBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.OutBridgePortList }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) OutInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.OutInterface }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) OutInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.OutInterfaceList }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) PacketMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.PacketMark }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) PacketSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.PacketSize }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Packets() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallMangleType) int { return v.Packets }).(pulumi.IntOutput)
}

func (o GetFirewallMangleTypeOutput) Passthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallMangleType) bool { return v.Passthrough }).(pulumi.BoolOutput)
}

func (o GetFirewallMangleTypeOutput) PerConnectionClassifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.PerConnectionClassifier }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Psd() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Psd }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Random() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallMangleType) int { return v.Random }).(pulumi.IntOutput)
}

func (o GetFirewallMangleTypeOutput) RouteDst() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.RouteDst }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) RoutingMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.RoutingMark }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) SrcAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.SrcAddress }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) SrcAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.SrcAddressList }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) SrcAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.SrcAddressType }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) SrcMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.SrcMacAddress }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) SrcPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.SrcPort }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) TcpFlags() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.TcpFlags }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) TcpMss() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.TcpMss }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Time }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) TlsHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.TlsHost }).(pulumi.StringOutput)
}

func (o GetFirewallMangleTypeOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallMangleType) string { return v.Ttl }).(pulumi.StringOutput)
}

type GetFirewallMangleTypeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallMangleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallMangleType)(nil)).Elem()
}

func (o GetFirewallMangleTypeArrayOutput) ToGetFirewallMangleTypeArrayOutput() GetFirewallMangleTypeArrayOutput {
	return o
}

func (o GetFirewallMangleTypeArrayOutput) ToGetFirewallMangleTypeArrayOutputWithContext(ctx context.Context) GetFirewallMangleTypeArrayOutput {
	return o
}

func (o GetFirewallMangleTypeArrayOutput) Index(i pulumi.IntInput) GetFirewallMangleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallMangleType {
		return vs[0].([]GetFirewallMangleType)[vs[1].(int)]
	}).(GetFirewallMangleTypeOutput)
}

type GetFirewallNatType struct {
	Action             string `pulumi:"action"`
	AddressList        string `pulumi:"addressList"`
	AddressListTimeout string `pulumi:"addressListTimeout"`
	Bytes              int    `pulumi:"bytes"`
	Chain              string `pulumi:"chain"`
	Comment            string `pulumi:"comment"`
	ConnectionBytes    string `pulumi:"connectionBytes"`
	ConnectionLimit    string `pulumi:"connectionLimit"`
	ConnectionMark     string `pulumi:"connectionMark"`
	ConnectionRate     string `pulumi:"connectionRate"`
	ConnectionType     string `pulumi:"connectionType"`
	Content            string `pulumi:"content"`
	Disabled           bool   `pulumi:"disabled"`
	Dscp               int    `pulumi:"dscp"`
	DstAddress         string `pulumi:"dstAddress"`
	DstAddressList     string `pulumi:"dstAddressList"`
	DstAddressType     string `pulumi:"dstAddressType"`
	DstLimit           string `pulumi:"dstLimit"`
	DstPort            string `pulumi:"dstPort"`
	Dynamic            bool   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      map[string]interface{} `pulumi:"filter"`
	Fragment    bool                   `pulumi:"fragment"`
	Hotspot     string                 `pulumi:"hotspot"`
	IcmpOptions string                 `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      string `pulumi:"id"`
	InBridgePort            string `pulumi:"inBridgePort"`
	InBridgePortList        string `pulumi:"inBridgePortList"`
	InInterface             string `pulumi:"inInterface"`
	InInterfaceList         string `pulumi:"inInterfaceList"`
	IngressPriority         int    `pulumi:"ingressPriority"`
	Invalid                 bool   `pulumi:"invalid"`
	IpsecPolicy             string `pulumi:"ipsecPolicy"`
	Ipv4Options             string `pulumi:"ipv4Options"`
	JumpTarget              string `pulumi:"jumpTarget"`
	Layer7Protocol          string `pulumi:"layer7Protocol"`
	Limit                   string `pulumi:"limit"`
	Log                     bool   `pulumi:"log"`
	LogPrefix               string `pulumi:"logPrefix"`
	Nth                     string `pulumi:"nth"`
	OutBridgePort           string `pulumi:"outBridgePort"`
	OutBridgePortList       string `pulumi:"outBridgePortList"`
	OutInterface            string `pulumi:"outInterface"`
	OutInterfaceList        string `pulumi:"outInterfaceList"`
	PacketMark              string `pulumi:"packetMark"`
	PacketSize              string `pulumi:"packetSize"`
	Packets                 int    `pulumi:"packets"`
	PerConnectionClassifier string `pulumi:"perConnectionClassifier"`
	Port                    string `pulumi:"port"`
	Priority                int    `pulumi:"priority"`
	Protocol                string `pulumi:"protocol"`
	Psd                     string `pulumi:"psd"`
	Random                  int    `pulumi:"random"`
	RoutingMark             string `pulumi:"routingMark"`
	SameNotByDst            bool   `pulumi:"sameNotByDst"`
	SrcAddress              string `pulumi:"srcAddress"`
	SrcAddressList          string `pulumi:"srcAddressList"`
	SrcAddressType          string `pulumi:"srcAddressType"`
	SrcMacAddress           string `pulumi:"srcMacAddress"`
	SrcPort                 string `pulumi:"srcPort"`
	TcpMss                  string `pulumi:"tcpMss"`
	Time                    string `pulumi:"time"`
	ToAddresses             string `pulumi:"toAddresses"`
	ToPorts                 string `pulumi:"toPorts"`
	Ttl                     string `pulumi:"ttl"`
}

// GetFirewallNatTypeInput is an input type that accepts GetFirewallNatTypeArgs and GetFirewallNatTypeOutput values.
// You can construct a concrete instance of `GetFirewallNatTypeInput` via:
//
//	GetFirewallNatTypeArgs{...}
type GetFirewallNatTypeInput interface {
	pulumi.Input

	ToGetFirewallNatTypeOutput() GetFirewallNatTypeOutput
	ToGetFirewallNatTypeOutputWithContext(context.Context) GetFirewallNatTypeOutput
}

type GetFirewallNatTypeArgs struct {
	Action             pulumi.StringInput `pulumi:"action"`
	AddressList        pulumi.StringInput `pulumi:"addressList"`
	AddressListTimeout pulumi.StringInput `pulumi:"addressListTimeout"`
	Bytes              pulumi.IntInput    `pulumi:"bytes"`
	Chain              pulumi.StringInput `pulumi:"chain"`
	Comment            pulumi.StringInput `pulumi:"comment"`
	ConnectionBytes    pulumi.StringInput `pulumi:"connectionBytes"`
	ConnectionLimit    pulumi.StringInput `pulumi:"connectionLimit"`
	ConnectionMark     pulumi.StringInput `pulumi:"connectionMark"`
	ConnectionRate     pulumi.StringInput `pulumi:"connectionRate"`
	ConnectionType     pulumi.StringInput `pulumi:"connectionType"`
	Content            pulumi.StringInput `pulumi:"content"`
	Disabled           pulumi.BoolInput   `pulumi:"disabled"`
	Dscp               pulumi.IntInput    `pulumi:"dscp"`
	DstAddress         pulumi.StringInput `pulumi:"dstAddress"`
	DstAddressList     pulumi.StringInput `pulumi:"dstAddressList"`
	DstAddressType     pulumi.StringInput `pulumi:"dstAddressType"`
	DstLimit           pulumi.StringInput `pulumi:"dstLimit"`
	DstPort            pulumi.StringInput `pulumi:"dstPort"`
	Dynamic            pulumi.BoolInput   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      pulumi.MapInput    `pulumi:"filter"`
	Fragment    pulumi.BoolInput   `pulumi:"fragment"`
	Hotspot     pulumi.StringInput `pulumi:"hotspot"`
	IcmpOptions pulumi.StringInput `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      pulumi.StringInput `pulumi:"id"`
	InBridgePort            pulumi.StringInput `pulumi:"inBridgePort"`
	InBridgePortList        pulumi.StringInput `pulumi:"inBridgePortList"`
	InInterface             pulumi.StringInput `pulumi:"inInterface"`
	InInterfaceList         pulumi.StringInput `pulumi:"inInterfaceList"`
	IngressPriority         pulumi.IntInput    `pulumi:"ingressPriority"`
	Invalid                 pulumi.BoolInput   `pulumi:"invalid"`
	IpsecPolicy             pulumi.StringInput `pulumi:"ipsecPolicy"`
	Ipv4Options             pulumi.StringInput `pulumi:"ipv4Options"`
	JumpTarget              pulumi.StringInput `pulumi:"jumpTarget"`
	Layer7Protocol          pulumi.StringInput `pulumi:"layer7Protocol"`
	Limit                   pulumi.StringInput `pulumi:"limit"`
	Log                     pulumi.BoolInput   `pulumi:"log"`
	LogPrefix               pulumi.StringInput `pulumi:"logPrefix"`
	Nth                     pulumi.StringInput `pulumi:"nth"`
	OutBridgePort           pulumi.StringInput `pulumi:"outBridgePort"`
	OutBridgePortList       pulumi.StringInput `pulumi:"outBridgePortList"`
	OutInterface            pulumi.StringInput `pulumi:"outInterface"`
	OutInterfaceList        pulumi.StringInput `pulumi:"outInterfaceList"`
	PacketMark              pulumi.StringInput `pulumi:"packetMark"`
	PacketSize              pulumi.StringInput `pulumi:"packetSize"`
	Packets                 pulumi.IntInput    `pulumi:"packets"`
	PerConnectionClassifier pulumi.StringInput `pulumi:"perConnectionClassifier"`
	Port                    pulumi.StringInput `pulumi:"port"`
	Priority                pulumi.IntInput    `pulumi:"priority"`
	Protocol                pulumi.StringInput `pulumi:"protocol"`
	Psd                     pulumi.StringInput `pulumi:"psd"`
	Random                  pulumi.IntInput    `pulumi:"random"`
	RoutingMark             pulumi.StringInput `pulumi:"routingMark"`
	SameNotByDst            pulumi.BoolInput   `pulumi:"sameNotByDst"`
	SrcAddress              pulumi.StringInput `pulumi:"srcAddress"`
	SrcAddressList          pulumi.StringInput `pulumi:"srcAddressList"`
	SrcAddressType          pulumi.StringInput `pulumi:"srcAddressType"`
	SrcMacAddress           pulumi.StringInput `pulumi:"srcMacAddress"`
	SrcPort                 pulumi.StringInput `pulumi:"srcPort"`
	TcpMss                  pulumi.StringInput `pulumi:"tcpMss"`
	Time                    pulumi.StringInput `pulumi:"time"`
	ToAddresses             pulumi.StringInput `pulumi:"toAddresses"`
	ToPorts                 pulumi.StringInput `pulumi:"toPorts"`
	Ttl                     pulumi.StringInput `pulumi:"ttl"`
}

func (GetFirewallNatTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallNatType)(nil)).Elem()
}

func (i GetFirewallNatTypeArgs) ToGetFirewallNatTypeOutput() GetFirewallNatTypeOutput {
	return i.ToGetFirewallNatTypeOutputWithContext(context.Background())
}

func (i GetFirewallNatTypeArgs) ToGetFirewallNatTypeOutputWithContext(ctx context.Context) GetFirewallNatTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallNatTypeOutput)
}

// GetFirewallNatTypeArrayInput is an input type that accepts GetFirewallNatTypeArray and GetFirewallNatTypeArrayOutput values.
// You can construct a concrete instance of `GetFirewallNatTypeArrayInput` via:
//
//	GetFirewallNatTypeArray{ GetFirewallNatTypeArgs{...} }
type GetFirewallNatTypeArrayInput interface {
	pulumi.Input

	ToGetFirewallNatTypeArrayOutput() GetFirewallNatTypeArrayOutput
	ToGetFirewallNatTypeArrayOutputWithContext(context.Context) GetFirewallNatTypeArrayOutput
}

type GetFirewallNatTypeArray []GetFirewallNatTypeInput

func (GetFirewallNatTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallNatType)(nil)).Elem()
}

func (i GetFirewallNatTypeArray) ToGetFirewallNatTypeArrayOutput() GetFirewallNatTypeArrayOutput {
	return i.ToGetFirewallNatTypeArrayOutputWithContext(context.Background())
}

func (i GetFirewallNatTypeArray) ToGetFirewallNatTypeArrayOutputWithContext(ctx context.Context) GetFirewallNatTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallNatTypeArrayOutput)
}

type GetFirewallNatTypeOutput struct{ *pulumi.OutputState }

func (GetFirewallNatTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallNatType)(nil)).Elem()
}

func (o GetFirewallNatTypeOutput) ToGetFirewallNatTypeOutput() GetFirewallNatTypeOutput {
	return o
}

func (o GetFirewallNatTypeOutput) ToGetFirewallNatTypeOutputWithContext(ctx context.Context) GetFirewallNatTypeOutput {
	return o
}

func (o GetFirewallNatTypeOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) AddressList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.AddressList }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) AddressListTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.AddressListTimeout }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Bytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallNatType) int { return v.Bytes }).(pulumi.IntOutput)
}

func (o GetFirewallNatTypeOutput) Chain() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Chain }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Comment }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) ConnectionBytes() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.ConnectionBytes }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) ConnectionLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.ConnectionLimit }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) ConnectionMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.ConnectionMark }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) ConnectionRate() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.ConnectionRate }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.ConnectionType }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Content }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallNatType) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetFirewallNatTypeOutput) Dscp() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallNatType) int { return v.Dscp }).(pulumi.IntOutput)
}

func (o GetFirewallNatTypeOutput) DstAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.DstAddress }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) DstAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.DstAddressList }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) DstAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.DstAddressType }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) DstLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.DstLimit }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) DstPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.DstPort }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallNatType) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// Additional request filtering options.
func (o GetFirewallNatTypeOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v GetFirewallNatType) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

func (o GetFirewallNatTypeOutput) Fragment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallNatType) bool { return v.Fragment }).(pulumi.BoolOutput)
}

func (o GetFirewallNatTypeOutput) Hotspot() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Hotspot }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) IcmpOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.IcmpOptions }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetFirewallNatTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) InBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.InBridgePort }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) InBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.InBridgePortList }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) InInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.InInterface }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) InInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.InInterfaceList }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) IngressPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallNatType) int { return v.IngressPriority }).(pulumi.IntOutput)
}

func (o GetFirewallNatTypeOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallNatType) bool { return v.Invalid }).(pulumi.BoolOutput)
}

func (o GetFirewallNatTypeOutput) IpsecPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.IpsecPolicy }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Ipv4Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Ipv4Options }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) JumpTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.JumpTarget }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Layer7Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Layer7Protocol }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Limit() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Limit }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Log() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallNatType) bool { return v.Log }).(pulumi.BoolOutput)
}

func (o GetFirewallNatTypeOutput) LogPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.LogPrefix }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Nth() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Nth }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) OutBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.OutBridgePort }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) OutBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.OutBridgePortList }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) OutInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.OutInterface }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) OutInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.OutInterfaceList }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) PacketMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.PacketMark }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) PacketSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.PacketSize }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Packets() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallNatType) int { return v.Packets }).(pulumi.IntOutput)
}

func (o GetFirewallNatTypeOutput) PerConnectionClassifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.PerConnectionClassifier }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallNatType) int { return v.Priority }).(pulumi.IntOutput)
}

func (o GetFirewallNatTypeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Psd() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Psd }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Random() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallNatType) int { return v.Random }).(pulumi.IntOutput)
}

func (o GetFirewallNatTypeOutput) RoutingMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.RoutingMark }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) SameNotByDst() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallNatType) bool { return v.SameNotByDst }).(pulumi.BoolOutput)
}

func (o GetFirewallNatTypeOutput) SrcAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.SrcAddress }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) SrcAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.SrcAddressList }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) SrcAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.SrcAddressType }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) SrcMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.SrcMacAddress }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) SrcPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.SrcPort }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) TcpMss() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.TcpMss }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Time }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) ToAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.ToAddresses }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) ToPorts() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.ToPorts }).(pulumi.StringOutput)
}

func (o GetFirewallNatTypeOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallNatType) string { return v.Ttl }).(pulumi.StringOutput)
}

type GetFirewallNatTypeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallNatTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallNatType)(nil)).Elem()
}

func (o GetFirewallNatTypeArrayOutput) ToGetFirewallNatTypeArrayOutput() GetFirewallNatTypeArrayOutput {
	return o
}

func (o GetFirewallNatTypeArrayOutput) ToGetFirewallNatTypeArrayOutputWithContext(ctx context.Context) GetFirewallNatTypeArrayOutput {
	return o
}

func (o GetFirewallNatTypeArrayOutput) Index(i pulumi.IntInput) GetFirewallNatTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallNatType {
		return vs[0].([]GetFirewallNatType)[vs[1].(int)]
	}).(GetFirewallNatTypeOutput)
}

type GetFirewallRule struct {
	Action             string `pulumi:"action"`
	AddressListTimeout string `pulumi:"addressListTimeout"`
	Bytes              int    `pulumi:"bytes"`
	Chain              string `pulumi:"chain"`
	Comment            string `pulumi:"comment"`
	ConnectionBytes    string `pulumi:"connectionBytes"`
	ConnectionLimit    string `pulumi:"connectionLimit"`
	ConnectionMark     string `pulumi:"connectionMark"`
	ConnectionNatState string `pulumi:"connectionNatState"`
	ConnectionRate     string `pulumi:"connectionRate"`
	ConnectionState    string `pulumi:"connectionState"`
	ConnectionType     string `pulumi:"connectionType"`
	Content            string `pulumi:"content"`
	Disabled           bool   `pulumi:"disabled"`
	Dscp               int    `pulumi:"dscp"`
	DstAddress         string `pulumi:"dstAddress"`
	DstAddressList     string `pulumi:"dstAddressList"`
	DstAddressType     string `pulumi:"dstAddressType"`
	DstLimit           string `pulumi:"dstLimit"`
	DstPort            string `pulumi:"dstPort"`
	Dynamic            bool   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      map[string]interface{} `pulumi:"filter"`
	Fragment    bool                   `pulumi:"fragment"`
	Hotspot     string                 `pulumi:"hotspot"`
	HwOffload   bool                   `pulumi:"hwOffload"`
	IcmpOptions string                 `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      string `pulumi:"id"`
	InBridgePort            string `pulumi:"inBridgePort"`
	InBridgePortList        string `pulumi:"inBridgePortList"`
	InInterface             string `pulumi:"inInterface"`
	InInterfaceList         string `pulumi:"inInterfaceList"`
	IngressPriority         int    `pulumi:"ingressPriority"`
	Invalid                 bool   `pulumi:"invalid"`
	IpsecPolicy             string `pulumi:"ipsecPolicy"`
	Ipv4Options             string `pulumi:"ipv4Options"`
	JumpTarget              string `pulumi:"jumpTarget"`
	Layer7Protocol          string `pulumi:"layer7Protocol"`
	Limit                   string `pulumi:"limit"`
	Log                     bool   `pulumi:"log"`
	LogPrefix               string `pulumi:"logPrefix"`
	Nth                     string `pulumi:"nth"`
	OutBridgePort           string `pulumi:"outBridgePort"`
	OutBridgePortList       string `pulumi:"outBridgePortList"`
	OutInterface            string `pulumi:"outInterface"`
	OutInterfaceList        string `pulumi:"outInterfaceList"`
	PacketMark              string `pulumi:"packetMark"`
	PacketSize              string `pulumi:"packetSize"`
	Packets                 int    `pulumi:"packets"`
	PerConnectionClassifier string `pulumi:"perConnectionClassifier"`
	Port                    string `pulumi:"port"`
	Priority                int    `pulumi:"priority"`
	Protocol                string `pulumi:"protocol"`
	Psd                     string `pulumi:"psd"`
	Random                  int    `pulumi:"random"`
	RejectWith              string `pulumi:"rejectWith"`
	RoutingMark             string `pulumi:"routingMark"`
	RoutingTable            string `pulumi:"routingTable"`
	SrcAddress              string `pulumi:"srcAddress"`
	SrcAddressList          string `pulumi:"srcAddressList"`
	SrcAddressType          string `pulumi:"srcAddressType"`
	SrcMacAddress           string `pulumi:"srcMacAddress"`
	SrcPort                 string `pulumi:"srcPort"`
	TcpFlags                string `pulumi:"tcpFlags"`
	TcpMss                  string `pulumi:"tcpMss"`
	Time                    string `pulumi:"time"`
	TlsHost                 string `pulumi:"tlsHost"`
	Ttl                     string `pulumi:"ttl"`
}

// GetFirewallRuleInput is an input type that accepts GetFirewallRuleArgs and GetFirewallRuleOutput values.
// You can construct a concrete instance of `GetFirewallRuleInput` via:
//
//	GetFirewallRuleArgs{...}
type GetFirewallRuleInput interface {
	pulumi.Input

	ToGetFirewallRuleOutput() GetFirewallRuleOutput
	ToGetFirewallRuleOutputWithContext(context.Context) GetFirewallRuleOutput
}

type GetFirewallRuleArgs struct {
	Action             pulumi.StringInput `pulumi:"action"`
	AddressListTimeout pulumi.StringInput `pulumi:"addressListTimeout"`
	Bytes              pulumi.IntInput    `pulumi:"bytes"`
	Chain              pulumi.StringInput `pulumi:"chain"`
	Comment            pulumi.StringInput `pulumi:"comment"`
	ConnectionBytes    pulumi.StringInput `pulumi:"connectionBytes"`
	ConnectionLimit    pulumi.StringInput `pulumi:"connectionLimit"`
	ConnectionMark     pulumi.StringInput `pulumi:"connectionMark"`
	ConnectionNatState pulumi.StringInput `pulumi:"connectionNatState"`
	ConnectionRate     pulumi.StringInput `pulumi:"connectionRate"`
	ConnectionState    pulumi.StringInput `pulumi:"connectionState"`
	ConnectionType     pulumi.StringInput `pulumi:"connectionType"`
	Content            pulumi.StringInput `pulumi:"content"`
	Disabled           pulumi.BoolInput   `pulumi:"disabled"`
	Dscp               pulumi.IntInput    `pulumi:"dscp"`
	DstAddress         pulumi.StringInput `pulumi:"dstAddress"`
	DstAddressList     pulumi.StringInput `pulumi:"dstAddressList"`
	DstAddressType     pulumi.StringInput `pulumi:"dstAddressType"`
	DstLimit           pulumi.StringInput `pulumi:"dstLimit"`
	DstPort            pulumi.StringInput `pulumi:"dstPort"`
	Dynamic            pulumi.BoolInput   `pulumi:"dynamic"`
	// Additional request filtering options.
	Filter      pulumi.MapInput    `pulumi:"filter"`
	Fragment    pulumi.BoolInput   `pulumi:"fragment"`
	Hotspot     pulumi.StringInput `pulumi:"hotspot"`
	HwOffload   pulumi.BoolInput   `pulumi:"hwOffload"`
	IcmpOptions pulumi.StringInput `pulumi:"icmpOptions"`
	// The ID of this resource.
	Id                      pulumi.StringInput `pulumi:"id"`
	InBridgePort            pulumi.StringInput `pulumi:"inBridgePort"`
	InBridgePortList        pulumi.StringInput `pulumi:"inBridgePortList"`
	InInterface             pulumi.StringInput `pulumi:"inInterface"`
	InInterfaceList         pulumi.StringInput `pulumi:"inInterfaceList"`
	IngressPriority         pulumi.IntInput    `pulumi:"ingressPriority"`
	Invalid                 pulumi.BoolInput   `pulumi:"invalid"`
	IpsecPolicy             pulumi.StringInput `pulumi:"ipsecPolicy"`
	Ipv4Options             pulumi.StringInput `pulumi:"ipv4Options"`
	JumpTarget              pulumi.StringInput `pulumi:"jumpTarget"`
	Layer7Protocol          pulumi.StringInput `pulumi:"layer7Protocol"`
	Limit                   pulumi.StringInput `pulumi:"limit"`
	Log                     pulumi.BoolInput   `pulumi:"log"`
	LogPrefix               pulumi.StringInput `pulumi:"logPrefix"`
	Nth                     pulumi.StringInput `pulumi:"nth"`
	OutBridgePort           pulumi.StringInput `pulumi:"outBridgePort"`
	OutBridgePortList       pulumi.StringInput `pulumi:"outBridgePortList"`
	OutInterface            pulumi.StringInput `pulumi:"outInterface"`
	OutInterfaceList        pulumi.StringInput `pulumi:"outInterfaceList"`
	PacketMark              pulumi.StringInput `pulumi:"packetMark"`
	PacketSize              pulumi.StringInput `pulumi:"packetSize"`
	Packets                 pulumi.IntInput    `pulumi:"packets"`
	PerConnectionClassifier pulumi.StringInput `pulumi:"perConnectionClassifier"`
	Port                    pulumi.StringInput `pulumi:"port"`
	Priority                pulumi.IntInput    `pulumi:"priority"`
	Protocol                pulumi.StringInput `pulumi:"protocol"`
	Psd                     pulumi.StringInput `pulumi:"psd"`
	Random                  pulumi.IntInput    `pulumi:"random"`
	RejectWith              pulumi.StringInput `pulumi:"rejectWith"`
	RoutingMark             pulumi.StringInput `pulumi:"routingMark"`
	RoutingTable            pulumi.StringInput `pulumi:"routingTable"`
	SrcAddress              pulumi.StringInput `pulumi:"srcAddress"`
	SrcAddressList          pulumi.StringInput `pulumi:"srcAddressList"`
	SrcAddressType          pulumi.StringInput `pulumi:"srcAddressType"`
	SrcMacAddress           pulumi.StringInput `pulumi:"srcMacAddress"`
	SrcPort                 pulumi.StringInput `pulumi:"srcPort"`
	TcpFlags                pulumi.StringInput `pulumi:"tcpFlags"`
	TcpMss                  pulumi.StringInput `pulumi:"tcpMss"`
	Time                    pulumi.StringInput `pulumi:"time"`
	TlsHost                 pulumi.StringInput `pulumi:"tlsHost"`
	Ttl                     pulumi.StringInput `pulumi:"ttl"`
}

func (GetFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallRule)(nil)).Elem()
}

func (i GetFirewallRuleArgs) ToGetFirewallRuleOutput() GetFirewallRuleOutput {
	return i.ToGetFirewallRuleOutputWithContext(context.Background())
}

func (i GetFirewallRuleArgs) ToGetFirewallRuleOutputWithContext(ctx context.Context) GetFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallRuleOutput)
}

// GetFirewallRuleArrayInput is an input type that accepts GetFirewallRuleArray and GetFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetFirewallRuleArrayInput` via:
//
//	GetFirewallRuleArray{ GetFirewallRuleArgs{...} }
type GetFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetFirewallRuleArrayOutput() GetFirewallRuleArrayOutput
	ToGetFirewallRuleArrayOutputWithContext(context.Context) GetFirewallRuleArrayOutput
}

type GetFirewallRuleArray []GetFirewallRuleInput

func (GetFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallRule)(nil)).Elem()
}

func (i GetFirewallRuleArray) ToGetFirewallRuleArrayOutput() GetFirewallRuleArrayOutput {
	return i.ToGetFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetFirewallRuleArray) ToGetFirewallRuleArrayOutputWithContext(ctx context.Context) GetFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallRuleArrayOutput)
}

type GetFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallRule)(nil)).Elem()
}

func (o GetFirewallRuleOutput) ToGetFirewallRuleOutput() GetFirewallRuleOutput {
	return o
}

func (o GetFirewallRuleOutput) ToGetFirewallRuleOutputWithContext(ctx context.Context) GetFirewallRuleOutput {
	return o
}

func (o GetFirewallRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) AddressListTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.AddressListTimeout }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Bytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallRule) int { return v.Bytes }).(pulumi.IntOutput)
}

func (o GetFirewallRuleOutput) Chain() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Chain }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Comment }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) ConnectionBytes() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.ConnectionBytes }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) ConnectionLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.ConnectionLimit }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) ConnectionMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.ConnectionMark }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) ConnectionNatState() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.ConnectionNatState }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) ConnectionRate() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.ConnectionRate }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) ConnectionState() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.ConnectionState }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.ConnectionType }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Content }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallRule) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetFirewallRuleOutput) Dscp() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallRule) int { return v.Dscp }).(pulumi.IntOutput)
}

func (o GetFirewallRuleOutput) DstAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.DstAddress }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) DstAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.DstAddressList }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) DstAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.DstAddressType }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) DstLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.DstLimit }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) DstPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.DstPort }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallRule) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

// Additional request filtering options.
func (o GetFirewallRuleOutput) Filter() pulumi.MapOutput {
	return o.ApplyT(func(v GetFirewallRule) map[string]interface{} { return v.Filter }).(pulumi.MapOutput)
}

func (o GetFirewallRuleOutput) Fragment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallRule) bool { return v.Fragment }).(pulumi.BoolOutput)
}

func (o GetFirewallRuleOutput) Hotspot() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Hotspot }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) HwOffload() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallRule) bool { return v.HwOffload }).(pulumi.BoolOutput)
}

func (o GetFirewallRuleOutput) IcmpOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.IcmpOptions }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetFirewallRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) InBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.InBridgePort }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) InBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.InBridgePortList }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) InInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.InInterface }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) InInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.InInterfaceList }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) IngressPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallRule) int { return v.IngressPriority }).(pulumi.IntOutput)
}

func (o GetFirewallRuleOutput) Invalid() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallRule) bool { return v.Invalid }).(pulumi.BoolOutput)
}

func (o GetFirewallRuleOutput) IpsecPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.IpsecPolicy }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Ipv4Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Ipv4Options }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) JumpTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.JumpTarget }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Layer7Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Layer7Protocol }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Limit() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Limit }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Log() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallRule) bool { return v.Log }).(pulumi.BoolOutput)
}

func (o GetFirewallRuleOutput) LogPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.LogPrefix }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Nth() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Nth }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) OutBridgePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.OutBridgePort }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) OutBridgePortList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.OutBridgePortList }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) OutInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.OutInterface }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) OutInterfaceList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.OutInterfaceList }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) PacketMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.PacketMark }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) PacketSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.PacketSize }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Packets() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallRule) int { return v.Packets }).(pulumi.IntOutput)
}

func (o GetFirewallRuleOutput) PerConnectionClassifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.PerConnectionClassifier }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallRule) int { return v.Priority }).(pulumi.IntOutput)
}

func (o GetFirewallRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Psd() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Psd }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Random() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallRule) int { return v.Random }).(pulumi.IntOutput)
}

func (o GetFirewallRuleOutput) RejectWith() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.RejectWith }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) RoutingMark() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.RoutingMark }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) RoutingTable() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.RoutingTable }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) SrcAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.SrcAddress }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) SrcAddressList() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.SrcAddressList }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) SrcAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.SrcAddressType }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) SrcMacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.SrcMacAddress }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) SrcPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.SrcPort }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) TcpFlags() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.TcpFlags }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) TcpMss() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.TcpMss }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Time }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) TlsHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.TlsHost }).(pulumi.StringOutput)
}

func (o GetFirewallRuleOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallRule) string { return v.Ttl }).(pulumi.StringOutput)
}

type GetFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallRule)(nil)).Elem()
}

func (o GetFirewallRuleArrayOutput) ToGetFirewallRuleArrayOutput() GetFirewallRuleArrayOutput {
	return o
}

func (o GetFirewallRuleArrayOutput) ToGetFirewallRuleArrayOutputWithContext(ctx context.Context) GetFirewallRuleArrayOutput {
	return o
}

func (o GetFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallRule {
		return vs[0].([]GetFirewallRule)[vs[1].(int)]
	}).(GetFirewallRuleOutput)
}

type GetRoutesRoute struct {
	Active      bool   `pulumi:"active"`
	Blackhole   bool   `pulumi:"blackhole"`
	Connect     bool   `pulumi:"connect"`
	Dhcp        bool   `pulumi:"dhcp"`
	Disabled    bool   `pulumi:"disabled"`
	Distance    int    `pulumi:"distance"`
	DstAddress  string `pulumi:"dstAddress"`
	Dynamic     bool   `pulumi:"dynamic"`
	Ecmp        bool   `pulumi:"ecmp"`
	Gateway     string `pulumi:"gateway"`
	HwOffloaded bool   `pulumi:"hwOffloaded"`
	// The ID of this resource.
	Id                string `pulumi:"id"`
	ImmediateGw       string `pulumi:"immediateGw"`
	Inactive          bool   `pulumi:"inactive"`
	LocalAddress      string `pulumi:"localAddress"`
	PrefSrc           string `pulumi:"prefSrc"`
	RoutingTable      string `pulumi:"routingTable"`
	Scope             int    `pulumi:"scope"`
	Static            bool   `pulumi:"static"`
	SuppressHwOffload bool   `pulumi:"suppressHwOffload"`
	TargetScope       int    `pulumi:"targetScope"`
	VrfInterface      string `pulumi:"vrfInterface"`
}

// GetRoutesRouteInput is an input type that accepts GetRoutesRouteArgs and GetRoutesRouteOutput values.
// You can construct a concrete instance of `GetRoutesRouteInput` via:
//
//	GetRoutesRouteArgs{...}
type GetRoutesRouteInput interface {
	pulumi.Input

	ToGetRoutesRouteOutput() GetRoutesRouteOutput
	ToGetRoutesRouteOutputWithContext(context.Context) GetRoutesRouteOutput
}

type GetRoutesRouteArgs struct {
	Active      pulumi.BoolInput   `pulumi:"active"`
	Blackhole   pulumi.BoolInput   `pulumi:"blackhole"`
	Connect     pulumi.BoolInput   `pulumi:"connect"`
	Dhcp        pulumi.BoolInput   `pulumi:"dhcp"`
	Disabled    pulumi.BoolInput   `pulumi:"disabled"`
	Distance    pulumi.IntInput    `pulumi:"distance"`
	DstAddress  pulumi.StringInput `pulumi:"dstAddress"`
	Dynamic     pulumi.BoolInput   `pulumi:"dynamic"`
	Ecmp        pulumi.BoolInput   `pulumi:"ecmp"`
	Gateway     pulumi.StringInput `pulumi:"gateway"`
	HwOffloaded pulumi.BoolInput   `pulumi:"hwOffloaded"`
	// The ID of this resource.
	Id                pulumi.StringInput `pulumi:"id"`
	ImmediateGw       pulumi.StringInput `pulumi:"immediateGw"`
	Inactive          pulumi.BoolInput   `pulumi:"inactive"`
	LocalAddress      pulumi.StringInput `pulumi:"localAddress"`
	PrefSrc           pulumi.StringInput `pulumi:"prefSrc"`
	RoutingTable      pulumi.StringInput `pulumi:"routingTable"`
	Scope             pulumi.IntInput    `pulumi:"scope"`
	Static            pulumi.BoolInput   `pulumi:"static"`
	SuppressHwOffload pulumi.BoolInput   `pulumi:"suppressHwOffload"`
	TargetScope       pulumi.IntInput    `pulumi:"targetScope"`
	VrfInterface      pulumi.StringInput `pulumi:"vrfInterface"`
}

func (GetRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesRoute)(nil)).Elem()
}

func (i GetRoutesRouteArgs) ToGetRoutesRouteOutput() GetRoutesRouteOutput {
	return i.ToGetRoutesRouteOutputWithContext(context.Background())
}

func (i GetRoutesRouteArgs) ToGetRoutesRouteOutputWithContext(ctx context.Context) GetRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutesRouteOutput)
}

// GetRoutesRouteArrayInput is an input type that accepts GetRoutesRouteArray and GetRoutesRouteArrayOutput values.
// You can construct a concrete instance of `GetRoutesRouteArrayInput` via:
//
//	GetRoutesRouteArray{ GetRoutesRouteArgs{...} }
type GetRoutesRouteArrayInput interface {
	pulumi.Input

	ToGetRoutesRouteArrayOutput() GetRoutesRouteArrayOutput
	ToGetRoutesRouteArrayOutputWithContext(context.Context) GetRoutesRouteArrayOutput
}

type GetRoutesRouteArray []GetRoutesRouteInput

func (GetRoutesRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutesRoute)(nil)).Elem()
}

func (i GetRoutesRouteArray) ToGetRoutesRouteArrayOutput() GetRoutesRouteArrayOutput {
	return i.ToGetRoutesRouteArrayOutputWithContext(context.Background())
}

func (i GetRoutesRouteArray) ToGetRoutesRouteArrayOutputWithContext(ctx context.Context) GetRoutesRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutesRouteArrayOutput)
}

type GetRoutesRouteOutput struct{ *pulumi.OutputState }

func (GetRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesRoute)(nil)).Elem()
}

func (o GetRoutesRouteOutput) ToGetRoutesRouteOutput() GetRoutesRouteOutput {
	return o
}

func (o GetRoutesRouteOutput) ToGetRoutesRouteOutputWithContext(ctx context.Context) GetRoutesRouteOutput {
	return o
}

func (o GetRoutesRouteOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.Active }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) Blackhole() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.Blackhole }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) Connect() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.Connect }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutesRoute) int { return v.Distance }).(pulumi.IntOutput)
}

func (o GetRoutesRouteOutput) DstAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.DstAddress }).(pulumi.StringOutput)
}

func (o GetRoutesRouteOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.Dynamic }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) Ecmp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.Ecmp }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o GetRoutesRouteOutput) HwOffloaded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.HwOffloaded }).(pulumi.BoolOutput)
}

// The ID of this resource.
func (o GetRoutesRouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRoutesRouteOutput) ImmediateGw() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.ImmediateGw }).(pulumi.StringOutput)
}

func (o GetRoutesRouteOutput) Inactive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.Inactive }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.LocalAddress }).(pulumi.StringOutput)
}

func (o GetRoutesRouteOutput) PrefSrc() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.PrefSrc }).(pulumi.StringOutput)
}

func (o GetRoutesRouteOutput) RoutingTable() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.RoutingTable }).(pulumi.StringOutput)
}

func (o GetRoutesRouteOutput) Scope() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutesRoute) int { return v.Scope }).(pulumi.IntOutput)
}

func (o GetRoutesRouteOutput) Static() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.Static }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) SuppressHwOffload() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRoutesRoute) bool { return v.SuppressHwOffload }).(pulumi.BoolOutput)
}

func (o GetRoutesRouteOutput) TargetScope() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutesRoute) int { return v.TargetScope }).(pulumi.IntOutput)
}

func (o GetRoutesRouteOutput) VrfInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.VrfInterface }).(pulumi.StringOutput)
}

type GetRoutesRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRoutesRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutesRoute)(nil)).Elem()
}

func (o GetRoutesRouteArrayOutput) ToGetRoutesRouteArrayOutput() GetRoutesRouteArrayOutput {
	return o
}

func (o GetRoutesRouteArrayOutput) ToGetRoutesRouteArrayOutputWithContext(ctx context.Context) GetRoutesRouteArrayOutput {
	return o
}

func (o GetRoutesRouteArrayOutput) Index(i pulumi.IntInput) GetRoutesRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutesRoute {
		return vs[0].([]GetRoutesRoute)[vs[1].(int)]
	}).(GetRoutesRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressesAddressInput)(nil)).Elem(), GetAddressesAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressesAddressArrayInput)(nil)).Elem(), GetAddressesAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressListInput)(nil)).Elem(), GetFirewallAddressListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallAddressListArrayInput)(nil)).Elem(), GetFirewallAddressListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMangleTypeInput)(nil)).Elem(), GetFirewallMangleTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallMangleTypeArrayInput)(nil)).Elem(), GetFirewallMangleTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallNatTypeInput)(nil)).Elem(), GetFirewallNatTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallNatTypeArrayInput)(nil)).Elem(), GetFirewallNatTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallRuleInput)(nil)).Elem(), GetFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallRuleArrayInput)(nil)).Elem(), GetFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutesRouteInput)(nil)).Elem(), GetRoutesRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutesRouteArrayInput)(nil)).Elem(), GetRoutesRouteArray{})
	pulumi.RegisterOutputType(GetAddressesAddressOutput{})
	pulumi.RegisterOutputType(GetAddressesAddressArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressListOutput{})
	pulumi.RegisterOutputType(GetFirewallAddressListArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallMangleTypeOutput{})
	pulumi.RegisterOutputType(GetFirewallMangleTypeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallNatTypeOutput{})
	pulumi.RegisterOutputType(GetFirewallNatTypeArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRoutesRouteOutput{})
	pulumi.RegisterOutputType(GetRoutesRouteArrayOutput{})
}
