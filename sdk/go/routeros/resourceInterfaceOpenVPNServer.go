// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourceInterfaceOpenVPNServer(ctx, "user1", &routeros.ResourceInterfaceOpenVPNServerArgs{
//				User: pulumi.String("user1"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				routeros_ovpn_server.Server,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #The ID can be found via API or the terminal #The command for the terminal is -> :put [/interface/ovpn-server get [print show-ids]]
//
// ```sh
//
//	$ pulumi import routeros:index/resourceInterfaceOpenVPNServer:ResourceInterfaceOpenVPNServer user1 *29
//
// ```
type ResourceInterfaceOpenVPNServer struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// The address of the remote side.
	ClientAddress pulumi.StringOutput    `pulumi:"clientAddress"`
	Comment       pulumi.StringPtrOutput `pulumi:"comment"`
	Disabled      pulumi.BoolPtrOutput   `pulumi:"disabled"`
	// Encryption characteristics.
	Encoding pulumi.StringOutput `pulumi:"encoding"`
	// Layer2 Maximum transmission unit.
	Mtu pulumi.IntOutput `pulumi:"mtu"`
	// Interface name (Example: ovpn-in1).
	Name    pulumi.StringOutput `pulumi:"name"`
	Running pulumi.BoolOutput   `pulumi:"running"`
	// Connection uptime.
	Uptime pulumi.StringOutput `pulumi:"uptime"`
	// User name used for authentication.
	User pulumi.StringPtrOutput `pulumi:"user"`
}

// NewResourceInterfaceOpenVPNServer registers a new resource with the given unique name, arguments, and options.
func NewResourceInterfaceOpenVPNServer(ctx *pulumi.Context,
	name string, args *ResourceInterfaceOpenVPNServerArgs, opts ...pulumi.ResourceOption) (*ResourceInterfaceOpenVPNServer, error) {
	if args == nil {
		args = &ResourceInterfaceOpenVPNServerArgs{}
	}

	var resource ResourceInterfaceOpenVPNServer
	err := ctx.RegisterResource("routeros:index/resourceInterfaceOpenVPNServer:ResourceInterfaceOpenVPNServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceInterfaceOpenVPNServer gets an existing ResourceInterfaceOpenVPNServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceInterfaceOpenVPNServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceInterfaceOpenVPNServerState, opts ...pulumi.ResourceOption) (*ResourceInterfaceOpenVPNServer, error) {
	var resource ResourceInterfaceOpenVPNServer
	err := ctx.ReadResource("routeros:index/resourceInterfaceOpenVPNServer:ResourceInterfaceOpenVPNServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceInterfaceOpenVPNServer resources.
type resourceInterfaceOpenVPNServerState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// The address of the remote side.
	ClientAddress *string `pulumi:"clientAddress"`
	Comment       *string `pulumi:"comment"`
	Disabled      *bool   `pulumi:"disabled"`
	// Encryption characteristics.
	Encoding *string `pulumi:"encoding"`
	// Layer2 Maximum transmission unit.
	Mtu *int `pulumi:"mtu"`
	// Interface name (Example: ovpn-in1).
	Name    *string `pulumi:"name"`
	Running *bool   `pulumi:"running"`
	// Connection uptime.
	Uptime *string `pulumi:"uptime"`
	// User name used for authentication.
	User *string `pulumi:"user"`
}

type ResourceInterfaceOpenVPNServerState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// The address of the remote side.
	ClientAddress pulumi.StringPtrInput
	Comment       pulumi.StringPtrInput
	Disabled      pulumi.BoolPtrInput
	// Encryption characteristics.
	Encoding pulumi.StringPtrInput
	// Layer2 Maximum transmission unit.
	Mtu pulumi.IntPtrInput
	// Interface name (Example: ovpn-in1).
	Name    pulumi.StringPtrInput
	Running pulumi.BoolPtrInput
	// Connection uptime.
	Uptime pulumi.StringPtrInput
	// User name used for authentication.
	User pulumi.StringPtrInput
}

func (ResourceInterfaceOpenVPNServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceInterfaceOpenVPNServerState)(nil)).Elem()
}

type resourceInterfaceOpenVPNServerArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	Comment  *string `pulumi:"comment"`
	Disabled *bool   `pulumi:"disabled"`
	// Interface name (Example: ovpn-in1).
	Name *string `pulumi:"name"`
	// User name used for authentication.
	User *string `pulumi:"user"`
}

// The set of arguments for constructing a ResourceInterfaceOpenVPNServer resource.
type ResourceInterfaceOpenVPNServerArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	Comment  pulumi.StringPtrInput
	Disabled pulumi.BoolPtrInput
	// Interface name (Example: ovpn-in1).
	Name pulumi.StringPtrInput
	// User name used for authentication.
	User pulumi.StringPtrInput
}

func (ResourceInterfaceOpenVPNServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceInterfaceOpenVPNServerArgs)(nil)).Elem()
}

type ResourceInterfaceOpenVPNServerInput interface {
	pulumi.Input

	ToResourceInterfaceOpenVPNServerOutput() ResourceInterfaceOpenVPNServerOutput
	ToResourceInterfaceOpenVPNServerOutputWithContext(ctx context.Context) ResourceInterfaceOpenVPNServerOutput
}

func (*ResourceInterfaceOpenVPNServer) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceInterfaceOpenVPNServer)(nil)).Elem()
}

func (i *ResourceInterfaceOpenVPNServer) ToResourceInterfaceOpenVPNServerOutput() ResourceInterfaceOpenVPNServerOutput {
	return i.ToResourceInterfaceOpenVPNServerOutputWithContext(context.Background())
}

func (i *ResourceInterfaceOpenVPNServer) ToResourceInterfaceOpenVPNServerOutputWithContext(ctx context.Context) ResourceInterfaceOpenVPNServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceInterfaceOpenVPNServerOutput)
}

// ResourceInterfaceOpenVPNServerArrayInput is an input type that accepts ResourceInterfaceOpenVPNServerArray and ResourceInterfaceOpenVPNServerArrayOutput values.
// You can construct a concrete instance of `ResourceInterfaceOpenVPNServerArrayInput` via:
//
//	ResourceInterfaceOpenVPNServerArray{ ResourceInterfaceOpenVPNServerArgs{...} }
type ResourceInterfaceOpenVPNServerArrayInput interface {
	pulumi.Input

	ToResourceInterfaceOpenVPNServerArrayOutput() ResourceInterfaceOpenVPNServerArrayOutput
	ToResourceInterfaceOpenVPNServerArrayOutputWithContext(context.Context) ResourceInterfaceOpenVPNServerArrayOutput
}

type ResourceInterfaceOpenVPNServerArray []ResourceInterfaceOpenVPNServerInput

func (ResourceInterfaceOpenVPNServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceInterfaceOpenVPNServer)(nil)).Elem()
}

func (i ResourceInterfaceOpenVPNServerArray) ToResourceInterfaceOpenVPNServerArrayOutput() ResourceInterfaceOpenVPNServerArrayOutput {
	return i.ToResourceInterfaceOpenVPNServerArrayOutputWithContext(context.Background())
}

func (i ResourceInterfaceOpenVPNServerArray) ToResourceInterfaceOpenVPNServerArrayOutputWithContext(ctx context.Context) ResourceInterfaceOpenVPNServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceInterfaceOpenVPNServerArrayOutput)
}

// ResourceInterfaceOpenVPNServerMapInput is an input type that accepts ResourceInterfaceOpenVPNServerMap and ResourceInterfaceOpenVPNServerMapOutput values.
// You can construct a concrete instance of `ResourceInterfaceOpenVPNServerMapInput` via:
//
//	ResourceInterfaceOpenVPNServerMap{ "key": ResourceInterfaceOpenVPNServerArgs{...} }
type ResourceInterfaceOpenVPNServerMapInput interface {
	pulumi.Input

	ToResourceInterfaceOpenVPNServerMapOutput() ResourceInterfaceOpenVPNServerMapOutput
	ToResourceInterfaceOpenVPNServerMapOutputWithContext(context.Context) ResourceInterfaceOpenVPNServerMapOutput
}

type ResourceInterfaceOpenVPNServerMap map[string]ResourceInterfaceOpenVPNServerInput

func (ResourceInterfaceOpenVPNServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceInterfaceOpenVPNServer)(nil)).Elem()
}

func (i ResourceInterfaceOpenVPNServerMap) ToResourceInterfaceOpenVPNServerMapOutput() ResourceInterfaceOpenVPNServerMapOutput {
	return i.ToResourceInterfaceOpenVPNServerMapOutputWithContext(context.Background())
}

func (i ResourceInterfaceOpenVPNServerMap) ToResourceInterfaceOpenVPNServerMapOutputWithContext(ctx context.Context) ResourceInterfaceOpenVPNServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceInterfaceOpenVPNServerMapOutput)
}

type ResourceInterfaceOpenVPNServerOutput struct{ *pulumi.OutputState }

func (ResourceInterfaceOpenVPNServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceInterfaceOpenVPNServer)(nil)).Elem()
}

func (o ResourceInterfaceOpenVPNServerOutput) ToResourceInterfaceOpenVPNServerOutput() ResourceInterfaceOpenVPNServerOutput {
	return o
}

func (o ResourceInterfaceOpenVPNServerOutput) ToResourceInterfaceOpenVPNServerOutputWithContext(ctx context.Context) ResourceInterfaceOpenVPNServerOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceInterfaceOpenVPNServerOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceInterfaceOpenVPNServerOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// The address of the remote side.
func (o ResourceInterfaceOpenVPNServerOutput) ClientAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.StringOutput { return v.ClientAddress }).(pulumi.StringOutput)
}

func (o ResourceInterfaceOpenVPNServerOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ResourceInterfaceOpenVPNServerOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Encryption characteristics.
func (o ResourceInterfaceOpenVPNServerOutput) Encoding() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.StringOutput { return v.Encoding }).(pulumi.StringOutput)
}

// Layer2 Maximum transmission unit.
func (o ResourceInterfaceOpenVPNServerOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.IntOutput { return v.Mtu }).(pulumi.IntOutput)
}

// Interface name (Example: ovpn-in1).
func (o ResourceInterfaceOpenVPNServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ResourceInterfaceOpenVPNServerOutput) Running() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.BoolOutput { return v.Running }).(pulumi.BoolOutput)
}

// Connection uptime.
func (o ResourceInterfaceOpenVPNServerOutput) Uptime() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.StringOutput { return v.Uptime }).(pulumi.StringOutput)
}

// User name used for authentication.
func (o ResourceInterfaceOpenVPNServerOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceInterfaceOpenVPNServer) pulumi.StringPtrOutput { return v.User }).(pulumi.StringPtrOutput)
}

type ResourceInterfaceOpenVPNServerArrayOutput struct{ *pulumi.OutputState }

func (ResourceInterfaceOpenVPNServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceInterfaceOpenVPNServer)(nil)).Elem()
}

func (o ResourceInterfaceOpenVPNServerArrayOutput) ToResourceInterfaceOpenVPNServerArrayOutput() ResourceInterfaceOpenVPNServerArrayOutput {
	return o
}

func (o ResourceInterfaceOpenVPNServerArrayOutput) ToResourceInterfaceOpenVPNServerArrayOutputWithContext(ctx context.Context) ResourceInterfaceOpenVPNServerArrayOutput {
	return o
}

func (o ResourceInterfaceOpenVPNServerArrayOutput) Index(i pulumi.IntInput) ResourceInterfaceOpenVPNServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceInterfaceOpenVPNServer {
		return vs[0].([]*ResourceInterfaceOpenVPNServer)[vs[1].(int)]
	}).(ResourceInterfaceOpenVPNServerOutput)
}

type ResourceInterfaceOpenVPNServerMapOutput struct{ *pulumi.OutputState }

func (ResourceInterfaceOpenVPNServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceInterfaceOpenVPNServer)(nil)).Elem()
}

func (o ResourceInterfaceOpenVPNServerMapOutput) ToResourceInterfaceOpenVPNServerMapOutput() ResourceInterfaceOpenVPNServerMapOutput {
	return o
}

func (o ResourceInterfaceOpenVPNServerMapOutput) ToResourceInterfaceOpenVPNServerMapOutputWithContext(ctx context.Context) ResourceInterfaceOpenVPNServerMapOutput {
	return o
}

func (o ResourceInterfaceOpenVPNServerMapOutput) MapIndex(k pulumi.StringInput) ResourceInterfaceOpenVPNServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceInterfaceOpenVPNServer {
		return vs[0].(map[string]*ResourceInterfaceOpenVPNServer)[vs[1].(string)]
	}).(ResourceInterfaceOpenVPNServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInterfaceOpenVPNServerInput)(nil)).Elem(), &ResourceInterfaceOpenVPNServer{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInterfaceOpenVPNServerArrayInput)(nil)).Elem(), ResourceInterfaceOpenVPNServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInterfaceOpenVPNServerMapInput)(nil)).Elem(), ResourceInterfaceOpenVPNServerMap{})
	pulumi.RegisterOutputType(ResourceInterfaceOpenVPNServerOutput{})
	pulumi.RegisterOutputType(ResourceInterfaceOpenVPNServerArrayOutput{})
	pulumi.RegisterOutputType(ResourceInterfaceOpenVPNServerMapOutput{})
}
