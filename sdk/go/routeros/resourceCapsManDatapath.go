// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourceCapsManDatapath(ctx, "testDatapath", &routeros.ResourceCapsManDatapathArgs{
//				Arp:                      pulumi.String("local-proxy-arp"),
//				Bridge:                   pulumi.String("bridge"),
//				BridgeCost:               pulumi.Int(100),
//				BridgeHorizon:            pulumi.Int(200),
//				ClientToClientForwarding: pulumi.Bool(true),
//				Comment:                  pulumi.String("test_datapath"),
//				InterfaceList:            pulumi.String("static"),
//				L2mtu:                    pulumi.Int(1450),
//				LocalForwarding:          pulumi.Bool(true),
//				Mtu:                      pulumi.Int(1500),
//				VlanId:                   pulumi.Int(101),
//				VlanMode:                 pulumi.String("no-tag"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Import with the name of the CAPsMAN datapath configuration in case of the example use test-datapath-config
//
// ```sh
//
//	$ pulumi import routeros:index/resourceCapsManDatapath:ResourceCapsManDatapath test_datapath test-datapath-config
//
// ```
type ResourceCapsManDatapath struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// ARP mode. See [docs](https://wiki.mikrotik.com/wiki/Manual:IP/ARP#ARP_Modes) for info.
	Arp pulumi.StringPtrOutput `pulumi:"arp"`
	// Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
	Bridge pulumi.StringPtrOutput `pulumi:"bridge"`
	// Bridge port cost to use when adding as bridge port.
	BridgeCost pulumi.IntPtrOutput `pulumi:"bridgeCost"`
	// Bridge horizon to use when adding as bridge port.
	BridgeHorizon pulumi.IntPtrOutput `pulumi:"bridgeHorizon"`
	// Controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN.
	ClientToClientForwarding pulumi.BoolPtrOutput   `pulumi:"clientToClientForwarding"`
	Comment                  pulumi.StringPtrOutput `pulumi:"comment"`
	// Interface list name.
	InterfaceList pulumi.StringPtrOutput `pulumi:"interfaceList"`
	// Layer2 MTU size.
	L2mtu pulumi.IntPtrOutput `pulumi:"l2mtu"`
	// Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then. See [docs](https://wiki.mikrotik.com/wiki/Manual:CAPsMAN#Local_Forwarding_Mode) for info.
	LocalForwarding pulumi.BoolPtrOutput `pulumi:"localForwarding"`
	// MTU size.
	Mtu pulumi.IntPtrOutput `pulumi:"mtu"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringOutput `pulumi:"name"`
	// OpenFlow switch to add interface to, as port when enabled.
	OpenflowSwitch pulumi.StringPtrOutput `pulumi:"openflowSwitch"`
	// VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging.
	VlanId pulumi.IntPtrOutput `pulumi:"vlanId"`
	// VLAN tagging mode specifies if VLAN tag should be assigned to interface (causes all received data to get tagged with VLAN tag and allows interface to only send out data tagged with given tag)
	VlanMode pulumi.StringPtrOutput `pulumi:"vlanMode"`
}

// NewResourceCapsManDatapath registers a new resource with the given unique name, arguments, and options.
func NewResourceCapsManDatapath(ctx *pulumi.Context,
	name string, args *ResourceCapsManDatapathArgs, opts ...pulumi.ResourceOption) (*ResourceCapsManDatapath, error) {
	if args == nil {
		args = &ResourceCapsManDatapathArgs{}
	}

	var resource ResourceCapsManDatapath
	err := ctx.RegisterResource("routeros:index/resourceCapsManDatapath:ResourceCapsManDatapath", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceCapsManDatapath gets an existing ResourceCapsManDatapath resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceCapsManDatapath(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceCapsManDatapathState, opts ...pulumi.ResourceOption) (*ResourceCapsManDatapath, error) {
	var resource ResourceCapsManDatapath
	err := ctx.ReadResource("routeros:index/resourceCapsManDatapath:ResourceCapsManDatapath", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceCapsManDatapath resources.
type resourceCapsManDatapathState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// ARP mode. See [docs](https://wiki.mikrotik.com/wiki/Manual:IP/ARP#ARP_Modes) for info.
	Arp *string `pulumi:"arp"`
	// Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
	Bridge *string `pulumi:"bridge"`
	// Bridge port cost to use when adding as bridge port.
	BridgeCost *int `pulumi:"bridgeCost"`
	// Bridge horizon to use when adding as bridge port.
	BridgeHorizon *int `pulumi:"bridgeHorizon"`
	// Controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN.
	ClientToClientForwarding *bool   `pulumi:"clientToClientForwarding"`
	Comment                  *string `pulumi:"comment"`
	// Interface list name.
	InterfaceList *string `pulumi:"interfaceList"`
	// Layer2 MTU size.
	L2mtu *int `pulumi:"l2mtu"`
	// Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then. See [docs](https://wiki.mikrotik.com/wiki/Manual:CAPsMAN#Local_Forwarding_Mode) for info.
	LocalForwarding *bool `pulumi:"localForwarding"`
	// MTU size.
	Mtu *int `pulumi:"mtu"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name *string `pulumi:"name"`
	// OpenFlow switch to add interface to, as port when enabled.
	OpenflowSwitch *string `pulumi:"openflowSwitch"`
	// VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging.
	VlanId *int `pulumi:"vlanId"`
	// VLAN tagging mode specifies if VLAN tag should be assigned to interface (causes all received data to get tagged with VLAN tag and allows interface to only send out data tagged with given tag)
	VlanMode *string `pulumi:"vlanMode"`
}

type ResourceCapsManDatapathState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// ARP mode. See [docs](https://wiki.mikrotik.com/wiki/Manual:IP/ARP#ARP_Modes) for info.
	Arp pulumi.StringPtrInput
	// Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
	Bridge pulumi.StringPtrInput
	// Bridge port cost to use when adding as bridge port.
	BridgeCost pulumi.IntPtrInput
	// Bridge horizon to use when adding as bridge port.
	BridgeHorizon pulumi.IntPtrInput
	// Controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN.
	ClientToClientForwarding pulumi.BoolPtrInput
	Comment                  pulumi.StringPtrInput
	// Interface list name.
	InterfaceList pulumi.StringPtrInput
	// Layer2 MTU size.
	L2mtu pulumi.IntPtrInput
	// Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then. See [docs](https://wiki.mikrotik.com/wiki/Manual:CAPsMAN#Local_Forwarding_Mode) for info.
	LocalForwarding pulumi.BoolPtrInput
	// MTU size.
	Mtu pulumi.IntPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringPtrInput
	// OpenFlow switch to add interface to, as port when enabled.
	OpenflowSwitch pulumi.StringPtrInput
	// VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging.
	VlanId pulumi.IntPtrInput
	// VLAN tagging mode specifies if VLAN tag should be assigned to interface (causes all received data to get tagged with VLAN tag and allows interface to only send out data tagged with given tag)
	VlanMode pulumi.StringPtrInput
}

func (ResourceCapsManDatapathState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceCapsManDatapathState)(nil)).Elem()
}

type resourceCapsManDatapathArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// ARP mode. See [docs](https://wiki.mikrotik.com/wiki/Manual:IP/ARP#ARP_Modes) for info.
	Arp *string `pulumi:"arp"`
	// Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
	Bridge *string `pulumi:"bridge"`
	// Bridge port cost to use when adding as bridge port.
	BridgeCost *int `pulumi:"bridgeCost"`
	// Bridge horizon to use when adding as bridge port.
	BridgeHorizon *int `pulumi:"bridgeHorizon"`
	// Controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN.
	ClientToClientForwarding *bool   `pulumi:"clientToClientForwarding"`
	Comment                  *string `pulumi:"comment"`
	// Interface list name.
	InterfaceList *string `pulumi:"interfaceList"`
	// Layer2 MTU size.
	L2mtu *int `pulumi:"l2mtu"`
	// Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then. See [docs](https://wiki.mikrotik.com/wiki/Manual:CAPsMAN#Local_Forwarding_Mode) for info.
	LocalForwarding *bool `pulumi:"localForwarding"`
	// MTU size.
	Mtu *int `pulumi:"mtu"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name *string `pulumi:"name"`
	// OpenFlow switch to add interface to, as port when enabled.
	OpenflowSwitch *string `pulumi:"openflowSwitch"`
	// VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging.
	VlanId *int `pulumi:"vlanId"`
	// VLAN tagging mode specifies if VLAN tag should be assigned to interface (causes all received data to get tagged with VLAN tag and allows interface to only send out data tagged with given tag)
	VlanMode *string `pulumi:"vlanMode"`
}

// The set of arguments for constructing a ResourceCapsManDatapath resource.
type ResourceCapsManDatapathArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// ARP mode. See [docs](https://wiki.mikrotik.com/wiki/Manual:IP/ARP#ARP_Modes) for info.
	Arp pulumi.StringPtrInput
	// Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
	Bridge pulumi.StringPtrInput
	// Bridge port cost to use when adding as bridge port.
	BridgeCost pulumi.IntPtrInput
	// Bridge horizon to use when adding as bridge port.
	BridgeHorizon pulumi.IntPtrInput
	// Controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN.
	ClientToClientForwarding pulumi.BoolPtrInput
	Comment                  pulumi.StringPtrInput
	// Interface list name.
	InterfaceList pulumi.StringPtrInput
	// Layer2 MTU size.
	L2mtu pulumi.IntPtrInput
	// Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then. See [docs](https://wiki.mikrotik.com/wiki/Manual:CAPsMAN#Local_Forwarding_Mode) for info.
	LocalForwarding pulumi.BoolPtrInput
	// MTU size.
	Mtu pulumi.IntPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringPtrInput
	// OpenFlow switch to add interface to, as port when enabled.
	OpenflowSwitch pulumi.StringPtrInput
	// VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging.
	VlanId pulumi.IntPtrInput
	// VLAN tagging mode specifies if VLAN tag should be assigned to interface (causes all received data to get tagged with VLAN tag and allows interface to only send out data tagged with given tag)
	VlanMode pulumi.StringPtrInput
}

func (ResourceCapsManDatapathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceCapsManDatapathArgs)(nil)).Elem()
}

type ResourceCapsManDatapathInput interface {
	pulumi.Input

	ToResourceCapsManDatapathOutput() ResourceCapsManDatapathOutput
	ToResourceCapsManDatapathOutputWithContext(ctx context.Context) ResourceCapsManDatapathOutput
}

func (*ResourceCapsManDatapath) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCapsManDatapath)(nil)).Elem()
}

func (i *ResourceCapsManDatapath) ToResourceCapsManDatapathOutput() ResourceCapsManDatapathOutput {
	return i.ToResourceCapsManDatapathOutputWithContext(context.Background())
}

func (i *ResourceCapsManDatapath) ToResourceCapsManDatapathOutputWithContext(ctx context.Context) ResourceCapsManDatapathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManDatapathOutput)
}

// ResourceCapsManDatapathArrayInput is an input type that accepts ResourceCapsManDatapathArray and ResourceCapsManDatapathArrayOutput values.
// You can construct a concrete instance of `ResourceCapsManDatapathArrayInput` via:
//
//	ResourceCapsManDatapathArray{ ResourceCapsManDatapathArgs{...} }
type ResourceCapsManDatapathArrayInput interface {
	pulumi.Input

	ToResourceCapsManDatapathArrayOutput() ResourceCapsManDatapathArrayOutput
	ToResourceCapsManDatapathArrayOutputWithContext(context.Context) ResourceCapsManDatapathArrayOutput
}

type ResourceCapsManDatapathArray []ResourceCapsManDatapathInput

func (ResourceCapsManDatapathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceCapsManDatapath)(nil)).Elem()
}

func (i ResourceCapsManDatapathArray) ToResourceCapsManDatapathArrayOutput() ResourceCapsManDatapathArrayOutput {
	return i.ToResourceCapsManDatapathArrayOutputWithContext(context.Background())
}

func (i ResourceCapsManDatapathArray) ToResourceCapsManDatapathArrayOutputWithContext(ctx context.Context) ResourceCapsManDatapathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManDatapathArrayOutput)
}

// ResourceCapsManDatapathMapInput is an input type that accepts ResourceCapsManDatapathMap and ResourceCapsManDatapathMapOutput values.
// You can construct a concrete instance of `ResourceCapsManDatapathMapInput` via:
//
//	ResourceCapsManDatapathMap{ "key": ResourceCapsManDatapathArgs{...} }
type ResourceCapsManDatapathMapInput interface {
	pulumi.Input

	ToResourceCapsManDatapathMapOutput() ResourceCapsManDatapathMapOutput
	ToResourceCapsManDatapathMapOutputWithContext(context.Context) ResourceCapsManDatapathMapOutput
}

type ResourceCapsManDatapathMap map[string]ResourceCapsManDatapathInput

func (ResourceCapsManDatapathMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceCapsManDatapath)(nil)).Elem()
}

func (i ResourceCapsManDatapathMap) ToResourceCapsManDatapathMapOutput() ResourceCapsManDatapathMapOutput {
	return i.ToResourceCapsManDatapathMapOutputWithContext(context.Background())
}

func (i ResourceCapsManDatapathMap) ToResourceCapsManDatapathMapOutputWithContext(ctx context.Context) ResourceCapsManDatapathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManDatapathMapOutput)
}

type ResourceCapsManDatapathOutput struct{ *pulumi.OutputState }

func (ResourceCapsManDatapathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCapsManDatapath)(nil)).Elem()
}

func (o ResourceCapsManDatapathOutput) ToResourceCapsManDatapathOutput() ResourceCapsManDatapathOutput {
	return o
}

func (o ResourceCapsManDatapathOutput) ToResourceCapsManDatapathOutputWithContext(ctx context.Context) ResourceCapsManDatapathOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceCapsManDatapathOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceCapsManDatapathOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// ARP mode. See [docs](https://wiki.mikrotik.com/wiki/Manual:IP/ARP#ARP_Modes) for info.
func (o ResourceCapsManDatapathOutput) Arp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.StringPtrOutput { return v.Arp }).(pulumi.StringPtrOutput)
}

// Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
func (o ResourceCapsManDatapathOutput) Bridge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.StringPtrOutput { return v.Bridge }).(pulumi.StringPtrOutput)
}

// Bridge port cost to use when adding as bridge port.
func (o ResourceCapsManDatapathOutput) BridgeCost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.IntPtrOutput { return v.BridgeCost }).(pulumi.IntPtrOutput)
}

// Bridge horizon to use when adding as bridge port.
func (o ResourceCapsManDatapathOutput) BridgeHorizon() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.IntPtrOutput { return v.BridgeHorizon }).(pulumi.IntPtrOutput)
}

// Controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN.
func (o ResourceCapsManDatapathOutput) ClientToClientForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.BoolPtrOutput { return v.ClientToClientForwarding }).(pulumi.BoolPtrOutput)
}

func (o ResourceCapsManDatapathOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Interface list name.
func (o ResourceCapsManDatapathOutput) InterfaceList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.StringPtrOutput { return v.InterfaceList }).(pulumi.StringPtrOutput)
}

// Layer2 MTU size.
func (o ResourceCapsManDatapathOutput) L2mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.IntPtrOutput { return v.L2mtu }).(pulumi.IntPtrOutput)
}

// Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then. See [docs](https://wiki.mikrotik.com/wiki/Manual:CAPsMAN#Local_Forwarding_Mode) for info.
func (o ResourceCapsManDatapathOutput) LocalForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.BoolPtrOutput { return v.LocalForwarding }).(pulumi.BoolPtrOutput)
}

// MTU size.
func (o ResourceCapsManDatapathOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.IntPtrOutput { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
// integrity for that resource!
func (o ResourceCapsManDatapathOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// OpenFlow switch to add interface to, as port when enabled.
func (o ResourceCapsManDatapathOutput) OpenflowSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.StringPtrOutput { return v.OpenflowSwitch }).(pulumi.StringPtrOutput)
}

// VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging.
func (o ResourceCapsManDatapathOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.IntPtrOutput { return v.VlanId }).(pulumi.IntPtrOutput)
}

// VLAN tagging mode specifies if VLAN tag should be assigned to interface (causes all received data to get tagged with VLAN tag and allows interface to only send out data tagged with given tag)
func (o ResourceCapsManDatapathOutput) VlanMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManDatapath) pulumi.StringPtrOutput { return v.VlanMode }).(pulumi.StringPtrOutput)
}

type ResourceCapsManDatapathArrayOutput struct{ *pulumi.OutputState }

func (ResourceCapsManDatapathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceCapsManDatapath)(nil)).Elem()
}

func (o ResourceCapsManDatapathArrayOutput) ToResourceCapsManDatapathArrayOutput() ResourceCapsManDatapathArrayOutput {
	return o
}

func (o ResourceCapsManDatapathArrayOutput) ToResourceCapsManDatapathArrayOutputWithContext(ctx context.Context) ResourceCapsManDatapathArrayOutput {
	return o
}

func (o ResourceCapsManDatapathArrayOutput) Index(i pulumi.IntInput) ResourceCapsManDatapathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceCapsManDatapath {
		return vs[0].([]*ResourceCapsManDatapath)[vs[1].(int)]
	}).(ResourceCapsManDatapathOutput)
}

type ResourceCapsManDatapathMapOutput struct{ *pulumi.OutputState }

func (ResourceCapsManDatapathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceCapsManDatapath)(nil)).Elem()
}

func (o ResourceCapsManDatapathMapOutput) ToResourceCapsManDatapathMapOutput() ResourceCapsManDatapathMapOutput {
	return o
}

func (o ResourceCapsManDatapathMapOutput) ToResourceCapsManDatapathMapOutputWithContext(ctx context.Context) ResourceCapsManDatapathMapOutput {
	return o
}

func (o ResourceCapsManDatapathMapOutput) MapIndex(k pulumi.StringInput) ResourceCapsManDatapathOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceCapsManDatapath {
		return vs[0].(map[string]*ResourceCapsManDatapath)[vs[1].(string)]
	}).(ResourceCapsManDatapathOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManDatapathInput)(nil)).Elem(), &ResourceCapsManDatapath{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManDatapathArrayInput)(nil)).Elem(), ResourceCapsManDatapathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManDatapathMapInput)(nil)).Elem(), ResourceCapsManDatapathMap{})
	pulumi.RegisterOutputType(ResourceCapsManDatapathOutput{})
	pulumi.RegisterOutputType(ResourceCapsManDatapathArrayOutput{})
	pulumi.RegisterOutputType(ResourceCapsManDatapathMapOutput{})
}
