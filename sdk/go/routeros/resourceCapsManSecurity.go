// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourceCapsManSecurity(ctx, "testSecurity", &routeros.ResourceCapsManSecurityArgs{
//				AuthenticationTypes: pulumi.StringArray{
//					pulumi.String("wpa-psk"),
//					pulumi.String("wpa-eap"),
//					pulumi.String("wpa2-psk"),
//				},
//				Comment:             pulumi.String("test_security"),
//				DisablePmkid:        pulumi.Bool(true),
//				EapMethods:          pulumi.String("eap-tls,passthrough"),
//				EapRadiusAccounting: pulumi.Bool(true),
//				Encryptions: pulumi.StringArray{
//					pulumi.String("tkip"),
//					pulumi.String("aes-ccm"),
//				},
//				GroupEncryption: pulumi.String("aes-ccm"),
//				GroupKeyUpdate:  pulumi.String("1h"),
//				Passphrase:      pulumi.String("0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDE"),
//				TlsCertificate:  pulumi.String("none"),
//				TlsMode:         pulumi.String("verify-certificate"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Import with the name of the CAPsMAN security profile in case of the example use test-security-config
//
// ```sh
//
//	$ pulumi import routeros:index/resourceCapsManSecurity:ResourceCapsManSecurity test_security test-security-config
//
// ```
type ResourceCapsManSecurity struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// Specify the type of Authentication from wpa-psk, wpa2-psk, wpa-eap or wpa2-eap.
	AuthenticationTypes pulumi.StringArrayOutput `pulumi:"authenticationTypes"`
	Comment             pulumi.StringPtrOutput   `pulumi:"comment"`
	// Whether to include PMKID into the EAPOL frame sent out by the Access Point. Disabling PMKID can cause compatibility issues with devices that use the PMKID to connect to an Access Point.
	DisablePmkid pulumi.BoolPtrOutput `pulumi:"disablePmkid"`
	// eap-tls - Use built-in EAP TLS authentication; passthrough - Access point will relay authentication process to the RADIUS server.
	EapMethods pulumi.StringPtrOutput `pulumi:"eapMethods"`
	// Specifies if RADIUS traffic accounting should be used if RADIUS authentication gets done for this client
	EapRadiusAccounting pulumi.BoolPtrOutput `pulumi:"eapRadiusAccounting"`
	// Set type of unicast encryption algorithm used.
	Encryptions pulumi.StringArrayOutput `pulumi:"encryptions"`
	// Access Point advertises one of these ciphers, multiple values can be selected. Access Point uses it to encrypt all broadcast and multicast frames. Client attempts connection only to Access Points that use one of the specified group ciphers.
	GroupEncryption pulumi.StringPtrOutput `pulumi:"groupEncryption"`
	// Controls how often Access Point updates the group key. This key is used to encrypt all broadcast and multicast frames. property only has effect for Access Points. (30s..1h)
	GroupKeyUpdate pulumi.StringPtrOutput `pulumi:"groupKeyUpdate"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringOutput `pulumi:"name"`
	// WPA or WPA2 pre-shared key.
	Passphrase pulumi.StringPtrOutput `pulumi:"passphrase"`
	// Access Point always needs a certificate when security.tls-mode is set to value other than no-certificates.
	TlsCertificate pulumi.StringPtrOutput `pulumi:"tlsCertificate"`
	// This property has effect only when security.eap-methods contains eap-tls.
	TlsMode pulumi.StringPtrOutput `pulumi:"tlsMode"`
}

// NewResourceCapsManSecurity registers a new resource with the given unique name, arguments, and options.
func NewResourceCapsManSecurity(ctx *pulumi.Context,
	name string, args *ResourceCapsManSecurityArgs, opts ...pulumi.ResourceOption) (*ResourceCapsManSecurity, error) {
	if args == nil {
		args = &ResourceCapsManSecurityArgs{}
	}

	if args.Passphrase != nil {
		args.Passphrase = pulumi.ToSecret(args.Passphrase).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"passphrase",
	})
	opts = append(opts, secrets)
	var resource ResourceCapsManSecurity
	err := ctx.RegisterResource("routeros:index/resourceCapsManSecurity:ResourceCapsManSecurity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceCapsManSecurity gets an existing ResourceCapsManSecurity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceCapsManSecurity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceCapsManSecurityState, opts ...pulumi.ResourceOption) (*ResourceCapsManSecurity, error) {
	var resource ResourceCapsManSecurity
	err := ctx.ReadResource("routeros:index/resourceCapsManSecurity:ResourceCapsManSecurity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceCapsManSecurity resources.
type resourceCapsManSecurityState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Specify the type of Authentication from wpa-psk, wpa2-psk, wpa-eap or wpa2-eap.
	AuthenticationTypes []string `pulumi:"authenticationTypes"`
	Comment             *string  `pulumi:"comment"`
	// Whether to include PMKID into the EAPOL frame sent out by the Access Point. Disabling PMKID can cause compatibility issues with devices that use the PMKID to connect to an Access Point.
	DisablePmkid *bool `pulumi:"disablePmkid"`
	// eap-tls - Use built-in EAP TLS authentication; passthrough - Access point will relay authentication process to the RADIUS server.
	EapMethods *string `pulumi:"eapMethods"`
	// Specifies if RADIUS traffic accounting should be used if RADIUS authentication gets done for this client
	EapRadiusAccounting *bool `pulumi:"eapRadiusAccounting"`
	// Set type of unicast encryption algorithm used.
	Encryptions []string `pulumi:"encryptions"`
	// Access Point advertises one of these ciphers, multiple values can be selected. Access Point uses it to encrypt all broadcast and multicast frames. Client attempts connection only to Access Points that use one of the specified group ciphers.
	GroupEncryption *string `pulumi:"groupEncryption"`
	// Controls how often Access Point updates the group key. This key is used to encrypt all broadcast and multicast frames. property only has effect for Access Points. (30s..1h)
	GroupKeyUpdate *string `pulumi:"groupKeyUpdate"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name *string `pulumi:"name"`
	// WPA or WPA2 pre-shared key.
	Passphrase *string `pulumi:"passphrase"`
	// Access Point always needs a certificate when security.tls-mode is set to value other than no-certificates.
	TlsCertificate *string `pulumi:"tlsCertificate"`
	// This property has effect only when security.eap-methods contains eap-tls.
	TlsMode *string `pulumi:"tlsMode"`
}

type ResourceCapsManSecurityState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Specify the type of Authentication from wpa-psk, wpa2-psk, wpa-eap or wpa2-eap.
	AuthenticationTypes pulumi.StringArrayInput
	Comment             pulumi.StringPtrInput
	// Whether to include PMKID into the EAPOL frame sent out by the Access Point. Disabling PMKID can cause compatibility issues with devices that use the PMKID to connect to an Access Point.
	DisablePmkid pulumi.BoolPtrInput
	// eap-tls - Use built-in EAP TLS authentication; passthrough - Access point will relay authentication process to the RADIUS server.
	EapMethods pulumi.StringPtrInput
	// Specifies if RADIUS traffic accounting should be used if RADIUS authentication gets done for this client
	EapRadiusAccounting pulumi.BoolPtrInput
	// Set type of unicast encryption algorithm used.
	Encryptions pulumi.StringArrayInput
	// Access Point advertises one of these ciphers, multiple values can be selected. Access Point uses it to encrypt all broadcast and multicast frames. Client attempts connection only to Access Points that use one of the specified group ciphers.
	GroupEncryption pulumi.StringPtrInput
	// Controls how often Access Point updates the group key. This key is used to encrypt all broadcast and multicast frames. property only has effect for Access Points. (30s..1h)
	GroupKeyUpdate pulumi.StringPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringPtrInput
	// WPA or WPA2 pre-shared key.
	Passphrase pulumi.StringPtrInput
	// Access Point always needs a certificate when security.tls-mode is set to value other than no-certificates.
	TlsCertificate pulumi.StringPtrInput
	// This property has effect only when security.eap-methods contains eap-tls.
	TlsMode pulumi.StringPtrInput
}

func (ResourceCapsManSecurityState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceCapsManSecurityState)(nil)).Elem()
}

type resourceCapsManSecurityArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Specify the type of Authentication from wpa-psk, wpa2-psk, wpa-eap or wpa2-eap.
	AuthenticationTypes []string `pulumi:"authenticationTypes"`
	Comment             *string  `pulumi:"comment"`
	// Whether to include PMKID into the EAPOL frame sent out by the Access Point. Disabling PMKID can cause compatibility issues with devices that use the PMKID to connect to an Access Point.
	DisablePmkid *bool `pulumi:"disablePmkid"`
	// eap-tls - Use built-in EAP TLS authentication; passthrough - Access point will relay authentication process to the RADIUS server.
	EapMethods *string `pulumi:"eapMethods"`
	// Specifies if RADIUS traffic accounting should be used if RADIUS authentication gets done for this client
	EapRadiusAccounting *bool `pulumi:"eapRadiusAccounting"`
	// Set type of unicast encryption algorithm used.
	Encryptions []string `pulumi:"encryptions"`
	// Access Point advertises one of these ciphers, multiple values can be selected. Access Point uses it to encrypt all broadcast and multicast frames. Client attempts connection only to Access Points that use one of the specified group ciphers.
	GroupEncryption *string `pulumi:"groupEncryption"`
	// Controls how often Access Point updates the group key. This key is used to encrypt all broadcast and multicast frames. property only has effect for Access Points. (30s..1h)
	GroupKeyUpdate *string `pulumi:"groupKeyUpdate"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name *string `pulumi:"name"`
	// WPA or WPA2 pre-shared key.
	Passphrase *string `pulumi:"passphrase"`
	// Access Point always needs a certificate when security.tls-mode is set to value other than no-certificates.
	TlsCertificate *string `pulumi:"tlsCertificate"`
	// This property has effect only when security.eap-methods contains eap-tls.
	TlsMode *string `pulumi:"tlsMode"`
}

// The set of arguments for constructing a ResourceCapsManSecurity resource.
type ResourceCapsManSecurityArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Specify the type of Authentication from wpa-psk, wpa2-psk, wpa-eap or wpa2-eap.
	AuthenticationTypes pulumi.StringArrayInput
	Comment             pulumi.StringPtrInput
	// Whether to include PMKID into the EAPOL frame sent out by the Access Point. Disabling PMKID can cause compatibility issues with devices that use the PMKID to connect to an Access Point.
	DisablePmkid pulumi.BoolPtrInput
	// eap-tls - Use built-in EAP TLS authentication; passthrough - Access point will relay authentication process to the RADIUS server.
	EapMethods pulumi.StringPtrInput
	// Specifies if RADIUS traffic accounting should be used if RADIUS authentication gets done for this client
	EapRadiusAccounting pulumi.BoolPtrInput
	// Set type of unicast encryption algorithm used.
	Encryptions pulumi.StringArrayInput
	// Access Point advertises one of these ciphers, multiple values can be selected. Access Point uses it to encrypt all broadcast and multicast frames. Client attempts connection only to Access Points that use one of the specified group ciphers.
	GroupEncryption pulumi.StringPtrInput
	// Controls how often Access Point updates the group key. This key is used to encrypt all broadcast and multicast frames. property only has effect for Access Points. (30s..1h)
	GroupKeyUpdate pulumi.StringPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringPtrInput
	// WPA or WPA2 pre-shared key.
	Passphrase pulumi.StringPtrInput
	// Access Point always needs a certificate when security.tls-mode is set to value other than no-certificates.
	TlsCertificate pulumi.StringPtrInput
	// This property has effect only when security.eap-methods contains eap-tls.
	TlsMode pulumi.StringPtrInput
}

func (ResourceCapsManSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceCapsManSecurityArgs)(nil)).Elem()
}

type ResourceCapsManSecurityInput interface {
	pulumi.Input

	ToResourceCapsManSecurityOutput() ResourceCapsManSecurityOutput
	ToResourceCapsManSecurityOutputWithContext(ctx context.Context) ResourceCapsManSecurityOutput
}

func (*ResourceCapsManSecurity) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCapsManSecurity)(nil)).Elem()
}

func (i *ResourceCapsManSecurity) ToResourceCapsManSecurityOutput() ResourceCapsManSecurityOutput {
	return i.ToResourceCapsManSecurityOutputWithContext(context.Background())
}

func (i *ResourceCapsManSecurity) ToResourceCapsManSecurityOutputWithContext(ctx context.Context) ResourceCapsManSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManSecurityOutput)
}

// ResourceCapsManSecurityArrayInput is an input type that accepts ResourceCapsManSecurityArray and ResourceCapsManSecurityArrayOutput values.
// You can construct a concrete instance of `ResourceCapsManSecurityArrayInput` via:
//
//	ResourceCapsManSecurityArray{ ResourceCapsManSecurityArgs{...} }
type ResourceCapsManSecurityArrayInput interface {
	pulumi.Input

	ToResourceCapsManSecurityArrayOutput() ResourceCapsManSecurityArrayOutput
	ToResourceCapsManSecurityArrayOutputWithContext(context.Context) ResourceCapsManSecurityArrayOutput
}

type ResourceCapsManSecurityArray []ResourceCapsManSecurityInput

func (ResourceCapsManSecurityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceCapsManSecurity)(nil)).Elem()
}

func (i ResourceCapsManSecurityArray) ToResourceCapsManSecurityArrayOutput() ResourceCapsManSecurityArrayOutput {
	return i.ToResourceCapsManSecurityArrayOutputWithContext(context.Background())
}

func (i ResourceCapsManSecurityArray) ToResourceCapsManSecurityArrayOutputWithContext(ctx context.Context) ResourceCapsManSecurityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManSecurityArrayOutput)
}

// ResourceCapsManSecurityMapInput is an input type that accepts ResourceCapsManSecurityMap and ResourceCapsManSecurityMapOutput values.
// You can construct a concrete instance of `ResourceCapsManSecurityMapInput` via:
//
//	ResourceCapsManSecurityMap{ "key": ResourceCapsManSecurityArgs{...} }
type ResourceCapsManSecurityMapInput interface {
	pulumi.Input

	ToResourceCapsManSecurityMapOutput() ResourceCapsManSecurityMapOutput
	ToResourceCapsManSecurityMapOutputWithContext(context.Context) ResourceCapsManSecurityMapOutput
}

type ResourceCapsManSecurityMap map[string]ResourceCapsManSecurityInput

func (ResourceCapsManSecurityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceCapsManSecurity)(nil)).Elem()
}

func (i ResourceCapsManSecurityMap) ToResourceCapsManSecurityMapOutput() ResourceCapsManSecurityMapOutput {
	return i.ToResourceCapsManSecurityMapOutputWithContext(context.Background())
}

func (i ResourceCapsManSecurityMap) ToResourceCapsManSecurityMapOutputWithContext(ctx context.Context) ResourceCapsManSecurityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManSecurityMapOutput)
}

type ResourceCapsManSecurityOutput struct{ *pulumi.OutputState }

func (ResourceCapsManSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCapsManSecurity)(nil)).Elem()
}

func (o ResourceCapsManSecurityOutput) ToResourceCapsManSecurityOutput() ResourceCapsManSecurityOutput {
	return o
}

func (o ResourceCapsManSecurityOutput) ToResourceCapsManSecurityOutputWithContext(ctx context.Context) ResourceCapsManSecurityOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceCapsManSecurityOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceCapsManSecurityOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// Specify the type of Authentication from wpa-psk, wpa2-psk, wpa-eap or wpa2-eap.
func (o ResourceCapsManSecurityOutput) AuthenticationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringArrayOutput { return v.AuthenticationTypes }).(pulumi.StringArrayOutput)
}

func (o ResourceCapsManSecurityOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Whether to include PMKID into the EAPOL frame sent out by the Access Point. Disabling PMKID can cause compatibility issues with devices that use the PMKID to connect to an Access Point.
func (o ResourceCapsManSecurityOutput) DisablePmkid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.BoolPtrOutput { return v.DisablePmkid }).(pulumi.BoolPtrOutput)
}

// eap-tls - Use built-in EAP TLS authentication; passthrough - Access point will relay authentication process to the RADIUS server.
func (o ResourceCapsManSecurityOutput) EapMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringPtrOutput { return v.EapMethods }).(pulumi.StringPtrOutput)
}

// Specifies if RADIUS traffic accounting should be used if RADIUS authentication gets done for this client
func (o ResourceCapsManSecurityOutput) EapRadiusAccounting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.BoolPtrOutput { return v.EapRadiusAccounting }).(pulumi.BoolPtrOutput)
}

// Set type of unicast encryption algorithm used.
func (o ResourceCapsManSecurityOutput) Encryptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringArrayOutput { return v.Encryptions }).(pulumi.StringArrayOutput)
}

// Access Point advertises one of these ciphers, multiple values can be selected. Access Point uses it to encrypt all broadcast and multicast frames. Client attempts connection only to Access Points that use one of the specified group ciphers.
func (o ResourceCapsManSecurityOutput) GroupEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringPtrOutput { return v.GroupEncryption }).(pulumi.StringPtrOutput)
}

// Controls how often Access Point updates the group key. This key is used to encrypt all broadcast and multicast frames. property only has effect for Access Points. (30s..1h)
func (o ResourceCapsManSecurityOutput) GroupKeyUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringPtrOutput { return v.GroupKeyUpdate }).(pulumi.StringPtrOutput)
}

// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
// integrity for that resource!
func (o ResourceCapsManSecurityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// WPA or WPA2 pre-shared key.
func (o ResourceCapsManSecurityOutput) Passphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringPtrOutput { return v.Passphrase }).(pulumi.StringPtrOutput)
}

// Access Point always needs a certificate when security.tls-mode is set to value other than no-certificates.
func (o ResourceCapsManSecurityOutput) TlsCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringPtrOutput { return v.TlsCertificate }).(pulumi.StringPtrOutput)
}

// This property has effect only when security.eap-methods contains eap-tls.
func (o ResourceCapsManSecurityOutput) TlsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManSecurity) pulumi.StringPtrOutput { return v.TlsMode }).(pulumi.StringPtrOutput)
}

type ResourceCapsManSecurityArrayOutput struct{ *pulumi.OutputState }

func (ResourceCapsManSecurityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceCapsManSecurity)(nil)).Elem()
}

func (o ResourceCapsManSecurityArrayOutput) ToResourceCapsManSecurityArrayOutput() ResourceCapsManSecurityArrayOutput {
	return o
}

func (o ResourceCapsManSecurityArrayOutput) ToResourceCapsManSecurityArrayOutputWithContext(ctx context.Context) ResourceCapsManSecurityArrayOutput {
	return o
}

func (o ResourceCapsManSecurityArrayOutput) Index(i pulumi.IntInput) ResourceCapsManSecurityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceCapsManSecurity {
		return vs[0].([]*ResourceCapsManSecurity)[vs[1].(int)]
	}).(ResourceCapsManSecurityOutput)
}

type ResourceCapsManSecurityMapOutput struct{ *pulumi.OutputState }

func (ResourceCapsManSecurityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceCapsManSecurity)(nil)).Elem()
}

func (o ResourceCapsManSecurityMapOutput) ToResourceCapsManSecurityMapOutput() ResourceCapsManSecurityMapOutput {
	return o
}

func (o ResourceCapsManSecurityMapOutput) ToResourceCapsManSecurityMapOutputWithContext(ctx context.Context) ResourceCapsManSecurityMapOutput {
	return o
}

func (o ResourceCapsManSecurityMapOutput) MapIndex(k pulumi.StringInput) ResourceCapsManSecurityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceCapsManSecurity {
		return vs[0].(map[string]*ResourceCapsManSecurity)[vs[1].(string)]
	}).(ResourceCapsManSecurityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManSecurityInput)(nil)).Elem(), &ResourceCapsManSecurity{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManSecurityArrayInput)(nil)).Elem(), ResourceCapsManSecurityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManSecurityMapInput)(nil)).Elem(), ResourceCapsManSecurityMap{})
	pulumi.RegisterOutputType(ResourceCapsManSecurityOutput{})
	pulumi.RegisterOutputType(ResourceCapsManSecurityArrayOutput{})
	pulumi.RegisterOutputType(ResourceCapsManSecurityMapOutput{})
}
