// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routeros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := routeros.NewResourceCapsManChannel(ctx, "testChannel", &routeros.ResourceCapsManChannelArgs{
//				Band:                pulumi.String("2ghz-b/g/n"),
//				Comment:             pulumi.String("test_channel"),
//				ControlChannelWidth: pulumi.String("10mhz"),
//				ExtensionChannel:    pulumi.String("eCee"),
//				Frequency:           pulumi.Int(2412),
//				ReselectInterval:    pulumi.String("1h"),
//				SaveSelected:        pulumi.Bool(true),
//				SecondaryFrequency:  pulumi.String("disabled"),
//				SkipDfsChannels:     pulumi.Bool(true),
//				TxPower:             pulumi.Int(20),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Import with the name of the CAPsMAN channel configuration in case of the example use test-channel-config
//
// ```sh
//
//	$ pulumi import routeros:index/resourceCapsManChannel:ResourceCapsManChannel test_channel test-channel-config
//
// ```
type ResourceCapsManChannel struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	// Define operational radio frequency band and mode taken from hardware capability of wireless card.
	Band    pulumi.StringPtrOutput `pulumi:"band"`
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Control channel width.
	ControlChannelWidth pulumi.StringPtrOutput `pulumi:"controlChannelWidth"`
	// Extension channel configuration. (E.g. Ce = extension channel is above Control channel, eC = extension channel is below Control channel)
	ExtensionChannel pulumi.StringPtrOutput `pulumi:"extensionChannel"`
	// Channel frequency value in MHz on which AP will operate. If left blank, CAPsMAN will automatically determine the best frequency that is least occupied.
	Frequency pulumi.IntOutput `pulumi:"frequency"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringOutput `pulumi:"name"`
	// The interval after which the least occupied frequency is chosen, can be defined as a random interval, ex. as '30m..60m'. Works only if channel.frequency is left blank.
	ReselectInterval pulumi.StringPtrOutput `pulumi:"reselectInterval"`
	// If channel frequency is chosen automatically and channel.reselect-interval is used, then saves the last picked frequency.
	SaveSelected pulumi.BoolPtrOutput `pulumi:"saveSelected"`
	// Specifies the second frequency that will be used for 80+80MHz configuration. Set it to Disabled in order to disable 80+80MHz capability.
	SecondaryFrequency pulumi.StringPtrOutput `pulumi:"secondaryFrequency"`
	// If channel.frequency is left blank, the selection will skip DFS channels.
	SkipDfsChannels pulumi.BoolPtrOutput `pulumi:"skipDfsChannels"`
	// TX  Power for CAP interface (for the whole interface not for individual  chains) in dBm. It is not possible to set higher than allowed by country  regulations or interface. By default max allowed by country or  interface is used.
	TxPower pulumi.IntPtrOutput `pulumi:"txPower"`
	// Channel Width in MHz.
	Width pulumi.StringPtrOutput `pulumi:"width"`
}

// NewResourceCapsManChannel registers a new resource with the given unique name, arguments, and options.
func NewResourceCapsManChannel(ctx *pulumi.Context,
	name string, args *ResourceCapsManChannelArgs, opts ...pulumi.ResourceOption) (*ResourceCapsManChannel, error) {
	if args == nil {
		args = &ResourceCapsManChannelArgs{}
	}

	var resource ResourceCapsManChannel
	err := ctx.RegisterResource("routeros:index/resourceCapsManChannel:ResourceCapsManChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceCapsManChannel gets an existing ResourceCapsManChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceCapsManChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceCapsManChannelState, opts ...pulumi.ResourceOption) (*ResourceCapsManChannel, error) {
	var resource ResourceCapsManChannel
	err := ctx.ReadResource("routeros:index/resourceCapsManChannel:ResourceCapsManChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceCapsManChannel resources.
type resourceCapsManChannelState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Define operational radio frequency band and mode taken from hardware capability of wireless card.
	Band    *string `pulumi:"band"`
	Comment *string `pulumi:"comment"`
	// Control channel width.
	ControlChannelWidth *string `pulumi:"controlChannelWidth"`
	// Extension channel configuration. (E.g. Ce = extension channel is above Control channel, eC = extension channel is below Control channel)
	ExtensionChannel *string `pulumi:"extensionChannel"`
	// Channel frequency value in MHz on which AP will operate. If left blank, CAPsMAN will automatically determine the best frequency that is least occupied.
	Frequency *int `pulumi:"frequency"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name *string `pulumi:"name"`
	// The interval after which the least occupied frequency is chosen, can be defined as a random interval, ex. as '30m..60m'. Works only if channel.frequency is left blank.
	ReselectInterval *string `pulumi:"reselectInterval"`
	// If channel frequency is chosen automatically and channel.reselect-interval is used, then saves the last picked frequency.
	SaveSelected *bool `pulumi:"saveSelected"`
	// Specifies the second frequency that will be used for 80+80MHz configuration. Set it to Disabled in order to disable 80+80MHz capability.
	SecondaryFrequency *string `pulumi:"secondaryFrequency"`
	// If channel.frequency is left blank, the selection will skip DFS channels.
	SkipDfsChannels *bool `pulumi:"skipDfsChannels"`
	// TX  Power for CAP interface (for the whole interface not for individual  chains) in dBm. It is not possible to set higher than allowed by country  regulations or interface. By default max allowed by country or  interface is used.
	TxPower *int `pulumi:"txPower"`
	// Channel Width in MHz.
	Width *string `pulumi:"width"`
}

type ResourceCapsManChannelState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Define operational radio frequency band and mode taken from hardware capability of wireless card.
	Band    pulumi.StringPtrInput
	Comment pulumi.StringPtrInput
	// Control channel width.
	ControlChannelWidth pulumi.StringPtrInput
	// Extension channel configuration. (E.g. Ce = extension channel is above Control channel, eC = extension channel is below Control channel)
	ExtensionChannel pulumi.StringPtrInput
	// Channel frequency value in MHz on which AP will operate. If left blank, CAPsMAN will automatically determine the best frequency that is least occupied.
	Frequency pulumi.IntPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringPtrInput
	// The interval after which the least occupied frequency is chosen, can be defined as a random interval, ex. as '30m..60m'. Works only if channel.frequency is left blank.
	ReselectInterval pulumi.StringPtrInput
	// If channel frequency is chosen automatically and channel.reselect-interval is used, then saves the last picked frequency.
	SaveSelected pulumi.BoolPtrInput
	// Specifies the second frequency that will be used for 80+80MHz configuration. Set it to Disabled in order to disable 80+80MHz capability.
	SecondaryFrequency pulumi.StringPtrInput
	// If channel.frequency is left blank, the selection will skip DFS channels.
	SkipDfsChannels pulumi.BoolPtrInput
	// TX  Power for CAP interface (for the whole interface not for individual  chains) in dBm. It is not possible to set higher than allowed by country  regulations or interface. By default max allowed by country or  interface is used.
	TxPower pulumi.IntPtrInput
	// Channel Width in MHz.
	Width pulumi.StringPtrInput
}

func (ResourceCapsManChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceCapsManChannelState)(nil)).Elem()
}

type resourceCapsManChannelArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	// Define operational radio frequency band and mode taken from hardware capability of wireless card.
	Band    *string `pulumi:"band"`
	Comment *string `pulumi:"comment"`
	// Control channel width.
	ControlChannelWidth *string `pulumi:"controlChannelWidth"`
	// Extension channel configuration. (E.g. Ce = extension channel is above Control channel, eC = extension channel is below Control channel)
	ExtensionChannel *string `pulumi:"extensionChannel"`
	// Channel frequency value in MHz on which AP will operate. If left blank, CAPsMAN will automatically determine the best frequency that is least occupied.
	Frequency *int `pulumi:"frequency"`
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name *string `pulumi:"name"`
	// The interval after which the least occupied frequency is chosen, can be defined as a random interval, ex. as '30m..60m'. Works only if channel.frequency is left blank.
	ReselectInterval *string `pulumi:"reselectInterval"`
	// If channel frequency is chosen automatically and channel.reselect-interval is used, then saves the last picked frequency.
	SaveSelected *bool `pulumi:"saveSelected"`
	// Specifies the second frequency that will be used for 80+80MHz configuration. Set it to Disabled in order to disable 80+80MHz capability.
	SecondaryFrequency *string `pulumi:"secondaryFrequency"`
	// If channel.frequency is left blank, the selection will skip DFS channels.
	SkipDfsChannels *bool `pulumi:"skipDfsChannels"`
	// TX  Power for CAP interface (for the whole interface not for individual  chains) in dBm. It is not possible to set higher than allowed by country  regulations or interface. By default max allowed by country or  interface is used.
	TxPower *int `pulumi:"txPower"`
	// Channel Width in MHz.
	Width *string `pulumi:"width"`
}

// The set of arguments for constructing a ResourceCapsManChannel resource.
type ResourceCapsManChannelArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	// Define operational radio frequency band and mode taken from hardware capability of wireless card.
	Band    pulumi.StringPtrInput
	Comment pulumi.StringPtrInput
	// Control channel width.
	ControlChannelWidth pulumi.StringPtrInput
	// Extension channel configuration. (E.g. Ce = extension channel is above Control channel, eC = extension channel is below Control channel)
	ExtensionChannel pulumi.StringPtrInput
	// Channel frequency value in MHz on which AP will operate. If left blank, CAPsMAN will automatically determine the best frequency that is least occupied.
	Frequency pulumi.IntPtrInput
	// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
	// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
	// integrity for that resource!
	Name pulumi.StringPtrInput
	// The interval after which the least occupied frequency is chosen, can be defined as a random interval, ex. as '30m..60m'. Works only if channel.frequency is left blank.
	ReselectInterval pulumi.StringPtrInput
	// If channel frequency is chosen automatically and channel.reselect-interval is used, then saves the last picked frequency.
	SaveSelected pulumi.BoolPtrInput
	// Specifies the second frequency that will be used for 80+80MHz configuration. Set it to Disabled in order to disable 80+80MHz capability.
	SecondaryFrequency pulumi.StringPtrInput
	// If channel.frequency is left blank, the selection will skip DFS channels.
	SkipDfsChannels pulumi.BoolPtrInput
	// TX  Power for CAP interface (for the whole interface not for individual  chains) in dBm. It is not possible to set higher than allowed by country  regulations or interface. By default max allowed by country or  interface is used.
	TxPower pulumi.IntPtrInput
	// Channel Width in MHz.
	Width pulumi.StringPtrInput
}

func (ResourceCapsManChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceCapsManChannelArgs)(nil)).Elem()
}

type ResourceCapsManChannelInput interface {
	pulumi.Input

	ToResourceCapsManChannelOutput() ResourceCapsManChannelOutput
	ToResourceCapsManChannelOutputWithContext(ctx context.Context) ResourceCapsManChannelOutput
}

func (*ResourceCapsManChannel) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCapsManChannel)(nil)).Elem()
}

func (i *ResourceCapsManChannel) ToResourceCapsManChannelOutput() ResourceCapsManChannelOutput {
	return i.ToResourceCapsManChannelOutputWithContext(context.Background())
}

func (i *ResourceCapsManChannel) ToResourceCapsManChannelOutputWithContext(ctx context.Context) ResourceCapsManChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManChannelOutput)
}

// ResourceCapsManChannelArrayInput is an input type that accepts ResourceCapsManChannelArray and ResourceCapsManChannelArrayOutput values.
// You can construct a concrete instance of `ResourceCapsManChannelArrayInput` via:
//
//	ResourceCapsManChannelArray{ ResourceCapsManChannelArgs{...} }
type ResourceCapsManChannelArrayInput interface {
	pulumi.Input

	ToResourceCapsManChannelArrayOutput() ResourceCapsManChannelArrayOutput
	ToResourceCapsManChannelArrayOutputWithContext(context.Context) ResourceCapsManChannelArrayOutput
}

type ResourceCapsManChannelArray []ResourceCapsManChannelInput

func (ResourceCapsManChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceCapsManChannel)(nil)).Elem()
}

func (i ResourceCapsManChannelArray) ToResourceCapsManChannelArrayOutput() ResourceCapsManChannelArrayOutput {
	return i.ToResourceCapsManChannelArrayOutputWithContext(context.Background())
}

func (i ResourceCapsManChannelArray) ToResourceCapsManChannelArrayOutputWithContext(ctx context.Context) ResourceCapsManChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManChannelArrayOutput)
}

// ResourceCapsManChannelMapInput is an input type that accepts ResourceCapsManChannelMap and ResourceCapsManChannelMapOutput values.
// You can construct a concrete instance of `ResourceCapsManChannelMapInput` via:
//
//	ResourceCapsManChannelMap{ "key": ResourceCapsManChannelArgs{...} }
type ResourceCapsManChannelMapInput interface {
	pulumi.Input

	ToResourceCapsManChannelMapOutput() ResourceCapsManChannelMapOutput
	ToResourceCapsManChannelMapOutputWithContext(context.Context) ResourceCapsManChannelMapOutput
}

type ResourceCapsManChannelMap map[string]ResourceCapsManChannelInput

func (ResourceCapsManChannelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceCapsManChannel)(nil)).Elem()
}

func (i ResourceCapsManChannelMap) ToResourceCapsManChannelMapOutput() ResourceCapsManChannelMapOutput {
	return i.ToResourceCapsManChannelMapOutputWithContext(context.Background())
}

func (i ResourceCapsManChannelMap) ToResourceCapsManChannelMapOutputWithContext(ctx context.Context) ResourceCapsManChannelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCapsManChannelMapOutput)
}

type ResourceCapsManChannelOutput struct{ *pulumi.OutputState }

func (ResourceCapsManChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCapsManChannel)(nil)).Elem()
}

func (o ResourceCapsManChannelOutput) ToResourceCapsManChannelOutput() ResourceCapsManChannelOutput {
	return o
}

func (o ResourceCapsManChannelOutput) ToResourceCapsManChannelOutputWithContext(ctx context.Context) ResourceCapsManChannelOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ResourceCapsManChannelOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ResourceCapsManChannelOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

// Define operational radio frequency band and mode taken from hardware capability of wireless card.
func (o ResourceCapsManChannelOutput) Band() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.StringPtrOutput { return v.Band }).(pulumi.StringPtrOutput)
}

func (o ResourceCapsManChannelOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Control channel width.
func (o ResourceCapsManChannelOutput) ControlChannelWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.StringPtrOutput { return v.ControlChannelWidth }).(pulumi.StringPtrOutput)
}

// Extension channel configuration. (E.g. Ce = extension channel is above Control channel, eC = extension channel is below Control channel)
func (o ResourceCapsManChannelOutput) ExtensionChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.StringPtrOutput { return v.ExtensionChannel }).(pulumi.StringPtrOutput)
}

// Channel frequency value in MHz on which AP will operate. If left blank, CAPsMAN will automatically determine the best frequency that is least occupied.
func (o ResourceCapsManChannelOutput) Frequency() pulumi.IntOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.IntOutput { return v.Frequency }).(pulumi.IntOutput)
}

// Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
// resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
// integrity for that resource!
func (o ResourceCapsManChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The interval after which the least occupied frequency is chosen, can be defined as a random interval, ex. as '30m..60m'. Works only if channel.frequency is left blank.
func (o ResourceCapsManChannelOutput) ReselectInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.StringPtrOutput { return v.ReselectInterval }).(pulumi.StringPtrOutput)
}

// If channel frequency is chosen automatically and channel.reselect-interval is used, then saves the last picked frequency.
func (o ResourceCapsManChannelOutput) SaveSelected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.BoolPtrOutput { return v.SaveSelected }).(pulumi.BoolPtrOutput)
}

// Specifies the second frequency that will be used for 80+80MHz configuration. Set it to Disabled in order to disable 80+80MHz capability.
func (o ResourceCapsManChannelOutput) SecondaryFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.StringPtrOutput { return v.SecondaryFrequency }).(pulumi.StringPtrOutput)
}

// If channel.frequency is left blank, the selection will skip DFS channels.
func (o ResourceCapsManChannelOutput) SkipDfsChannels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.BoolPtrOutput { return v.SkipDfsChannels }).(pulumi.BoolPtrOutput)
}

// TX  Power for CAP interface (for the whole interface not for individual  chains) in dBm. It is not possible to set higher than allowed by country  regulations or interface. By default max allowed by country or  interface is used.
func (o ResourceCapsManChannelOutput) TxPower() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.IntPtrOutput { return v.TxPower }).(pulumi.IntPtrOutput)
}

// Channel Width in MHz.
func (o ResourceCapsManChannelOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCapsManChannel) pulumi.StringPtrOutput { return v.Width }).(pulumi.StringPtrOutput)
}

type ResourceCapsManChannelArrayOutput struct{ *pulumi.OutputState }

func (ResourceCapsManChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceCapsManChannel)(nil)).Elem()
}

func (o ResourceCapsManChannelArrayOutput) ToResourceCapsManChannelArrayOutput() ResourceCapsManChannelArrayOutput {
	return o
}

func (o ResourceCapsManChannelArrayOutput) ToResourceCapsManChannelArrayOutputWithContext(ctx context.Context) ResourceCapsManChannelArrayOutput {
	return o
}

func (o ResourceCapsManChannelArrayOutput) Index(i pulumi.IntInput) ResourceCapsManChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceCapsManChannel {
		return vs[0].([]*ResourceCapsManChannel)[vs[1].(int)]
	}).(ResourceCapsManChannelOutput)
}

type ResourceCapsManChannelMapOutput struct{ *pulumi.OutputState }

func (ResourceCapsManChannelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceCapsManChannel)(nil)).Elem()
}

func (o ResourceCapsManChannelMapOutput) ToResourceCapsManChannelMapOutput() ResourceCapsManChannelMapOutput {
	return o
}

func (o ResourceCapsManChannelMapOutput) ToResourceCapsManChannelMapOutputWithContext(ctx context.Context) ResourceCapsManChannelMapOutput {
	return o
}

func (o ResourceCapsManChannelMapOutput) MapIndex(k pulumi.StringInput) ResourceCapsManChannelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceCapsManChannel {
		return vs[0].(map[string]*ResourceCapsManChannel)[vs[1].(string)]
	}).(ResourceCapsManChannelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManChannelInput)(nil)).Elem(), &ResourceCapsManChannel{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManChannelArrayInput)(nil)).Elem(), ResourceCapsManChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCapsManChannelMapInput)(nil)).Elem(), ResourceCapsManChannelMap{})
	pulumi.RegisterOutputType(ResourceCapsManChannelOutput{})
	pulumi.RegisterOutputType(ResourceCapsManChannelArrayOutput{})
	pulumi.RegisterOutputType(ResourceCapsManChannelMapOutput{})
}
