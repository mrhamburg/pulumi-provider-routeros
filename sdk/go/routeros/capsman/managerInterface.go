// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package capsman

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-routeros/sdk/go/routeros/CapsMan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CapsMan.NewManagerInterface(ctx, "testManagerInterface", &CapsMan.ManagerInterfaceArgs{
//				Forbid:    pulumi.Bool(true),
//				Interface: pulumi.String("ether1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// #The ID can be found via API or the terminal #The command for the terminal is ->
//
// :put [/caps-man/manager/interface get [print show-ids]]
//
// ```sh
//
//	$ pulumi import routeros:CapsMan/managerInterface:ManagerInterface test_manager_interface "*6"
//
// ```
type ManagerInterface struct {
	pulumi.CustomResourceState

	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrOutput `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrOutput `pulumi:"___path_"`
	Comment  pulumi.StringPtrOutput `pulumi:"comment"`
	Default  pulumi.BoolOutput      `pulumi:"default"`
	Disabled pulumi.BoolPtrOutput   `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolOutput `pulumi:"dynamic"`
	// Disable interface listening.
	Forbid pulumi.BoolPtrOutput `pulumi:"forbid"`
	// Name of the interface.
	Interface pulumi.StringOutput `pulumi:"interface"`
}

// NewManagerInterface registers a new resource with the given unique name, arguments, and options.
func NewManagerInterface(ctx *pulumi.Context,
	name string, args *ManagerInterfaceArgs, opts ...pulumi.ResourceOption) (*ManagerInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	var resource ManagerInterface
	err := ctx.RegisterResource("routeros:CapsMan/managerInterface:ManagerInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagerInterface gets an existing ManagerInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagerInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagerInterfaceState, opts ...pulumi.ResourceOption) (*ManagerInterface, error) {
	var resource ManagerInterface
	err := ctx.ReadResource("routeros:CapsMan/managerInterface:ManagerInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagerInterface resources.
type managerInterfaceState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	Comment  *string `pulumi:"comment"`
	Default  *bool   `pulumi:"default"`
	Disabled *bool   `pulumi:"disabled"`
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic *bool `pulumi:"dynamic"`
	// Disable interface listening.
	Forbid *bool `pulumi:"forbid"`
	// Name of the interface.
	Interface *string `pulumi:"interface"`
}

type ManagerInterfaceState struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	Comment  pulumi.StringPtrInput
	Default  pulumi.BoolPtrInput
	Disabled pulumi.BoolPtrInput
	// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
	Dynamic pulumi.BoolPtrInput
	// Disable interface listening.
	Forbid pulumi.BoolPtrInput
	// Name of the interface.
	Interface pulumi.StringPtrInput
}

func (ManagerInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*managerInterfaceState)(nil)).Elem()
}

type managerInterfaceArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ *int `pulumi:"___id_"`
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ *string `pulumi:"___path_"`
	Comment  *string `pulumi:"comment"`
	Disabled *bool   `pulumi:"disabled"`
	// Disable interface listening.
	Forbid *bool `pulumi:"forbid"`
	// Name of the interface.
	Interface string `pulumi:"interface"`
}

// The set of arguments for constructing a ManagerInterface resource.
type ManagerInterfaceArgs struct {
	// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
	___id_ pulumi.IntPtrInput
	// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
	___path_ pulumi.StringPtrInput
	Comment  pulumi.StringPtrInput
	Disabled pulumi.BoolPtrInput
	// Disable interface listening.
	Forbid pulumi.BoolPtrInput
	// Name of the interface.
	Interface pulumi.StringInput
}

func (ManagerInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managerInterfaceArgs)(nil)).Elem()
}

type ManagerInterfaceInput interface {
	pulumi.Input

	ToManagerInterfaceOutput() ManagerInterfaceOutput
	ToManagerInterfaceOutputWithContext(ctx context.Context) ManagerInterfaceOutput
}

func (*ManagerInterface) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerInterface)(nil)).Elem()
}

func (i *ManagerInterface) ToManagerInterfaceOutput() ManagerInterfaceOutput {
	return i.ToManagerInterfaceOutputWithContext(context.Background())
}

func (i *ManagerInterface) ToManagerInterfaceOutputWithContext(ctx context.Context) ManagerInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerInterfaceOutput)
}

// ManagerInterfaceArrayInput is an input type that accepts ManagerInterfaceArray and ManagerInterfaceArrayOutput values.
// You can construct a concrete instance of `ManagerInterfaceArrayInput` via:
//
//	ManagerInterfaceArray{ ManagerInterfaceArgs{...} }
type ManagerInterfaceArrayInput interface {
	pulumi.Input

	ToManagerInterfaceArrayOutput() ManagerInterfaceArrayOutput
	ToManagerInterfaceArrayOutputWithContext(context.Context) ManagerInterfaceArrayOutput
}

type ManagerInterfaceArray []ManagerInterfaceInput

func (ManagerInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagerInterface)(nil)).Elem()
}

func (i ManagerInterfaceArray) ToManagerInterfaceArrayOutput() ManagerInterfaceArrayOutput {
	return i.ToManagerInterfaceArrayOutputWithContext(context.Background())
}

func (i ManagerInterfaceArray) ToManagerInterfaceArrayOutputWithContext(ctx context.Context) ManagerInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerInterfaceArrayOutput)
}

// ManagerInterfaceMapInput is an input type that accepts ManagerInterfaceMap and ManagerInterfaceMapOutput values.
// You can construct a concrete instance of `ManagerInterfaceMapInput` via:
//
//	ManagerInterfaceMap{ "key": ManagerInterfaceArgs{...} }
type ManagerInterfaceMapInput interface {
	pulumi.Input

	ToManagerInterfaceMapOutput() ManagerInterfaceMapOutput
	ToManagerInterfaceMapOutputWithContext(context.Context) ManagerInterfaceMapOutput
}

type ManagerInterfaceMap map[string]ManagerInterfaceInput

func (ManagerInterfaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagerInterface)(nil)).Elem()
}

func (i ManagerInterfaceMap) ToManagerInterfaceMapOutput() ManagerInterfaceMapOutput {
	return i.ToManagerInterfaceMapOutputWithContext(context.Background())
}

func (i ManagerInterfaceMap) ToManagerInterfaceMapOutputWithContext(ctx context.Context) ManagerInterfaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerInterfaceMapOutput)
}

type ManagerInterfaceOutput struct{ *pulumi.OutputState }

func (ManagerInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerInterface)(nil)).Elem()
}

func (o ManagerInterfaceOutput) ToManagerInterfaceOutput() ManagerInterfaceOutput {
	return o
}

func (o ManagerInterfaceOutput) ToManagerInterfaceOutputWithContext(ctx context.Context) ManagerInterfaceOutput {
	return o
}

// <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
func (o ManagerInterfaceOutput) ___id_() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagerInterface) pulumi.IntPtrOutput { return v.___id_ }).(pulumi.IntPtrOutput)
}

// <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
func (o ManagerInterfaceOutput) ___path_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerInterface) pulumi.StringPtrOutput { return v.___path_ }).(pulumi.StringPtrOutput)
}

func (o ManagerInterfaceOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerInterface) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ManagerInterfaceOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v *ManagerInterface) pulumi.BoolOutput { return v.Default }).(pulumi.BoolOutput)
}

func (o ManagerInterfaceOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagerInterface) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Configuration item created by software, not by management interface. It is not exported, and cannot be directly modified.
func (o ManagerInterfaceOutput) Dynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v *ManagerInterface) pulumi.BoolOutput { return v.Dynamic }).(pulumi.BoolOutput)
}

// Disable interface listening.
func (o ManagerInterfaceOutput) Forbid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagerInterface) pulumi.BoolPtrOutput { return v.Forbid }).(pulumi.BoolPtrOutput)
}

// Name of the interface.
func (o ManagerInterfaceOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagerInterface) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

type ManagerInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ManagerInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagerInterface)(nil)).Elem()
}

func (o ManagerInterfaceArrayOutput) ToManagerInterfaceArrayOutput() ManagerInterfaceArrayOutput {
	return o
}

func (o ManagerInterfaceArrayOutput) ToManagerInterfaceArrayOutputWithContext(ctx context.Context) ManagerInterfaceArrayOutput {
	return o
}

func (o ManagerInterfaceArrayOutput) Index(i pulumi.IntInput) ManagerInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagerInterface {
		return vs[0].([]*ManagerInterface)[vs[1].(int)]
	}).(ManagerInterfaceOutput)
}

type ManagerInterfaceMapOutput struct{ *pulumi.OutputState }

func (ManagerInterfaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagerInterface)(nil)).Elem()
}

func (o ManagerInterfaceMapOutput) ToManagerInterfaceMapOutput() ManagerInterfaceMapOutput {
	return o
}

func (o ManagerInterfaceMapOutput) ToManagerInterfaceMapOutputWithContext(ctx context.Context) ManagerInterfaceMapOutput {
	return o
}

func (o ManagerInterfaceMapOutput) MapIndex(k pulumi.StringInput) ManagerInterfaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagerInterface {
		return vs[0].(map[string]*ManagerInterface)[vs[1].(string)]
	}).(ManagerInterfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagerInterfaceInput)(nil)).Elem(), &ManagerInterface{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagerInterfaceArrayInput)(nil)).Elem(), ManagerInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagerInterfaceMapInput)(nil)).Elem(), ManagerInterfaceMap{})
	pulumi.RegisterOutputType(ManagerInterfaceOutput{})
	pulumi.RegisterOutputType(ManagerInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ManagerInterfaceMapOutput{})
}
