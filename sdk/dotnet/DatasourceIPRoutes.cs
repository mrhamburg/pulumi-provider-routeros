// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Routeros
{
    public static class DatasourceIPRoutes
    {
        public static Task<DatasourceIPRoutesResult> InvokeAsync(DatasourceIPRoutesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<DatasourceIPRoutesResult>("routeros:index/datasourceIPRoutes:DatasourceIPRoutes", args ?? new DatasourceIPRoutesArgs(), options.WithDefaults());

        public static Output<DatasourceIPRoutesResult> Invoke(DatasourceIPRoutesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<DatasourceIPRoutesResult>("routeros:index/datasourceIPRoutes:DatasourceIPRoutes", args ?? new DatasourceIPRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class DatasourceIPRoutesArgs : global::Pulumi.InvokeArgs
    {
        [Input("___id_")]
        public int? ___id_ { get; set; }

        [Input("___path_")]
        public string? ___path_ { get; set; }

        [Input("filter")]
        private Dictionary<string, object>? _filter;

        /// <summary>
        /// Additional request filtering options.
        /// </summary>
        public Dictionary<string, object> Filter
        {
            get => _filter ?? (_filter = new Dictionary<string, object>());
            set => _filter = value;
        }

        public DatasourceIPRoutesArgs()
        {
        }
        public static new DatasourceIPRoutesArgs Empty => new DatasourceIPRoutesArgs();
    }

    public sealed class DatasourceIPRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("___id_")]
        public Input<int>? ___id_ { get; set; }

        [Input("___path_")]
        public Input<string>? ___path_ { get; set; }

        [Input("filter")]
        private InputMap<object>? _filter;

        /// <summary>
        /// Additional request filtering options.
        /// </summary>
        public InputMap<object> Filter
        {
            get => _filter ?? (_filter = new InputMap<object>());
            set => _filter = value;
        }

        public DatasourceIPRoutesInvokeArgs()
        {
        }
        public static new DatasourceIPRoutesInvokeArgs Empty => new DatasourceIPRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class DatasourceIPRoutesResult
    {
        public readonly int? ___id_;
        public readonly string? ___path_;
        /// <summary>
        /// Additional request filtering options.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.DatasourceIPRoutesRouteResult> Routes;

        [OutputConstructor]
        private DatasourceIPRoutesResult(
            int? ___id_,

            string? ___path_,

            ImmutableDictionary<string, object>? filter,

            string id,

            ImmutableArray<Outputs.DatasourceIPRoutesRouteResult> routes)
        {
            this.___id_ = ___id_;
            this.___path_ = ___path_;
            Filter = filter;
            Id = id;
            Routes = routes;
        }
    }
}
