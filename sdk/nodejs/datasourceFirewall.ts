// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # routeros.DatasourceFirewall (Data Source)
 *
 * This datasource contains all supported firewall resources:
 * - addressList
 * - nat
 * - mangle
 * - rules (aka filter)
 */
export function datasourceFirewall(args?: DatasourceFirewallArgs, opts?: pulumi.InvokeOptions): Promise<DatasourceFirewallResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("routeros:index/datasourceFirewall:DatasourceFirewall", {
        "addressLists": args.addressLists,
        "mangles": args.mangles,
        "nats": args.nats,
        "rules": args.rules,
    }, opts);
}

/**
 * A collection of arguments for invoking DatasourceFirewall.
 */
export interface DatasourceFirewallArgs {
    addressLists?: inputs.DatasourceFirewallAddressList[];
    mangles?: inputs.DatasourceFirewallMangle[];
    nats?: inputs.DatasourceFirewallNat[];
    rules?: inputs.DatasourceFirewallRule[];
}

/**
 * A collection of values returned by DatasourceFirewall.
 */
export interface DatasourceFirewallResult {
    readonly addressLists: outputs.DatasourceFirewallAddressList[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly mangles: outputs.DatasourceFirewallMangle[];
    readonly nats: outputs.DatasourceFirewallNat[];
    readonly rules: outputs.DatasourceFirewallRule[];
}
/**
 * ## # routeros.DatasourceFirewall (Data Source)
 *
 * This datasource contains all supported firewall resources:
 * - addressList
 * - nat
 * - mangle
 * - rules (aka filter)
 */
export function datasourceFirewallOutput(args?: DatasourceFirewallOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<DatasourceFirewallResult> {
    return pulumi.output(args).apply((a: any) => datasourceFirewall(a, opts))
}

/**
 * A collection of arguments for invoking DatasourceFirewall.
 */
export interface DatasourceFirewallOutputArgs {
    addressLists?: pulumi.Input<pulumi.Input<inputs.DatasourceFirewallAddressListArgs>[]>;
    mangles?: pulumi.Input<pulumi.Input<inputs.DatasourceFirewallMangleArgs>[]>;
    nats?: pulumi.Input<pulumi.Input<inputs.DatasourceFirewallNatArgs>[]>;
    rules?: pulumi.Input<pulumi.Input<inputs.DatasourceFirewallRuleArgs>[]>;
}
