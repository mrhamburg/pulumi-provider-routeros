// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as routeros from "@pulumi/routeros";
 *
 * const testDatapath = new routeros.ResourceCapsManDatapath("testDatapath", {
 *     arp: "local-proxy-arp",
 *     bridge: "bridge",
 *     bridgeCost: 100,
 *     bridgeHorizon: 200,
 *     clientToClientForwarding: true,
 *     comment: "test_datapath",
 *     interfaceList: "static",
 *     l2mtu: 1450,
 *     localForwarding: true,
 *     mtu: 1500,
 *     vlanId: 101,
 *     vlanMode: "no-tag",
 * });
 * ```
 *
 * ## Import
 *
 * Import with the name of the CAPsMAN datapath configuration in case of the example use test-datapath-config
 *
 * ```sh
 *  $ pulumi import routeros:index/resourceCapsManDatapath:ResourceCapsManDatapath test_datapath test-datapath-config
 * ```
 */
export class ResourceCapsManDatapath extends pulumi.CustomResource {
    /**
     * Get an existing ResourceCapsManDatapath resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceCapsManDatapathState, opts?: pulumi.CustomResourceOptions): ResourceCapsManDatapath {
        return new ResourceCapsManDatapath(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/resourceCapsManDatapath:ResourceCapsManDatapath';

    /**
     * Returns true if the given object is an instance of ResourceCapsManDatapath.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceCapsManDatapath {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceCapsManDatapath.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * ARP mode. See [docs](https://wiki.mikrotik.com/wiki/Manual:IP/ARP#ARP_Modes) for info.
     */
    public readonly arp!: pulumi.Output<string | undefined>;
    /**
     * Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
     */
    public readonly bridge!: pulumi.Output<string | undefined>;
    /**
     * Bridge port cost to use when adding as bridge port.
     */
    public readonly bridgeCost!: pulumi.Output<number | undefined>;
    /**
     * Bridge horizon to use when adding as bridge port.
     */
    public readonly bridgeHorizon!: pulumi.Output<number | undefined>;
    /**
     * Controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN.
     */
    public readonly clientToClientForwarding!: pulumi.Output<boolean | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Interface list name.
     */
    public readonly interfaceList!: pulumi.Output<string | undefined>;
    /**
     * Layer2 MTU size.
     */
    public readonly l2mtu!: pulumi.Output<number | undefined>;
    /**
     * Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then. See [docs](https://wiki.mikrotik.com/wiki/Manual:CAPsMAN#Local_Forwarding_Mode) for info.
     */
    public readonly localForwarding!: pulumi.Output<boolean | undefined>;
    /**
     * MTU size.
     */
    public readonly mtu!: pulumi.Output<number | undefined>;
    /**
     * Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
     * resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
     * integrity for that resource!
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * OpenFlow switch to add interface to, as port when enabled.
     */
    public readonly openflowSwitch!: pulumi.Output<string | undefined>;
    /**
     * VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging.
     */
    public readonly vlanId!: pulumi.Output<number | undefined>;
    /**
     * VLAN tagging mode specifies if VLAN tag should be assigned to interface (causes all received data to get tagged with VLAN tag and allows interface to only send out data tagged with given tag)
     */
    public readonly vlanMode!: pulumi.Output<string | undefined>;

    /**
     * Create a ResourceCapsManDatapath resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResourceCapsManDatapathArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceCapsManDatapathArgs | ResourceCapsManDatapathState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceCapsManDatapathState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["arp"] = state ? state.arp : undefined;
            resourceInputs["bridge"] = state ? state.bridge : undefined;
            resourceInputs["bridgeCost"] = state ? state.bridgeCost : undefined;
            resourceInputs["bridgeHorizon"] = state ? state.bridgeHorizon : undefined;
            resourceInputs["clientToClientForwarding"] = state ? state.clientToClientForwarding : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["interfaceList"] = state ? state.interfaceList : undefined;
            resourceInputs["l2mtu"] = state ? state.l2mtu : undefined;
            resourceInputs["localForwarding"] = state ? state.localForwarding : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["openflowSwitch"] = state ? state.openflowSwitch : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
            resourceInputs["vlanMode"] = state ? state.vlanMode : undefined;
        } else {
            const args = argsOrState as ResourceCapsManDatapathArgs | undefined;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["arp"] = args ? args.arp : undefined;
            resourceInputs["bridge"] = args ? args.bridge : undefined;
            resourceInputs["bridgeCost"] = args ? args.bridgeCost : undefined;
            resourceInputs["bridgeHorizon"] = args ? args.bridgeHorizon : undefined;
            resourceInputs["clientToClientForwarding"] = args ? args.clientToClientForwarding : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["interfaceList"] = args ? args.interfaceList : undefined;
            resourceInputs["l2mtu"] = args ? args.l2mtu : undefined;
            resourceInputs["localForwarding"] = args ? args.localForwarding : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["openflowSwitch"] = args ? args.openflowSwitch : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["vlanMode"] = args ? args.vlanMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceCapsManDatapath.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceCapsManDatapath resources.
 */
export interface ResourceCapsManDatapathState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * ARP mode. See [docs](https://wiki.mikrotik.com/wiki/Manual:IP/ARP#ARP_Modes) for info.
     */
    arp?: pulumi.Input<string>;
    /**
     * Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
     */
    bridge?: pulumi.Input<string>;
    /**
     * Bridge port cost to use when adding as bridge port.
     */
    bridgeCost?: pulumi.Input<number>;
    /**
     * Bridge horizon to use when adding as bridge port.
     */
    bridgeHorizon?: pulumi.Input<number>;
    /**
     * Controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN.
     */
    clientToClientForwarding?: pulumi.Input<boolean>;
    comment?: pulumi.Input<string>;
    /**
     * Interface list name.
     */
    interfaceList?: pulumi.Input<string>;
    /**
     * Layer2 MTU size.
     */
    l2mtu?: pulumi.Input<number>;
    /**
     * Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then. See [docs](https://wiki.mikrotik.com/wiki/Manual:CAPsMAN#Local_Forwarding_Mode) for info.
     */
    localForwarding?: pulumi.Input<boolean>;
    /**
     * MTU size.
     */
    mtu?: pulumi.Input<number>;
    /**
     * Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
     * resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
     * integrity for that resource!
     */
    name?: pulumi.Input<string>;
    /**
     * OpenFlow switch to add interface to, as port when enabled.
     */
    openflowSwitch?: pulumi.Input<string>;
    /**
     * VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging.
     */
    vlanId?: pulumi.Input<number>;
    /**
     * VLAN tagging mode specifies if VLAN tag should be assigned to interface (causes all received data to get tagged with VLAN tag and allows interface to only send out data tagged with given tag)
     */
    vlanMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourceCapsManDatapath resource.
 */
export interface ResourceCapsManDatapathArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * ARP mode. See [docs](https://wiki.mikrotik.com/wiki/Manual:IP/ARP#ARP_Modes) for info.
     */
    arp?: pulumi.Input<string>;
    /**
     * Bridge to which particular interface should be automatically added as port. Required only when local-forwarding is not used.
     */
    bridge?: pulumi.Input<string>;
    /**
     * Bridge port cost to use when adding as bridge port.
     */
    bridgeCost?: pulumi.Input<number>;
    /**
     * Bridge horizon to use when adding as bridge port.
     */
    bridgeHorizon?: pulumi.Input<number>;
    /**
     * Controls if client-to-client forwarding between wireless clients connected to interface should be allowed, in local forwarding mode this function is performed by CAP, otherwise it is performed by CAPsMAN.
     */
    clientToClientForwarding?: pulumi.Input<boolean>;
    comment?: pulumi.Input<string>;
    /**
     * Interface list name.
     */
    interfaceList?: pulumi.Input<string>;
    /**
     * Layer2 MTU size.
     */
    l2mtu?: pulumi.Input<number>;
    /**
     * Controls forwarding mode. If disabled, all L2 and L3 data will be forwarded to CAPsMAN, and further forwarding decisions will be made only then. See [docs](https://wiki.mikrotik.com/wiki/Manual:CAPsMAN#Local_Forwarding_Mode) for info.
     */
    localForwarding?: pulumi.Input<boolean>;
    /**
     * MTU size.
     */
    mtu?: pulumi.Input<number>;
    /**
     * Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
     * resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
     * integrity for that resource!
     */
    name?: pulumi.Input<string>;
    /**
     * OpenFlow switch to add interface to, as port when enabled.
     */
    openflowSwitch?: pulumi.Input<string>;
    /**
     * VLAN ID to assign to interface if vlan-mode enables use of VLAN tagging.
     */
    vlanId?: pulumi.Input<number>;
    /**
     * VLAN tagging mode specifies if VLAN tag should be assigned to interface (causes all received data to get tagged with VLAN tag and allows interface to only send out data tagged with given tag)
     */
    vlanMode?: pulumi.Input<string>;
}
