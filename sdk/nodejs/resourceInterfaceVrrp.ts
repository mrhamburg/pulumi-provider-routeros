// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as routeros from "@pulumi/routeros";
 *
 * const interfaceVrrp = new routeros.ResourceInterfaceVrrp("interfaceVrrp", {"interface": "bridge"});
 * ```
 *
 * ## Import
 *
 * #The ID can be found via API or the terminal #The command for the terminal is -> :put [/interface/vrrp get [print show-ids]]
 *
 * ```sh
 *  $ pulumi import routeros:index/resourceInterfaceVrrp:ResourceInterfaceVrrp interface_vrrp "*0"
 * ```
 */
export class ResourceInterfaceVrrp extends pulumi.CustomResource {
    /**
     * Get an existing ResourceInterfaceVrrp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceInterfaceVrrpState, opts?: pulumi.CustomResourceOptions): ResourceInterfaceVrrp {
        return new ResourceInterfaceVrrp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/resourceInterfaceVrrp:ResourceInterfaceVrrp';

    /**
     * Returns true if the given object is an instance of ResourceInterfaceVrrp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceInterfaceVrrp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceInterfaceVrrp.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * ARP resolution protocol mode.
     */
    public readonly arp!: pulumi.Output<string | undefined>;
    /**
     * ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
     */
    public readonly arpTimeout!: pulumi.Output<string | undefined>;
    /**
     * Authentication method to use for VRRP advertisement packets.
     */
    public readonly authentication!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * Allows combining multiple VRRP interfaces to maintain the same VRRP status within the group.
     */
    public readonly groupMaster!: pulumi.Output<string>;
    /**
     * Name of the interface.
     */
    public readonly interface!: pulumi.Output<string>;
    /**
     * VRRP update interval in seconds. Defines how often master sends advertisement packets.
     */
    public readonly interval!: pulumi.Output<string | undefined>;
    public /*out*/ readonly invalid!: pulumi.Output<boolean>;
    public /*out*/ readonly macAddress!: pulumi.Output<string>;
    /**
     * Layer3 Maximum transmission unit ('auto', 0 .. 65535)
     */
    public readonly mtu!: pulumi.Output<string>;
    /**
     * Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
     * resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
     * integrity for that resource!
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Script to execute when the node is switched to the backup state.
     */
    public readonly onBackup!: pulumi.Output<string | undefined>;
    /**
     * Script to execute when the node fails.
     */
    public readonly onFail!: pulumi.Output<string | undefined>;
    /**
     * Script to execute when the node is switched to master state.
     */
    public readonly onMaster!: pulumi.Output<string | undefined>;
    /**
     * Password required for authentication. Can be ignored if authentication is not used.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Whether the master node always has the priority. When set to 'no' the backup node will not be elected to be a master until the current master fails, even if the backup node has higher priority than the current master. This setting is ignored if the owner router becomes available
     */
    public readonly preemptionMode!: pulumi.Output<boolean | undefined>;
    /**
     * Priority of VRRP node used in Master election algorithm. A higher number means higher priority. '255' is reserved for the router that owns VR IP and '0' is reserved for the Master router to indicate that it is releasing responsibility.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * Specifies the remote address of the other VRRP router for syncing connection tracking. If not set, the system autodetects the remote address via VRRP. The remote address is used only if sync-connection-tracking=yes.Sync connection tracking uses UDP port 8275.
     */
    public readonly remoteAddress!: pulumi.Output<string | undefined>;
    public /*out*/ readonly running!: pulumi.Output<boolean>;
    /**
     * Synchronize connection tracking entries from Master to Backup device.
     */
    public readonly syncConnectionTracking!: pulumi.Output<boolean | undefined>;
    /**
     * A protocol that will be used by VRRPv3. Valid only if the version is 3.
     */
    public readonly v3Protocol!: pulumi.Output<string | undefined>;
    /**
     * Which VRRP version to use.
     */
    public readonly version!: pulumi.Output<number | undefined>;
    /**
     * Virtual Router identifier. Each Virtual router must have a unique id number.
     */
    public readonly vrid!: pulumi.Output<number | undefined>;

    /**
     * Create a ResourceInterfaceVrrp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceInterfaceVrrpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceInterfaceVrrpArgs | ResourceInterfaceVrrpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceInterfaceVrrpState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["arp"] = state ? state.arp : undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["groupMaster"] = state ? state.groupMaster : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interval"] = state ? state.interval : undefined;
            resourceInputs["invalid"] = state ? state.invalid : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onBackup"] = state ? state.onBackup : undefined;
            resourceInputs["onFail"] = state ? state.onFail : undefined;
            resourceInputs["onMaster"] = state ? state.onMaster : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["preemptionMode"] = state ? state.preemptionMode : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["remoteAddress"] = state ? state.remoteAddress : undefined;
            resourceInputs["running"] = state ? state.running : undefined;
            resourceInputs["syncConnectionTracking"] = state ? state.syncConnectionTracking : undefined;
            resourceInputs["v3Protocol"] = state ? state.v3Protocol : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vrid"] = state ? state.vrid : undefined;
        } else {
            const args = argsOrState as ResourceInterfaceVrrpArgs | undefined;
            if ((!args || args.interface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interface'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["arp"] = args ? args.arp : undefined;
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["groupMaster"] = args ? args.groupMaster : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interval"] = args ? args.interval : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onBackup"] = args ? args.onBackup : undefined;
            resourceInputs["onFail"] = args ? args.onFail : undefined;
            resourceInputs["onMaster"] = args ? args.onMaster : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["preemptionMode"] = args ? args.preemptionMode : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["remoteAddress"] = args ? args.remoteAddress : undefined;
            resourceInputs["syncConnectionTracking"] = args ? args.syncConnectionTracking : undefined;
            resourceInputs["v3Protocol"] = args ? args.v3Protocol : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["vrid"] = args ? args.vrid : undefined;
            resourceInputs["invalid"] = undefined /*out*/;
            resourceInputs["macAddress"] = undefined /*out*/;
            resourceInputs["running"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ResourceInterfaceVrrp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceInterfaceVrrp resources.
 */
export interface ResourceInterfaceVrrpState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * ARP resolution protocol mode.
     */
    arp?: pulumi.Input<string>;
    /**
     * ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
     */
    arpTimeout?: pulumi.Input<string>;
    /**
     * Authentication method to use for VRRP advertisement packets.
     */
    authentication?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Allows combining multiple VRRP interfaces to maintain the same VRRP status within the group.
     */
    groupMaster?: pulumi.Input<string>;
    /**
     * Name of the interface.
     */
    interface?: pulumi.Input<string>;
    /**
     * VRRP update interval in seconds. Defines how often master sends advertisement packets.
     */
    interval?: pulumi.Input<string>;
    invalid?: pulumi.Input<boolean>;
    macAddress?: pulumi.Input<string>;
    /**
     * Layer3 Maximum transmission unit ('auto', 0 .. 65535)
     */
    mtu?: pulumi.Input<string>;
    /**
     * Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
     * resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
     * integrity for that resource!
     */
    name?: pulumi.Input<string>;
    /**
     * Script to execute when the node is switched to the backup state.
     */
    onBackup?: pulumi.Input<string>;
    /**
     * Script to execute when the node fails.
     */
    onFail?: pulumi.Input<string>;
    /**
     * Script to execute when the node is switched to master state.
     */
    onMaster?: pulumi.Input<string>;
    /**
     * Password required for authentication. Can be ignored if authentication is not used.
     */
    password?: pulumi.Input<string>;
    /**
     * Whether the master node always has the priority. When set to 'no' the backup node will not be elected to be a master until the current master fails, even if the backup node has higher priority than the current master. This setting is ignored if the owner router becomes available
     */
    preemptionMode?: pulumi.Input<boolean>;
    /**
     * Priority of VRRP node used in Master election algorithm. A higher number means higher priority. '255' is reserved for the router that owns VR IP and '0' is reserved for the Master router to indicate that it is releasing responsibility.
     */
    priority?: pulumi.Input<number>;
    /**
     * Specifies the remote address of the other VRRP router for syncing connection tracking. If not set, the system autodetects the remote address via VRRP. The remote address is used only if sync-connection-tracking=yes.Sync connection tracking uses UDP port 8275.
     */
    remoteAddress?: pulumi.Input<string>;
    running?: pulumi.Input<boolean>;
    /**
     * Synchronize connection tracking entries from Master to Backup device.
     */
    syncConnectionTracking?: pulumi.Input<boolean>;
    /**
     * A protocol that will be used by VRRPv3. Valid only if the version is 3.
     */
    v3Protocol?: pulumi.Input<string>;
    /**
     * Which VRRP version to use.
     */
    version?: pulumi.Input<number>;
    /**
     * Virtual Router identifier. Each Virtual router must have a unique id number.
     */
    vrid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ResourceInterfaceVrrp resource.
 */
export interface ResourceInterfaceVrrpArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * ARP resolution protocol mode.
     */
    arp?: pulumi.Input<string>;
    /**
     * ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
     */
    arpTimeout?: pulumi.Input<string>;
    /**
     * Authentication method to use for VRRP advertisement packets.
     */
    authentication?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Allows combining multiple VRRP interfaces to maintain the same VRRP status within the group.
     */
    groupMaster?: pulumi.Input<string>;
    /**
     * Name of the interface.
     */
    interface: pulumi.Input<string>;
    /**
     * VRRP update interval in seconds. Defines how often master sends advertisement packets.
     */
    interval?: pulumi.Input<string>;
    /**
     * Layer3 Maximum transmission unit ('auto', 0 .. 65535)
     */
    mtu?: pulumi.Input<string>;
    /**
     * Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
     * resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
     * integrity for that resource!
     */
    name?: pulumi.Input<string>;
    /**
     * Script to execute when the node is switched to the backup state.
     */
    onBackup?: pulumi.Input<string>;
    /**
     * Script to execute when the node fails.
     */
    onFail?: pulumi.Input<string>;
    /**
     * Script to execute when the node is switched to master state.
     */
    onMaster?: pulumi.Input<string>;
    /**
     * Password required for authentication. Can be ignored if authentication is not used.
     */
    password?: pulumi.Input<string>;
    /**
     * Whether the master node always has the priority. When set to 'no' the backup node will not be elected to be a master until the current master fails, even if the backup node has higher priority than the current master. This setting is ignored if the owner router becomes available
     */
    preemptionMode?: pulumi.Input<boolean>;
    /**
     * Priority of VRRP node used in Master election algorithm. A higher number means higher priority. '255' is reserved for the router that owns VR IP and '0' is reserved for the Master router to indicate that it is releasing responsibility.
     */
    priority?: pulumi.Input<number>;
    /**
     * Specifies the remote address of the other VRRP router for syncing connection tracking. If not set, the system autodetects the remote address via VRRP. The remote address is used only if sync-connection-tracking=yes.Sync connection tracking uses UDP port 8275.
     */
    remoteAddress?: pulumi.Input<string>;
    /**
     * Synchronize connection tracking entries from Master to Backup device.
     */
    syncConnectionTracking?: pulumi.Input<boolean>;
    /**
     * A protocol that will be used by VRRPv3. Valid only if the version is 3.
     */
    v3Protocol?: pulumi.Input<string>;
    /**
     * Which VRRP version to use.
     */
    version?: pulumi.Input<number>;
    /**
     * Virtual Router identifier. Each Virtual router must have a unique id number.
     */
    vrid?: pulumi.Input<number>;
}
