# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'CertificateSign',
]

@pulumi.output_type
class CertificateSign(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "caCrlHost":
            suggest = "ca_crl_host"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in CertificateSign. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        CertificateSign.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        CertificateSign.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ca: Optional[str] = None,
                 ca_crl_host: Optional[str] = None):
        """
        :param str ca: Which CA to use if signing issued certificates.
        :param str ca_crl_host: CRL host if issuing CA certificate.
        """
        if ca is not None:
            pulumi.set(__self__, "ca", ca)
        if ca_crl_host is not None:
            pulumi.set(__self__, "ca_crl_host", ca_crl_host)

    @property
    @pulumi.getter
    def ca(self) -> Optional[str]:
        """
        Which CA to use if signing issued certificates.
        """
        return pulumi.get(self, "ca")

    @property
    @pulumi.getter(name="caCrlHost")
    def ca_crl_host(self) -> Optional[str]:
        """
        CRL host if issuing CA certificate.
        """
        return pulumi.get(self, "ca_crl_host")


