# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['ResourceInterfaceVlanArgs', 'ResourceInterfaceVlan']

@pulumi.input_type
class ResourceInterfaceVlanArgs:
    def __init__(__self__, *,
                 interface: pulumi.Input[str],
                 vlan_id: pulumi.Input[int],
                 ___id_: Optional[pulumi.Input[int]] = None,
                 ___path_: Optional[pulumi.Input[str]] = None,
                 arp: Optional[pulumi.Input[str]] = None,
                 arp_timeout: Optional[pulumi.Input[str]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 disabled: Optional[pulumi.Input[bool]] = None,
                 loop_protect: Optional[pulumi.Input[str]] = None,
                 loop_protect_disable_time: Optional[pulumi.Input[str]] = None,
                 loop_protect_send_interval: Optional[pulumi.Input[str]] = None,
                 mtu: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 use_service_tag: Optional[pulumi.Input[bool]] = None):
        """
        The set of arguments for constructing a ResourceInterfaceVlan resource.
        :param pulumi.Input[str] interface: Name of the interface.
        :param pulumi.Input[int] ___id_: <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
        :param pulumi.Input[str] ___path_: <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
        :param pulumi.Input[str] arp: ARP resolution protocol mode.
        :param pulumi.Input[str] arp_timeout: ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
        :param pulumi.Input[str] mtu: Layer3 Maximum transmission unit ('auto', 0 .. 65535)
        :param pulumi.Input[str] name: Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
               resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
               integrity for that resource!
        """
        pulumi.set(__self__, "interface", interface)
        pulumi.set(__self__, "vlan_id", vlan_id)
        if ___id_ is not None:
            pulumi.set(__self__, "___id_", ___id_)
        if ___path_ is not None:
            pulumi.set(__self__, "___path_", ___path_)
        if arp is not None:
            pulumi.set(__self__, "arp", arp)
        if arp_timeout is not None:
            pulumi.set(__self__, "arp_timeout", arp_timeout)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if disabled is not None:
            pulumi.set(__self__, "disabled", disabled)
        if loop_protect is not None:
            pulumi.set(__self__, "loop_protect", loop_protect)
        if loop_protect_disable_time is not None:
            pulumi.set(__self__, "loop_protect_disable_time", loop_protect_disable_time)
        if loop_protect_send_interval is not None:
            pulumi.set(__self__, "loop_protect_send_interval", loop_protect_send_interval)
        if mtu is not None:
            pulumi.set(__self__, "mtu", mtu)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if use_service_tag is not None:
            pulumi.set(__self__, "use_service_tag", use_service_tag)

    @property
    @pulumi.getter
    def interface(self) -> pulumi.Input[str]:
        """
        Name of the interface.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: pulumi.Input[str]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> pulumi.Input[int]:
        return pulumi.get(self, "vlan_id")

    @vlan_id.setter
    def vlan_id(self, value: pulumi.Input[int]):
        pulumi.set(self, "vlan_id", value)

    @property
    @pulumi.getter
    def ___id_(self) -> Optional[pulumi.Input[int]]:
        """
        <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
        """
        return pulumi.get(self, "___id_")

    @___id_.setter
    def ___id_(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "___id_", value)

    @property
    @pulumi.getter
    def ___path_(self) -> Optional[pulumi.Input[str]]:
        """
        <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
        """
        return pulumi.get(self, "___path_")

    @___path_.setter
    def ___path_(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "___path_", value)

    @property
    @pulumi.getter
    def arp(self) -> Optional[pulumi.Input[str]]:
        """
        ARP resolution protocol mode.
        """
        return pulumi.get(self, "arp")

    @arp.setter
    def arp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arp", value)

    @property
    @pulumi.getter(name="arpTimeout")
    def arp_timeout(self) -> Optional[pulumi.Input[str]]:
        """
        ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
        """
        return pulumi.get(self, "arp_timeout")

    @arp_timeout.setter
    def arp_timeout(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arp_timeout", value)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter
    def disabled(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "disabled")

    @disabled.setter
    def disabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disabled", value)

    @property
    @pulumi.getter(name="loopProtect")
    def loop_protect(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "loop_protect")

    @loop_protect.setter
    def loop_protect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "loop_protect", value)

    @property
    @pulumi.getter(name="loopProtectDisableTime")
    def loop_protect_disable_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "loop_protect_disable_time")

    @loop_protect_disable_time.setter
    def loop_protect_disable_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "loop_protect_disable_time", value)

    @property
    @pulumi.getter(name="loopProtectSendInterval")
    def loop_protect_send_interval(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "loop_protect_send_interval")

    @loop_protect_send_interval.setter
    def loop_protect_send_interval(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "loop_protect_send_interval", value)

    @property
    @pulumi.getter
    def mtu(self) -> Optional[pulumi.Input[str]]:
        """
        Layer3 Maximum transmission unit ('auto', 0 .. 65535)
        """
        return pulumi.get(self, "mtu")

    @mtu.setter
    def mtu(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mtu", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
        resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
        integrity for that resource!
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="useServiceTag")
    def use_service_tag(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "use_service_tag")

    @use_service_tag.setter
    def use_service_tag(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "use_service_tag", value)


@pulumi.input_type
class _ResourceInterfaceVlanState:
    def __init__(__self__, *,
                 ___id_: Optional[pulumi.Input[int]] = None,
                 ___path_: Optional[pulumi.Input[str]] = None,
                 arp: Optional[pulumi.Input[str]] = None,
                 arp_timeout: Optional[pulumi.Input[str]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 disabled: Optional[pulumi.Input[bool]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 l2mtu: Optional[pulumi.Input[int]] = None,
                 loop_protect: Optional[pulumi.Input[str]] = None,
                 loop_protect_disable_time: Optional[pulumi.Input[str]] = None,
                 loop_protect_send_interval: Optional[pulumi.Input[str]] = None,
                 loop_protect_status: Optional[pulumi.Input[str]] = None,
                 mac_address: Optional[pulumi.Input[str]] = None,
                 mtu: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 running: Optional[pulumi.Input[bool]] = None,
                 use_service_tag: Optional[pulumi.Input[bool]] = None,
                 vlan_id: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering ResourceInterfaceVlan resources.
        :param pulumi.Input[int] ___id_: <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
        :param pulumi.Input[str] ___path_: <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
        :param pulumi.Input[str] arp: ARP resolution protocol mode.
        :param pulumi.Input[str] arp_timeout: ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
        :param pulumi.Input[str] interface: Name of the interface.
        :param pulumi.Input[int] l2mtu: Layer2 Maximum transmission unit.
        :param pulumi.Input[str] mtu: Layer3 Maximum transmission unit ('auto', 0 .. 65535)
        :param pulumi.Input[str] name: Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
               resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
               integrity for that resource!
        """
        if ___id_ is not None:
            pulumi.set(__self__, "___id_", ___id_)
        if ___path_ is not None:
            pulumi.set(__self__, "___path_", ___path_)
        if arp is not None:
            pulumi.set(__self__, "arp", arp)
        if arp_timeout is not None:
            pulumi.set(__self__, "arp_timeout", arp_timeout)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if disabled is not None:
            pulumi.set(__self__, "disabled", disabled)
        if interface is not None:
            pulumi.set(__self__, "interface", interface)
        if l2mtu is not None:
            pulumi.set(__self__, "l2mtu", l2mtu)
        if loop_protect is not None:
            pulumi.set(__self__, "loop_protect", loop_protect)
        if loop_protect_disable_time is not None:
            pulumi.set(__self__, "loop_protect_disable_time", loop_protect_disable_time)
        if loop_protect_send_interval is not None:
            pulumi.set(__self__, "loop_protect_send_interval", loop_protect_send_interval)
        if loop_protect_status is not None:
            pulumi.set(__self__, "loop_protect_status", loop_protect_status)
        if mac_address is not None:
            pulumi.set(__self__, "mac_address", mac_address)
        if mtu is not None:
            pulumi.set(__self__, "mtu", mtu)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if running is not None:
            pulumi.set(__self__, "running", running)
        if use_service_tag is not None:
            pulumi.set(__self__, "use_service_tag", use_service_tag)
        if vlan_id is not None:
            pulumi.set(__self__, "vlan_id", vlan_id)

    @property
    @pulumi.getter
    def ___id_(self) -> Optional[pulumi.Input[int]]:
        """
        <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
        """
        return pulumi.get(self, "___id_")

    @___id_.setter
    def ___id_(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "___id_", value)

    @property
    @pulumi.getter
    def ___path_(self) -> Optional[pulumi.Input[str]]:
        """
        <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
        """
        return pulumi.get(self, "___path_")

    @___path_.setter
    def ___path_(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "___path_", value)

    @property
    @pulumi.getter
    def arp(self) -> Optional[pulumi.Input[str]]:
        """
        ARP resolution protocol mode.
        """
        return pulumi.get(self, "arp")

    @arp.setter
    def arp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arp", value)

    @property
    @pulumi.getter(name="arpTimeout")
    def arp_timeout(self) -> Optional[pulumi.Input[str]]:
        """
        ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
        """
        return pulumi.get(self, "arp_timeout")

    @arp_timeout.setter
    def arp_timeout(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arp_timeout", value)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter
    def disabled(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "disabled")

    @disabled.setter
    def disabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disabled", value)

    @property
    @pulumi.getter
    def interface(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the interface.
        """
        return pulumi.get(self, "interface")

    @interface.setter
    def interface(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "interface", value)

    @property
    @pulumi.getter
    def l2mtu(self) -> Optional[pulumi.Input[int]]:
        """
        Layer2 Maximum transmission unit.
        """
        return pulumi.get(self, "l2mtu")

    @l2mtu.setter
    def l2mtu(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "l2mtu", value)

    @property
    @pulumi.getter(name="loopProtect")
    def loop_protect(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "loop_protect")

    @loop_protect.setter
    def loop_protect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "loop_protect", value)

    @property
    @pulumi.getter(name="loopProtectDisableTime")
    def loop_protect_disable_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "loop_protect_disable_time")

    @loop_protect_disable_time.setter
    def loop_protect_disable_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "loop_protect_disable_time", value)

    @property
    @pulumi.getter(name="loopProtectSendInterval")
    def loop_protect_send_interval(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "loop_protect_send_interval")

    @loop_protect_send_interval.setter
    def loop_protect_send_interval(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "loop_protect_send_interval", value)

    @property
    @pulumi.getter(name="loopProtectStatus")
    def loop_protect_status(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "loop_protect_status")

    @loop_protect_status.setter
    def loop_protect_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "loop_protect_status", value)

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "mac_address")

    @mac_address.setter
    def mac_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mac_address", value)

    @property
    @pulumi.getter
    def mtu(self) -> Optional[pulumi.Input[str]]:
        """
        Layer3 Maximum transmission unit ('auto', 0 .. 65535)
        """
        return pulumi.get(self, "mtu")

    @mtu.setter
    def mtu(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mtu", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
        resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
        integrity for that resource!
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def running(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "running")

    @running.setter
    def running(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "running", value)

    @property
    @pulumi.getter(name="useServiceTag")
    def use_service_tag(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "use_service_tag")

    @use_service_tag.setter
    def use_service_tag(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "use_service_tag", value)

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "vlan_id")

    @vlan_id.setter
    def vlan_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vlan_id", value)


class ResourceInterfaceVlan(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ___id_: Optional[pulumi.Input[int]] = None,
                 ___path_: Optional[pulumi.Input[str]] = None,
                 arp: Optional[pulumi.Input[str]] = None,
                 arp_timeout: Optional[pulumi.Input[str]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 disabled: Optional[pulumi.Input[bool]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 loop_protect: Optional[pulumi.Input[str]] = None,
                 loop_protect_disable_time: Optional[pulumi.Input[str]] = None,
                 loop_protect_send_interval: Optional[pulumi.Input[str]] = None,
                 mtu: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 use_service_tag: Optional[pulumi.Input[bool]] = None,
                 vlan_id: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        ## Example Usage

        ```python
        import pulumi
        import pulumi_routeros as routeros

        interface_vlan = routeros.ResourceInterfaceVlan("interfaceVlan",
            interface="bridge",
            vlan_id=50)
        ```

        ## Import

        Import with the name of the vlan interface in case of the example use VLAN_TEST

        ```sh
         $ pulumi import routeros:index/resourceInterfaceVlan:ResourceInterfaceVlan interface_vlan VLAN_TEST
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] ___id_: <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
        :param pulumi.Input[str] ___path_: <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
        :param pulumi.Input[str] arp: ARP resolution protocol mode.
        :param pulumi.Input[str] arp_timeout: ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
        :param pulumi.Input[str] interface: Name of the interface.
        :param pulumi.Input[str] mtu: Layer3 Maximum transmission unit ('auto', 0 .. 65535)
        :param pulumi.Input[str] name: Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
               resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
               integrity for that resource!
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ResourceInterfaceVlanArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Example Usage

        ```python
        import pulumi
        import pulumi_routeros as routeros

        interface_vlan = routeros.ResourceInterfaceVlan("interfaceVlan",
            interface="bridge",
            vlan_id=50)
        ```

        ## Import

        Import with the name of the vlan interface in case of the example use VLAN_TEST

        ```sh
         $ pulumi import routeros:index/resourceInterfaceVlan:ResourceInterfaceVlan interface_vlan VLAN_TEST
        ```

        :param str resource_name: The name of the resource.
        :param ResourceInterfaceVlanArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ResourceInterfaceVlanArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ___id_: Optional[pulumi.Input[int]] = None,
                 ___path_: Optional[pulumi.Input[str]] = None,
                 arp: Optional[pulumi.Input[str]] = None,
                 arp_timeout: Optional[pulumi.Input[str]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 disabled: Optional[pulumi.Input[bool]] = None,
                 interface: Optional[pulumi.Input[str]] = None,
                 loop_protect: Optional[pulumi.Input[str]] = None,
                 loop_protect_disable_time: Optional[pulumi.Input[str]] = None,
                 loop_protect_send_interval: Optional[pulumi.Input[str]] = None,
                 mtu: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 use_service_tag: Optional[pulumi.Input[bool]] = None,
                 vlan_id: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ResourceInterfaceVlanArgs.__new__(ResourceInterfaceVlanArgs)

            __props__.__dict__["___id_"] = ___id_
            __props__.__dict__["___path_"] = ___path_
            __props__.__dict__["arp"] = arp
            __props__.__dict__["arp_timeout"] = arp_timeout
            __props__.__dict__["comment"] = comment
            __props__.__dict__["disabled"] = disabled
            if interface is None and not opts.urn:
                raise TypeError("Missing required property 'interface'")
            __props__.__dict__["interface"] = interface
            __props__.__dict__["loop_protect"] = loop_protect
            __props__.__dict__["loop_protect_disable_time"] = loop_protect_disable_time
            __props__.__dict__["loop_protect_send_interval"] = loop_protect_send_interval
            __props__.__dict__["mtu"] = mtu
            __props__.__dict__["name"] = name
            __props__.__dict__["use_service_tag"] = use_service_tag
            if vlan_id is None and not opts.urn:
                raise TypeError("Missing required property 'vlan_id'")
            __props__.__dict__["vlan_id"] = vlan_id
            __props__.__dict__["l2mtu"] = None
            __props__.__dict__["loop_protect_status"] = None
            __props__.__dict__["mac_address"] = None
            __props__.__dict__["running"] = None
        super(ResourceInterfaceVlan, __self__).__init__(
            'routeros:index/resourceInterfaceVlan:ResourceInterfaceVlan',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ___id_: Optional[pulumi.Input[int]] = None,
            ___path_: Optional[pulumi.Input[str]] = None,
            arp: Optional[pulumi.Input[str]] = None,
            arp_timeout: Optional[pulumi.Input[str]] = None,
            comment: Optional[pulumi.Input[str]] = None,
            disabled: Optional[pulumi.Input[bool]] = None,
            interface: Optional[pulumi.Input[str]] = None,
            l2mtu: Optional[pulumi.Input[int]] = None,
            loop_protect: Optional[pulumi.Input[str]] = None,
            loop_protect_disable_time: Optional[pulumi.Input[str]] = None,
            loop_protect_send_interval: Optional[pulumi.Input[str]] = None,
            loop_protect_status: Optional[pulumi.Input[str]] = None,
            mac_address: Optional[pulumi.Input[str]] = None,
            mtu: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            running: Optional[pulumi.Input[bool]] = None,
            use_service_tag: Optional[pulumi.Input[bool]] = None,
            vlan_id: Optional[pulumi.Input[int]] = None) -> 'ResourceInterfaceVlan':
        """
        Get an existing ResourceInterfaceVlan resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] ___id_: <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
        :param pulumi.Input[str] ___path_: <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
        :param pulumi.Input[str] arp: ARP resolution protocol mode.
        :param pulumi.Input[str] arp_timeout: ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
        :param pulumi.Input[str] interface: Name of the interface.
        :param pulumi.Input[int] l2mtu: Layer2 Maximum transmission unit.
        :param pulumi.Input[str] mtu: Layer3 Maximum transmission unit ('auto', 0 .. 65535)
        :param pulumi.Input[str] name: Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
               resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
               integrity for that resource!
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ResourceInterfaceVlanState.__new__(_ResourceInterfaceVlanState)

        __props__.__dict__["___id_"] = ___id_
        __props__.__dict__["___path_"] = ___path_
        __props__.__dict__["arp"] = arp
        __props__.__dict__["arp_timeout"] = arp_timeout
        __props__.__dict__["comment"] = comment
        __props__.__dict__["disabled"] = disabled
        __props__.__dict__["interface"] = interface
        __props__.__dict__["l2mtu"] = l2mtu
        __props__.__dict__["loop_protect"] = loop_protect
        __props__.__dict__["loop_protect_disable_time"] = loop_protect_disable_time
        __props__.__dict__["loop_protect_send_interval"] = loop_protect_send_interval
        __props__.__dict__["loop_protect_status"] = loop_protect_status
        __props__.__dict__["mac_address"] = mac_address
        __props__.__dict__["mtu"] = mtu
        __props__.__dict__["name"] = name
        __props__.__dict__["running"] = running
        __props__.__dict__["use_service_tag"] = use_service_tag
        __props__.__dict__["vlan_id"] = vlan_id
        return ResourceInterfaceVlan(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def ___id_(self) -> pulumi.Output[Optional[int]]:
        """
        <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
        """
        return pulumi.get(self, "___id_")

    @property
    @pulumi.getter
    def ___path_(self) -> pulumi.Output[Optional[str]]:
        """
        <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
        """
        return pulumi.get(self, "___path_")

    @property
    @pulumi.getter
    def arp(self) -> pulumi.Output[Optional[str]]:
        """
        ARP resolution protocol mode.
        """
        return pulumi.get(self, "arp")

    @property
    @pulumi.getter(name="arpTimeout")
    def arp_timeout(self) -> pulumi.Output[Optional[str]]:
        """
        ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds, minutes, hours or days. If no postfix is set then seconds (s) is used.
        """
        return pulumi.get(self, "arp_timeout")

    @property
    @pulumi.getter
    def comment(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "comment")

    @property
    @pulumi.getter
    def disabled(self) -> pulumi.Output[Optional[bool]]:
        return pulumi.get(self, "disabled")

    @property
    @pulumi.getter
    def interface(self) -> pulumi.Output[str]:
        """
        Name of the interface.
        """
        return pulumi.get(self, "interface")

    @property
    @pulumi.getter
    def l2mtu(self) -> pulumi.Output[int]:
        """
        Layer2 Maximum transmission unit.
        """
        return pulumi.get(self, "l2mtu")

    @property
    @pulumi.getter(name="loopProtect")
    def loop_protect(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "loop_protect")

    @property
    @pulumi.getter(name="loopProtectDisableTime")
    def loop_protect_disable_time(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "loop_protect_disable_time")

    @property
    @pulumi.getter(name="loopProtectSendInterval")
    def loop_protect_send_interval(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "loop_protect_send_interval")

    @property
    @pulumi.getter(name="loopProtectStatus")
    def loop_protect_status(self) -> pulumi.Output[str]:
        return pulumi.get(self, "loop_protect_status")

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> pulumi.Output[str]:
        return pulumi.get(self, "mac_address")

    @property
    @pulumi.getter
    def mtu(self) -> pulumi.Output[str]:
        """
        Layer3 Maximum transmission unit ('auto', 0 .. 65535)
        """
        return pulumi.get(self, "mtu")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Changing the name of this resource will force it to be recreated. > The links of other configuration properties to this
        resource may be lost! > Changing the name of the resource outside of a Terraform will result in a loss of control
        integrity for that resource!
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def running(self) -> pulumi.Output[bool]:
        return pulumi.get(self, "running")

    @property
    @pulumi.getter(name="useServiceTag")
    def use_service_tag(self) -> pulumi.Output[Optional[bool]]:
        return pulumi.get(self, "use_service_tag")

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> pulumi.Output[int]:
        return pulumi.get(self, "vlan_id")

