{
    "name": "routeros",
    "description": "A Pulumi package for creating and managing routeros cloud resources.",
    "keywords": [
        "pulumi",
        "routeros",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`routeros` Terraform Provider](https://github.com/terraform-providers/terraform-provider-routeros).",
    "repository": "https://github.com/mrhamburg/pulumi-provider-routeros",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-routeros/sdk/go/routeros"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing routeros cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-routeros)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-routeros` repo](https://github.com/mrhamburg/pulumi-provider-routeros/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-routeros` repo](https://github.com/terraform-providers/terraform-provider-routeros/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-routeros)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-routeros` repo](https://github.com/mrhamburg/pulumi-provider-routeros/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-routeros` repo](https://github.com/terraform-providers/terraform-provider-routeros/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "caCertificate": {
                "type": "string",
                "description": "Path to MikroTik's certificate authority file.\n"
            },
            "hosturl": {
                "type": "string",
                "description": "URL of the MikroTik router, default is TLS connection to REST. * API: api[s]://host[:port] * api://router.local *\napis://router.local:8729 * REST: https://host * https://router.local * router.local * 127.0.0.1 export\nROS_HOSTURL=router.local or export MIKROTIK_HOST=router.local\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Whether to verify the SSL certificate or not.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the MikroTik user.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the MikroTik WEB/Winbox. export ROS_USERNAME=admin or export MIKROTIK_USER=admin\n"
            }
        },
        "defaults": [
            "hosturl",
            "username"
        ]
    },
    "provider": {
        "description": "The provider type for the routeros package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "caCertificate": {
                "type": "string",
                "description": "Path to MikroTik's certificate authority file.\n"
            },
            "hosturl": {
                "type": "string",
                "description": "URL of the MikroTik router, default is TLS connection to REST. * API: api[s]://host[:port] * api://router.local *\napis://router.local:8729 * REST: https://host * https://router.local * router.local * 127.0.0.1 export\nROS_HOSTURL=router.local or export MIKROTIK_HOST=router.local\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Whether to verify the SSL certificate or not.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the MikroTik user.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the MikroTik WEB/Winbox. export ROS_USERNAME=admin or export MIKROTIK_USER=admin\n"
            }
        },
        "required": [
            "hosturl",
            "username"
        ],
        "inputProperties": {
            "caCertificate": {
                "type": "string",
                "description": "Path to MikroTik's certificate authority file.\n"
            },
            "hosturl": {
                "type": "string",
                "description": "URL of the MikroTik router, default is TLS connection to REST. * API: api[s]://host[:port] * api://router.local *\napis://router.local:8729 * REST: https://host * https://router.local * router.local * 127.0.0.1 export\nROS_HOSTURL=router.local or export MIKROTIK_HOST=router.local\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Whether to verify the SSL certificate or not.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the MikroTik user.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the MikroTik WEB/Winbox. export ROS_USERNAME=admin or export MIKROTIK_USER=admin\n"
            }
        },
        "requiredInputs": [
            "hosturl",
            "username"
        ]
    }
}